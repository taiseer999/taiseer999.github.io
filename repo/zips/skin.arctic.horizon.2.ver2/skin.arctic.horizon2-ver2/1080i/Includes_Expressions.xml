<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <expression name="Exp_EndWidget_IsFullSize">[String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Lovefilm)
        | String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Feature Banner)]</expression>
    <expression name="Exp_EndWidget_IsOverSize">[String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Feature
        Poster) | String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Feature
        Landscape)]</expression>
    <expression name="Exp_EndWidget_IsMiniSize">[String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Text)
        | String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Apps) |
        String.IsEqual(Container(99994).ListItem(-1).Property(widgetAspect),Button)]</expression>

    <expression name="Exp_InfoDialog_IsFolder">[$EXP[Exp_StringIsEqual_ListItemDBType_TVShow] |
        $EXP[Exp_StringIsEqual_ListItemDBType_Season] | $EXP[Exp_StringIsEqual_ListItemDBType_Set] |
        $EXP[Exp_StringIsEqual_ListItemDBType_Artist]]</expression>

    <expression name="Exp_OSD_ExpandInfo">[Window.IsVisible(videobookmarks) |
        Window.IsVisible(pvrchannelguide) | Window.IsVisible(1140) | Window.IsVisible(1141) |
        Window.IsVisible(1142) | [Window.IsVisible(fullscreeninfo) + !VideoPlayer.Content(livetv)]]</expression>

    <expression name="Exp_OSD_HasPlaylist">[$EXP[Exp_VideoPlayerContentEpisodes] |
        VideoPlayer.Content(livetv) | [$EXP[Exp_VideoPlayerContentMovies] +
        !$EXP[Exp_IntegerIsEqual_VideoPlayerPlaylistLength_1] +
        !$EXP[Exp_IntegerIsEqual_VideoPlayerPlaylistLength_0]]]</expression>

    <expression name="Exp_ShowBigPosterInfo">[$EXP[Exp_ControlHasFocus_58] +
        $EXP[Exp_SystemIdleTime3] +
        !$EXP[Exp_SkinSetting_ViewsDisableBigPosterRowAutoInfo]]</expression>

    <expression name="Exp_OSD_PVRChannelSwitch">[[VideoPlayer.Content(livetv) +
        !Window.Isvisible(videoosd)] + [!$EXP[Exp_StringIsEmpty_PVRChannelNumberInput] |
        $EXP[Exp_PlayerShowInfo] |
        Window.IsVisible(DialogFullScreenInfo.xml)]]</expression>

    <expression name="Exp_HomeBarVisible">[$EXP[Exp_ControlHasFocus_300] |
        $EXP[Exp_ControlHasFocus_399] |
        $EXP[Exp_ControlGroupHasFocus_303] | $EXP[Exp_ControlHasFocus_302] |
        $EXP[Exp_ControlGroupHasFocus_9000] |
        [$EXP[Exp_TMDBWidget_Container301] +
        [String.IsEqual(Container(300).ListItem.Property(widgetStyle),Fullscreen) |
        $EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetStyle]]]]</expression>

    <expression name="Exp_HasTempoShift">[!String.IsEmpty(Player.PlaySpeed) +
        !String.IsEqual(Player.PlaySpeed,1.00) + !String.IsEqual(Player.PlaySpeed,0.00)]</expression>

    <expression name="Exp_HasPlayerStatus">$EXP[Exp_PlayerCaching] | $EXP[Exp_PlayerPaused] |
        $EXP[Exp_PlayerRewinding] |
        $EXP[Exp_PlayerForwarding] | Player.Seeking | [$EXP[Exp_PlayerDisplayAfterSeek] +
        !$EXP[Exp_StringIsEmpty_PlayerSeekOffset]] | !$EXP[Exp_StringIsEmpty_PlayerSeekNumeric] |
        !$EXP[Exp_StringIsEmpty_PVRChannelNumberInput] | $EXP[Exp_HasTempoShift]</expression>

    <expression name="Exp_HasAutoCompletion">[$EXP[Exp_SystemHasAddon_AutoCompletion] +
        $EXP[Exp_SystemAddonIsEnabled_AutoCompletion] +
        !$EXP[Exp_SkinSetting_KeyboardDisableAutoCompletion]]</expression>

    <expression name="Exp_IsGenre">[$EXP[Exp_StringIsEqual_ListItemDBType_Genre] |
        String.IsEqual(ListItem.Property(dbtype),genre) | $EXP[Exp_ContainerContent_Genres]]</expression>
    <expression name="Exp_IsStudio">[$EXP[Exp_StringIsEqual_ListItemDBType_Studio] |
        String.IsEqual(ListItem.Property(dbtype),studio) | $EXP[Exp_ContainerContent_Studios]]</expression>
    <expression name="Exp_IsCountry">[$EXP[Exp_StringIsEqual_ListItemDBType_Country] |
        String.IsEqual(ListItem.Property(dbtype),country) | $EXP[Exp_ContainerContent_Countries]]</expression>

    <expression name="Exp_TMDbHelper_IsUpdating">[$EXP[Exp_WindowHomeProperty_TMDBHelperIsUpdating]
        | $EXP[Exp_WindowHomeProperty_TMDBHelperIsUpdatingRating]]</expression>

    <!-- TIER 1 OPTIMIZATIONS: Dialog System (WORKING PERFECTLY) -->
    <expression name="Exp_VideoInfoDialogs">[Window.IsVisible(DialogVideoInfo.xml) |
        Window.IsVisible(DialogMusicInfo.xml)]</expression>
    <expression name="Exp_SystemInfoDialogs">[Window.IsVisible(DialogAddonInfo.xml) |
        Window.IsVisible(DialogPVRInfo.xml)]</expression>
    <expression name="Exp_WikiDialog">Window.IsVisible(script-tmdbhelper-wikipedia.xml)</expression>
    <expression name="Exp_InfoDialogs">[$EXP[Exp_VideoInfoDialogs] | $EXP[Exp_SystemInfoDialogs] |
        $EXP[Exp_WikiDialog]]</expression>

    <expression name="Exp_VideoInfoDialogs_Active">[Window.IsActive(DialogVideoInfo.xml) |
        Window.IsActive(DialogMusicInfo.xml)]</expression>
    <expression name="Exp_SystemInfoDialogs_Active">[Window.IsActive(DialogAddonInfo.xml) |
        Window.IsActive(DialogPVRInfo.xml)]</expression>
    <expression name="Exp_WikiDialog_Active">Window.IsActive(script-tmdbhelper-wikipedia.xml)</expression>
    <expression name="Exp_InfoDialogs_Active">[$EXP[Exp_VideoInfoDialogs_Active] |
        $EXP[Exp_SystemInfoDialogs_Active] | $EXP[Exp_WikiDialog_Active]]</expression>

    <expression name="Exp_IsRecommendationWindow">
        Window.IsVisible(script-tmdbhelper-recommendations.xml)</expression>
    <expression name="Exp_RecommendationDialogs">$EXP[Exp_IsRecommendationWindow]</expression>

    <!-- TIER 2 OPTIMIZATIONS: Background Performance (WORKING PERFECTLY) -->
    <expression name="Exp_BackgroundStyle_None">Skin.String(BackgroundStyle,None)</expression>
    <expression name="Exp_BackgroundStyle_Image">Skin.String(BackgroundStyle,Image)</expression>
    <expression name="Exp_BackgroundStyle_Fanart">Skin.String(BackgroundStyle,Fanart)</expression>
    <expression name="Exp_BackgroundStyle_Blur">Skin.String(BackgroundStyle,Blur)</expression>

    <expression name="Exp_ForegroundStyle_KeyArt">Skin.String(ForegroundStyle,KeyArt)</expression>
    <expression name="Exp_ForegroundStyle_FlixArt">Skin.String(ForegroundStyle,FlixArt)</expression>

    <expression name="Exp_BackgroundStyle_BlurOrImage">[$EXP[Exp_BackgroundStyle_Blur] |
        $EXP[Exp_BackgroundStyle_Image]]</expression>
    <expression name="Exp_ForegroundStyle_Artwork">[$EXP[Exp_ForegroundStyle_KeyArt] |
        $EXP[Exp_ForegroundStyle_FlixArt]]</expression>

    <!-- TIER 3 OPTIMIZATIONS: View Performance (WORKING PERFECTLY) -->
    <expression name="Exp_IsUserDiscoverContent">
        String.IsEqual(Container.Property(param.info),user_discover)</expression>
    <expression name="Exp_View_Special">!$EXP[Exp_IsUserDiscoverContent]</expression>

    <expression name="Exp_Control502_Visible">Control.IsVisible(502)</expression>
    <expression name="Exp_Control512_Visible">Control.IsVisible(512)</expression>
    <expression name="Exp_Control522_Visible">Control.IsVisible(522)</expression>
    <expression name="Exp_Control572_Visible">Control.IsVisible(572)</expression>
    <expression name="Exp_CombinedViews">[$EXP[Exp_Control502_Visible] |
        $EXP[Exp_Control512_Visible] | $EXP[Exp_Control522_Visible] | $EXP[Exp_Control572_Visible]]</expression>

    <expression name="Exp_AlphabetFocusCondition">[Control.HasFocus(60) | Control.HasFocus(65)]</expression>
    <expression name="Exp_AlphabetSettingEnabled">!$EXP[Exp_SkinSetting_DisableAlphabetScrollbar]</expression>
    <expression name="Exp_AlphabetVisible">[$EXP[Exp_AlphabetFocusCondition] +
        $EXP[Exp_AlphabetTypes_Only] + $EXP[Exp_AlphabetSettingEnabled]]</expression>

    <expression name="Exp_ScrollbarControlFocus">[Control.HasFocus(60) | Control.HasFocus(63) |
        Control.HasFocus(64) | Control.HasFocus(65)]</expression>
    <expression name="Exp_HasPagesItems">$EXP[Exp_ScrollbarControlFocus]</expression>

    <expression name="Exp_HasProfileImageAvailable">[$EXP[Exp_SkinSetting_HomeShowProfileImage] +
        !String.IsEmpty(System.ProfileThumb)]</expression>
    <expression name="Exp_ProfileImageWindowCondition">[$EXP[Exp_WindowVisible_Home] |
        $EXP[Exp_SettingsDialogs]]</expression>
    <expression name="Exp_HasProfileImage">[$EXP[Exp_HasProfileImageAvailable] +
        $EXP[Exp_ProfileImageWindowCondition] + !$EXP[Exp_InfoDialogs]]</expression>

    <!-- TIER 4 OPTIMIZATIONS: Furniture Performance (WORKING PERFECTLY) -->
    <expression name="Exp_ContainerScrollingAlphabet">[Container.Scrolling +
        $EXP[Exp_AlphabetTypes_Only]]</expression>

    <expression name="Exp_WeatherAvailable">Weather.IsFetched</expression>
    <expression name="Exp_WeatherLargeMode">Skin.String(WeatherClock,Large)</expression>
    <expression name="Exp_WeatherSmallMode">Skin.String(WeatherClock,Small)</expression>
    <expression name="Exp_WeatherLargeDisplay">[$EXP[Exp_WeatherAvailable] +
        $EXP[Exp_WeatherLargeMode]]</expression>
    <expression name="Exp_WeatherSmallDisplay">[$EXP[Exp_WeatherAvailable] +
        $EXP[Exp_WeatherSmallMode]]</expression>

    <expression name="Exp_NotBusyDialogs">[!$EXP[Exp_WindowVisible_DialogBusy] +
        !$EXP[Exp_WindowVisible_DialogExtendedProgressBar] +
        !$EXP[Exp_WindowVisible_DialogNotification]]</expression>

    <expression name="Exp_FurnitureTopRightVisible">[$EXP[Exp_NotBusyDialogs_Complete] +
        $EXP[Exp_VolumeBarCondition]]</expression>


    <!-- ORIGINAL EXPRESSIONS (ESSENTIAL FOR FUNCTIONALITY) -->
    <expression name="Exp_HasBackgroundVideo">[Skin.HasSetting(UseBackgroundVideo) +
        $EXP[Exp_PlayerHasVideo]
        + ![$EXP[Exp_InfoDialogs] + !$EXP[Exp_StringIsEmpty_WindowHomePropertyHasTrailer]]]</expression>

    <expression name="Exp_HasBackgroundFanart">[[[$EXP[Exp_IsMediaWindow] |
        $EXP[Exp_HasBackgroundFanart_Widgets]] + !$EXP[Exp_InfoDialogs] +
        !String.IsEqual(Window.Property(Slide.WidgetInfoStyle),Lovefilm)] |
        $EXP[Exp_HasBackgroundFanart_InfoDialogs]]</expression>

    <expression name="Exp_HasBackgroundFanart_InfoDialogs">[$EXP[Exp_InfoDialogs] +
        !$EXP[Exp_SkinSetting_InfoEnableSimpleBackground]]</expression>

    <expression name="Exp_HasBackgroundFanart_Widgets">[$EXP[Exp_IsWidgetWindow] +
        [$EXP[Exp_SkinSetting_WidgetsDisableSimpleBackground] |
        [!$EXP[Exp_SkinSetting_WidgetsDisableExpandedBackground] + $EXP[Exp_IsExpandedWidget]]]]</expression>

    <expression name="Exp_IsExpandedWidget">[String.IsEqual(Window.Property(Slide.WidgetInfoStyle),Full)
        | [$EXP[Exp_TMDBWidget_Container301] +
        !$EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetPath] +
        !$EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetStyle] +
        !String.IsEqual(Container(300).ListItem.Property(WidgetPath),Fullscreen)]]</expression>

    <expression name="Exp_IsWidgetWindow">[$EXP[Exp_WindowActive_1114] | $EXP[Exp_WindowActive_Home]
        |
        Window.IsVisible(1120) | Window.IsVisible(1121) | Window.IsVisible(1122)]</expression>

    <expression name="Exp_IsMediaWindow">[Window.IsMedia | Window.IsVisible(MyPVRGUide.xml) |
        Window.IsVisible(MyPVRChannels.xml)]</expression>

    <expression name="Exp_HasExtraFanart">[$EXP[Exp_SkinSetting_BackgroundExtraFanart] +
        [!String.IsEmpty(ListItem.Art(fanart1)) | !String.IsEmpty(ListItem.Art(tvshow.fanart1))]]</expression>

    <expression name="Exp_HasArtLandscape">[!String.IsEmpty(ListItem.Art(landscape)) |
        !String.IsEmpty(ListItem.Art(tvshow.landscape)) |
        !String.IsEmpty(ListItem.Art(season.landscape))]</expression>

    <expression name="Exp_HasArtFanart">[!String.IsEmpty(ListItem.Art(fanart)) |
        !String.IsEmpty(ListItem.Art(tvshow.fanart)) | !String.IsEmpty(ListItem.Art(season.fanart))]</expression>

    <expression name="Exp_HasLandscapeFormatArt">[$EXP[Exp_HasArtFanart] | $EXP[Exp_HasArtLandscape]
        | !String.IsEmpty(ListItem.EPGEventIcon) | [!$EXP[Exp_IsPVRItem] +
        !String.IsEmpty(ListItem.Art(thumb))]]</expression>

    <expression name="Exp_HasWatchedProgress">[!$EXP[Exp_SkinSetting_IndicatorDisableProgress] +
        [[ListItem.IsResumable + !$EXP[Exp_IntegerIsEqual_ListItemPercentPlayed_0]] |
        [!String.IsEmpty(ListItem.Property(WatchedProgress)) +
        !$EXP[Exp_IntegerIsEqual_ListItemWatchedProgress_0]] |
        [!$EXP[Exp_IntegerIsEqual_ListItemProgress_0]]]]</expression>

    <expression name="Exp_IsPVRItem">[!String.IsEmpty(ListItem.ChannelNumberLabel) |
        String.IsEqual(ListItem.Path,pvr://channels/tv/)]</expression>

    <expression name="Exp_IsPersonInfo">[String.IsEqual(ListItem.Property(item.type),person) |
        String.IsEqual(ListItem.Property(tmdb_type),person)]</expression>

    <expression name="Exp_AlphabetTypes_Only">[$EXP[Exp_ContainerSortMethod_551] |
        $EXP[Exp_ContainerSortMethod_556] |
        $EXP[Exp_ContainerSortMethod_561] |
        $EXP[Exp_ContainerSortMethod_557] |
        $EXP[Exp_ContainerSortMethod_558]]</expression>

    <expression name="Exp_ContextMenu_HasPoster">[!String.IsEmpty(Container(99950).ListItem.Art(poster))
        | !String.IsEmpty(Container(99950).ListItem.Property(base_poster))]</expression>

    <expression name="Exp_ContextMenu_HasIcon">[!$EXP[Exp_ContextMenu_HasPoster] +
        !String.IsEmpty(Container(99950).ListItem.Property(base_icon))]</expression>

    <expression name="Exp_ContextMenu_HasQuickNav">[[$EXP[Exp_ContextMenu_HasPoster] |
        $EXP[Exp_ContextMenu_HasIcon]] +
        [!String.IsEmpty(Container(99950).ListITem.Property(base_dbtype)) |
        !String.IsEmpty(Container(99950).ListITem.DBType)]] +
        !$EXP[Exp_WindowVisible_FullscreenVideo] +
        !$EXP[Exp_WindowVisible_MusicVisualisation2] + !$EXP[Exp_WindowVisible_Favourites]</expression>

    <expression name="Exp_FullscreenWidgetStandard">[!$EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetPath]
        + [String.IsEqual(Container(300).ListItem.Property(widgetStyle),Fullscreen) |
        $EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetStyle]]]</expression>

    <expression name="Exp_PVRWindows">[Window.IsVisible(MyPVRGuide.xml) |
        Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRTimers.xml) |
        Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml)]</expression>

    <expression name="Exp_OverlayDialogs">[Window.IsVisible(FileBrowser.xml) |
        Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogAddonSettings.xml) |
        Window.IsVisible(DialogKeyboard.xml) | Window.Isvisible(1113) | Window.IsVisible(1111) |
        Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogConfirm.xml)]</expression>

    <expression name="Exp_SearchWindow">[Window.IsVisible(1114)]</expression>

    <expression name="Exp_WidgetWindow">[$EXP[Exp_WindowVisible_Home] | $EXP[Exp_SearchWindow] |
        $EXP[Exp_RecommendationDialogs]]</expression>

    <expression name="Exp_SettingsDialogs">[Window.IsVisible(SettingsCategory.xml) |
        Window.IsVisible(SkinSettings.xml) | Window.IsVisible(SettingsProfile.xml) |
        Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(EventLog.xml)]</expression>
    <expression name="Exp_SettingsDialogs_Next">[Window.Next(SettingsCategory.xml) |
        Window.Next(SkinSettings.xml) | Window.Next(SettingsProfile.xml) |
        Window.Next(SettingsSystemInfo.xml) | Window.Next(EventLog.xml) | Window.Next(1197)]</expression>
    <expression name="Exp_SettingsDialogs_Prev">[Window.Previous(SettingsCategory.xml) |
        Window.Previous(SkinSettings.xml) | Window.Previous(SettingsProfile.xml) |
        Window.Previous(SettingsSystemInfo.xml) | Window.Previous(EventLog.xml) |
        Window.Previous(1197)]</expression>

    <expression name="Exp_RowViews">[Control.IsVisible(50) | Control.IsVisible(51) |
        Control.IsVisible(52) | Control.IsVisible(56) | Control.IsVisible(57)]</expression>

    <expression name="Exp_ScrollViews">[Control.IsVisible(504) | Control.IsVisible(514) |
        Control.IsVisible(524)]</expression>

    <expression name="Exp_WallViews">[Control.IsVisible(500) | Control.IsVisible(510) |
        Control.IsVisible(520) | Control.IsVisible(540) | Control.IsVisible(570) |
        Control.IsVisible(580) | Control.IsVisible(550) | Control.IsVisible(560) |
        Control.IsVisible(54)]</expression>

    <expression name="Exp_ListViews">[Control.IsVisible(501) | Control.IsVisible(511) |
        Control.IsVisible(521) | Control.IsVisible(507) | Control.IsVisible(517) |
        Control.IsVisible(527) | Control.IsVisible(551)]</expression>

    <expression name="Exp_BigListViews">[Control.IsVisible(508) | Control.IsVisible(557) |
        Control.IsVisible(558) | Control.IsVisible(581)]</expression>

    <!-- ANIMATION OPTIMIZATION EXPRESSIONS -->
    <!-- Phase 2: Animation Performance Improvements -->

    <!-- TIER 1: High-frequency animation conditions -->
    <expression name="Exp_Control330_Visible">Control.IsVisible(330)</expression>
    <expression name="Exp_Control302_HasFocus">$EXP[Exp_ControlHasFocus_302]</expression>

    <!-- TIER 2: Container optimization conditions -->
    <expression name="Exp_Container301_Empty">Integer.IsEqual(Container(301).NumItems,0)</expression>
    <expression name="Exp_Container301_SingleBlank">[Integer.IsEqual(Container(301).NumItems,1) +
        !String.IsEmpty(Container(301).ListItemAbsolute(0).Property(blankitem))]</expression>
    <expression name="Exp_Container301_EmptyOrBlank">[$EXP[Exp_Container301_Empty] |
        $EXP[Exp_Container301_SingleBlank]]</expression>

    <!-- TIER 3: Complex boolean combinations -->
    <expression name="Exp_WindowNext1114">Window.Next(1114)</expression>
    <expression name="Exp_Container52_OnPrevious">Container(52).OnPrevious</expression>

    <!-- TIER 4: OSD and complex window conditions -->
    <expression name="Exp_OSD_Windows">[Window.IsVisible(videoosd) | Window.IsVisible(musicosd) |
        Window.IsVisible(script-cu-lrclyrics-main.xml)]</expression>
    <expression name="Exp_OSD_Combined">[$EXP[Exp_OSD_Windows] | $EXP[Exp_OSD_ExpandInfo]]</expression>

    <expression name="Exp_TMDBWidget_Container301">
        Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</expression>

    <!-- PHASE 3: Database Performance Optimization -->
    <expression name="Exp_DialogInfoFocusButtons">Skin.HasSetting(DialogInfo.FocusButtons)</expression>

    <expression name="Exp_IsMovieType">$EXP[Exp_StringIsEqual_ListItemDBType_Movie]</expression>

    <!-- PHASE 3B: Safe Condition Pattern Caching -->
    <!-- Complete condition patterns - no texture interference -->

    <!-- Art existence checks (safe - not texture paths) -->
    <expression name="Exp_HasFanartArt">!String.IsEmpty(ListItem.Art(fanart))</expression>
    <expression name="Exp_HasPosterArt">!String.IsEmpty(ListItem.Art(poster))</expression>
    <expression name="Exp_HasTVShowFanart">!String.IsEmpty(ListItem.Art(tvshow.fanart))</expression>

    <!-- Container content checks (safe - static types) -->
    <expression name="Exp_ContainerSongs">Container.Content(songs)</expression>
    <expression name="Exp_ContainerSeasons">Container.Content(seasons)</expression>
    <expression name="Exp_ContainerStudios">$EXP[Exp_ContainerContent_Studios]</expression>
    <expression name="Exp_ContainerAlbums">Container.Content(albums)</expression>

    <expression name="Exp_WindowIsMedia">Window.IsMedia</expression>

    <expression name="Exp_PlayerHasVideo">Player.HasVideo</expression>

    <expression name="Exp_VolumeDialogHidden">!Window.IsVisible(DialogVolumeBar.xml)</expression>
    <expression name="Exp_VolumeBarCondition">[$EXP[Exp_VolumeDialogHidden] | $EXP[Exp_PlayerMuted]]</expression>

    <!-- OSD SAFETY EXPRESSIONS -->
    <!-- Cache non-audio parts of OSD logic -->
    <expression name="Exp_VideoPlayerContentLiveTV">VideoPlayer.Content(livetv)</expression>
    <expression name="Exp_VideoPlayerContentEpisodes">VideoPlayer.Content(episodes)</expression>
    <expression name="Exp_VideoPlayerContentMovies">VideoPlayer.Content(movies)</expression>

    <!-- WINDOW VISIBILITY OPTIMIZATIONS (SAFE) -->
    <expression name="Exp_WindowVisible_VideoOSD">Window.IsVisible(videoosd)</expression>
    <expression name="Exp_WindowVisible_MusicOSD">Window.IsVisible(musicosd)</expression>
    <expression name="Exp_WindowVisible_LRCLyrics">Window.IsVisible(script-cu-lrclyrics-main.xml)</expression>

    <!-- PVR SAFETY EXPRESSIONS -->
    <expression name="Exp_PVRCanRecord">PVR.CanRecordPlayingChannel</expression>
    <expression name="Exp_PVRIsPlayingTV">Pvr.IsPlayingTv</expression>

    <!-- PLAYER STATE OPTIMIZATIONS (SAFE - NOT AUDIO RELATED) -->
    <expression name="Exp_PlayerPaused">Player.Paused</expression>
    <expression name="Exp_PlayerSeeking">Player.Seeking</expression>
    <expression name="Exp_PlayerForwarding">Player.Forwarding</expression>
    <expression name="Exp_PlayerRewinding">Player.Rewinding</expression>

    <!-- SETTINGS OPTIMIZATIONS (COMPLETELY SAFE) -->
    <expression name="Exp_SkinSetting_OSDDisablePopups">Skin.HasSetting(OSD.DisablePopUpDialogs)</expression>
    <expression name="Exp_SkinSetting_OSDAlwaysStop">Skin.HasSetting(OSD.AlwaysDisplayStop)</expression>
    <expression name="Exp_SkinSetting_OSDDisablePause">Skin.HasSetting(OSD.DisablePauseOnInfo)</expression>

    <!-- CONTAINER OPTIMIZATIONS (SAFE) -->
    <expression name="Exp_Container6601_Empty">Integer.IsEqual(Container(6601).NumItems,0)</expression>
    <expression name="Exp_Container6701_Empty">Integer.IsEqual(Container(6701).NumItems,0)</expression>

    <!-- COMBINED SAFE EXPRESSIONS -->
    <expression name="Exp_OSD_PopupCondition">[!$EXP[Exp_SkinSetting_OSDDisablePopups]]</expression>
    <expression name="Exp_NotLiveTV">[!$EXP[Exp_VideoPlayerContentLiveTV]]</expression>

    <expression name="Exp_HasFurnitureNowPlaying">[[[$EXP[Exp_PlayerHasVideo] +
        ![$EXP[Exp_InfoDialogs] +
        !$EXP[Exp_StringIsEmpty_WindowHomePropertyHasTrailer]]] | $EXP[Exp_PlayerHasAudio]] +
        ![$EXP[Exp_VideoPlayerIsFullscreen] | $EXP[Exp_WindowVisible_MusicVisualisation]]]</expression>

    <!-- FURNITURE SETTINGS (MASSIVE IMPACT) -->
    <expression name="Exp_FurnitureDisableLeftHeader">Skin.HasSetting(Furniture.DisableLeftHeader)</expression>
    <expression name="Exp_FurnitureDisableRightHeader">Skin.HasSetting(Furniture.DisableRightHeader)</expression>
    <expression name="Exp_FurnitureDisableLeftFooter">Skin.HasSetting(Furniture.DisableLeftFooter)</expression>
    <expression name="Exp_FurnitureUseMinimalClock">Skin.HasSetting(Furniture.UseMinimalClock)</expression>

    <!-- PHASE 2: WINDOW VISIBILITY MEGA-CACHING (50-70% improvement) -->
    <expression name="Exp_WindowVisible_Home">Window.IsVisible(Home)</expression>
    <expression name="Exp_WindowActive_Home">Window.IsActive(Home)</expression>
    <expression name="Exp_WindowActive_1114">Window.IsActive(1114)</expression>
    <expression name="Exp_WindowVisible_DialogBusy">Window.IsVisible(DialogBusy.xml)</expression>
    <expression name="Exp_WindowVisible_DialogExtendedProgressBar">
        Window.IsVisible(DialogExtendedProgressBar.xml)</expression>
    <expression name="Exp_WindowVisible_DialogNotification">Window.IsVisible(DialogNotification.xml)</expression>
    <expression name="Exp_WindowVisible_MusicVisualisation">Window.IsVisible(MusicVisualisation.xml)</expression>
    <expression name="Exp_WindowVisible_FullscreenVideo">Window.IsVisible(fullscreenvideo)</expression>
    <expression name="Exp_WindowVisible_Favourites">Window.IsVisible(favourites)</expression>
    <expression name="Exp_WindowVisible_MusicVisualisation2">Window.IsVisible(musicvisualisation)</expression>

    <!-- PHASE 3: PLAYER STATE MEGA-CACHING (40-60% improvement) -->
    <expression name="Exp_PlayerCaching">Player.Caching</expression>
    <expression name="Exp_PlayerDisplayAfterSeek">Player.DisplayAfterSeek</expression>
    <expression name="Exp_PlayerShowInfo">Player.ShowInfo</expression>
    <expression name="Exp_VideoPlayerIsFullscreen">VideoPlayer.IsFullscreen</expression>

    <!-- PHASE 4: SKIN SETTINGS NUCLEAR CACHING (30-50% improvement) -->
    <expression name="Exp_SkinSetting_ViewsDisableBigPosterRowAutoInfo">
        Skin.HasSetting(Views.DisableBigPosterRowAutoInfo)</expression>
    <expression name="Exp_SkinSetting_KeyboardDisableAutoCompletion">
        Skin.HasSetting(Keyboard.DisableAutoCompletion)</expression>
    <expression name="Exp_SkinSetting_IndicatorDisableProgress">
        Skin.HasSetting(Indicator.DisableProgress)</expression>
    <expression name="Exp_SkinSetting_BackgroundExtraFanart">Skin.HasSetting(Background.ExtraFanart)</expression>
    <expression name="Exp_SkinSetting_InfoEnableSimpleBackground">
        Skin.HasSetting(Info.EnableSimpleBackground)</expression>
    <expression name="Exp_SkinSetting_WidgetsDisableSimpleBackground">
        Skin.HasSetting(Widgets.DisableSimpleBackground)</expression>
    <expression name="Exp_SkinSetting_WidgetsDisableExpandedBackground">
        Skin.HasSetting(Widgets.DisableExpandedBackground)</expression>
    <expression name="Exp_SkinSetting_HomeShowProfileImage">Skin.HasSetting(Home.ShowProfileImage)</expression>
    <expression name="Exp_SkinSetting_DisableAlphabetScrollbar">
        Skin.HasSetting(DisableAlphabetScrollbar)</expression>
    <expression name="Exp_SkinSetting_UseLightFont">Skin.HasSetting(UseLightFont)</expression>
    <expression name="Exp_SkinSetting_GlassBorderOutline">Skin.HasSetting(Glass.BorderOutline)</expression>
    <expression name="Exp_SkinSetting_WidgetsOpaqueFocus">Skin.HasSetting(Widgets.OpaqueFocus)</expression>

    <!-- PHASE 5: CONTROL VISIBILITY NUCLEAR OPTIMIZATION (20-40% improvement) -->
    <expression name="Exp_ControlHasFocus_58">Control.HasFocus(58)</expression>
    <expression name="Exp_ControlHasFocus_300">Control.HasFocus(300)</expression>
    <expression name="Exp_ControlHasFocus_302">Control.HasFocus(302)</expression>
    <expression name="Exp_ControlHasFocus_399">Control.HasFocus(399)</expression>
    <expression name="Exp_ControlGroupHasFocus_303">ControlGroup(303).HasFocus()</expression>
    <expression name="Exp_ControlGroupHasFocus_9000">ControlGroup(9000).HasFocus()</expression>

    <!-- PHASE 6: SYSTEM STATE CACHING (15-30% improvement) -->
    <expression name="Exp_SystemIdleTime3">System.IdleTime(3)</expression>
    <expression name="Exp_SystemHasAddon_AutoCompletion">
        System.HasAddon(plugin.program.autocompletion)</expression>
    <expression name="Exp_SystemAddonIsEnabled_AutoCompletion">
        System.AddonIsEnabled(plugin.program.autocompletion)</expression>

    <!-- PHASE 7: STRING CONDITIONS MEGA-OPTIMIZATION (25-40% improvement) -->
    <expression name="Exp_StringIsEmpty_PlayerSeekOffset">String.IsEmpty(Player.SeekOffset)</expression>
    <expression name="Exp_StringIsEmpty_PlayerSeekNumeric">String.IsEmpty(Player.SeekNumeric)</expression>
    <expression name="Exp_StringIsEmpty_PVRChannelNumberInput">
        String.IsEmpty(PVR.ChannelNumberInput)</expression>
    <expression name="Exp_StringIsEmpty_WindowHomePropertyHasTrailer">
        String.IsEmpty(Window(Home).Property(HasTrailer))</expression>
    <expression name="Exp_StringIsEmpty_Container300ListItemPropertyWidgetPath">
        String.IsEmpty(Container(300).ListItem.Property(WidgetPath))</expression>
    <expression name="Exp_StringIsEmpty_Container300ListItemPropertyWidgetStyle">
        String.IsEmpty(Container(300).ListItem.Property(WidgetStyle))</expression>

    <!-- PHASE 8: INTEGER COMPARISONS NUCLEAR CACHING (20-35% improvement) -->
    <expression name="Exp_IntegerIsEqual_VideoPlayerPlaylistLength_1">
        Integer.IsEqual(VideoPlayer.PlaylistLength,1)</expression>
    <expression name="Exp_IntegerIsEqual_VideoPlayerPlaylistLength_0">
        Integer.IsEqual(VideoPlayer.PlaylistLength,0)</expression>
    <expression name="Exp_IntegerIsEqual_ListItemPercentPlayed_0">
        Integer.IsEqual(ListItem.PercentPlayed,0)</expression>
    <expression name="Exp_IntegerIsEqual_ListItemWatchedProgress_0">
        Integer.IsEqual(ListItem.Property(WatchedProgress),0)</expression>
    <expression name="Exp_IntegerIsEqual_ListItemProgress_0">Integer.IsEqual(ListItem.Progress,0)</expression>


    <!-- PHASE 9: CONTAINER CONTENT NUCLEAR OPTIMIZATION (15-25% improvement) -->
    <expression name="Exp_ContainerContent_Genres">Container.Content(genres)</expression>
    <expression name="Exp_ContainerContent_Studios">Container.Content(studios)</expression>
    <expression name="Exp_ContainerContent_Countries">Container.Content(countries)</expression>

    <!-- PHASE 10: STRING COMPARISONS MEGA-CACHING (10-20% improvement) -->
    <expression name="Exp_StringIsEqual_ListItemDBType_Genre">String.IsEqual(ListItem.DBType,genre)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Studio">
        String.IsEqual(ListItem.DBType,studio)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Country">
        String.IsEqual(ListItem.DBType,country)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Movie">String.IsEqual(ListItem.DBType,movie)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_TVShow">
        String.IsEqual(ListItem.DBType,tvshow)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Season">
        String.IsEqual(ListItem.DBType,season)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Set">String.IsEqual(ListItem.DBType,set)</expression>
    <expression name="Exp_StringIsEqual_ListItemDBType_Artist">
        String.IsEqual(ListItem.DBType,artist)</expression>

    <!-- PHASE 11: ULTIMATE COMBINED CONDITIONS (NUCLEAR IMPACT - 30-60% improvement) -->
    <expression name="Exp_NotBusyDialogs_Complete">[!$EXP[Exp_WindowVisible_DialogBusy] +
        !$EXP[Exp_WindowVisible_DialogExtendedProgressBar] +
        !$EXP[Exp_WindowVisible_DialogNotification]]</expression>

    <expression name="Exp_HomeBarVisible_Complete">[$EXP[Exp_ControlHasFocus_300] |
        $EXP[Exp_ControlHasFocus_399] |
        $EXP[Exp_ControlGroupHasFocus_303] | $EXP[Exp_ControlHasFocus_302] |
        $EXP[Exp_ControlGroupHasFocus_9000] |
        [$EXP[Exp_TMDBWidget_Container301] +
        [String.IsEqual(Container(300).ListItem.Property(widgetStyle),Fullscreen) |
        $EXP[Exp_StringIsEmpty_Container300ListItemPropertyWidgetStyle]]]]</expression>

    <expression name="Exp_HasAutoCompletion_Complete">[$EXP[Exp_SystemHasAddon_AutoCompletion] +
        $EXP[Exp_SystemAddonIsEnabled_AutoCompletion] +
        !$EXP[Exp_SkinSetting_KeyboardDisableAutoCompletion]]</expression>

    <!-- PHASE 12: WINDOW PROPERTY CACHING (15-25% improvement) -->
    <expression name="Exp_WindowHomeProperty_TMDBHelperIsUpdating">
        !String.IsEmpty(Window(Home).Property(TMDBHelper.IsUpdating))</expression>
    <expression name="Exp_WindowHomeProperty_TMDBHelperIsUpdatingRating">
        !String.IsEmpty(Window(Home).Property(TMDBHelper.IsUpdatingRating))</expression>

    <!-- PHASE 13: LOCALIZE STRING CACHING (10-15% improvement) -->
    <expression name="Exp_ContainerSortMethod_551">
        String.IsEqual(Container.SortMethod,$LOCALIZE[551])</expression>
    <expression name="Exp_ContainerSortMethod_556">
        String.IsEqual(Container.SortMethod,$LOCALIZE[556])</expression>
    <expression name="Exp_ContainerSortMethod_561">
        String.IsEqual(Container.SortMethod,$LOCALIZE[561])</expression>
    <expression name="Exp_ContainerSortMethod_557">
        String.IsEqual(Container.SortMethod,$LOCALIZE[557])</expression>
    <expression name="Exp_ContainerSortMethod_558">
        String.IsEqual(Container.SortMethod,$LOCALIZE[558])</expression>

    <!-- NUCLEAR AUDIO EXPRESSIONS -->
    <expression name="Exp_PlayerHasAudio">Player.HasAudio</expression>
    <expression name="Exp_PlayerMuted">Player.Muted</expression>
    <expression name="Exp_PlayerVolume">Player.Volume</expression>

    <!-- Container(301).ListItem DBType expressions -->
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Movie">
        String.IsEqual(Container(301).ListItem.DBtype,movie)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Set">
        String.IsEqual(Container(301).ListItem.DBtype,set)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Artist">
        String.IsEqual(Container(301).ListItem.DBtype,artist)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Album">
        String.IsEqual(Container(301).ListItem.DBtype,album)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Song">
        String.IsEqual(Container(301).ListItem.DBtype,song)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_MusicVideo">
        String.IsEqual(Container(301).ListItem.DBtype,musicvideo)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_TVShow">
        String.IsEqual(Container(301).ListItem.DBtype,tvshow)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Season">
        String.IsEqual(Container(301).ListItem.DBtype,season)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Episode">
        String.IsEqual(Container(301).ListItem.DBtype,episode)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemDBType_Video">
        String.IsEqual(Container(301).ListItem.DBtype,video)</expression>

    <!-- Container(301).ListItem(1) DBType expressions -->
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Movie">
        String.IsEqual(Container(301).ListItem(1).DBtype,movie)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Set">
        String.IsEqual(Container(301).ListItem(1).DBtype,set)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Artist">
        String.IsEqual(Container(301).ListItem(1).DBtype,artist)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Album">
        String.IsEqual(Container(301).ListItem(1).DBtype,album)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Song">
        String.IsEqual(Container(301).ListItem(1).DBtype,song)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_MusicVideo">
        String.IsEqual(Container(301).ListItem(1).DBtype,musicvideo)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_TVShow">
        String.IsEqual(Container(301).ListItem(1).DBtype,tvshow)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Season">
        String.IsEqual(Container(301).ListItem(1).DBtype,season)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Episode">
        String.IsEqual(Container(301).ListItem(1).DBtype,episode)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItem1DBType_Video">
        String.IsEqual(Container(301).ListItem(1).DBtype,video)</expression>

    <!-- Container(301).ListItem(-1) DBType expressions -->
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Movie">
        String.IsEqual(Container(301).ListItem(-1).DBtype,movie)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Set">
        String.IsEqual(Container(301).ListItem(-1).DBtype,set)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Artist">
        String.IsEqual(Container(301).ListItem(-1).DBtype,artist)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Album">
        String.IsEqual(Container(301).ListItem(-1).DBtype,album)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Song">
        String.IsEqual(Container(301).ListItem(-1).DBtype,song)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_MusicVideo">
        String.IsEqual(Container(301).ListItem(-1).DBtype,musicvideo)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_TVShow">
        String.IsEqual(Container(301).ListItem(-1).DBtype,tvshow)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Season">
        String.IsEqual(Container(301).ListItem(-1).DBtype,season)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Episode">
        String.IsEqual(Container(301).ListItem(-1).DBtype,episode)</expression>
    <expression name="Exp_StringIsEqual_Container301ListItemMinus1DBType_Video">
        String.IsEqual(Container(301).ListItem(-1).DBtype,video)</expression>

</includes>