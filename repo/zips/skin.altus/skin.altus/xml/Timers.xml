<?xml version="1.0" encoding="UTF-8"?>
<timers>
    <timer>
        <name>autoclosevideoosd</name>
        <description>Timer to auto close the video OSD (if enabled in the skin settings)</description>
        <start reset="true">Window.IsActive(videoosd) + Skin.HasSetting(OSDAutoClose) + !String.IsEqual(window(home).Property(settingslist_content),osd) + !Window.IsActive(osdsubtitlesettings) + !Window.IsActive(osdaudiosettings) + !Window.IsActive(osdvideosettings) + !Window.IsActive(OSDCMSSettings)</start>
        <reset>Window.IsActive(videoosd) + !System.IdleTime(1) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd), 1) | String.IsEqual(window(home).Property(settingslist_content),osd) | Window.IsActive(osdsubtitlesettings) | Window.IsActive(osdaudiosettings) | Window.IsActive(osdvideosettings) | Window.IsActive(OSDCMSSettings)</reset>
        <stop>!Window.IsActive(videoosd) | String.IsEmpty(Skin.String(OSDAutoCloseTime)) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd), 4) | !String.IsEmpty(Skin.String(OSDAutoCloseTime)) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd),Skin.Numeric(OSDAutoCloseTime))</stop>
        <onstop>Dialog.Close(videoosd)</onstop>
    </timer>
    <!-- <timer>
        <name>1110_topbaroverlay</name>
        <description>A timer that is activated when the topbaroverlay is loaded and stops automatically after 5 seconds (or playback is resumed)</description>
        <stop>!Player.Paused | Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(1110_topbaroverlay),5)</stop>
    </timer> -->
    <timer>
        <name>posterwall_scroll_timer</name>
        <description>Timer to automatically return to PosterWall view</description>
        <start reset="true">$PARAM[focused]</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(posterwall_scroll_timer),Skin.Numeric(altus_revert_from_wall_delay))</stop>
        <onstop condition="Control.HasFocus(500) + !String.IsEmpty(Window(Home).Property(Returnto51))">Container.SetViewMode(51)</onstop>
        <onstop condition="Control.HasFocus(500) + !String.IsEmpty(Window(Home).Property(Returnto53))">Container.SetViewMode(53)</onstop>
        <!-- <onstart>Notification(skintimer, Wall scroll timer started, 1000)</onstart>
        <onstop>Notification(skintimer, Wall scroll timer stopped, 1000)</onstop> -->
    </timer>
    <timer>
        <name>landscapewall_scroll_timer</name>
        <description>Timer to automatically return to LandscapeWall view</description>
        <start reset="true">$PARAM[focused]</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(landscapewall_scroll_timer),Skin.Numeric(altus_revert_from_wall_delay))</stop>
        <onstop condition="Control.HasFocus(501) + !String.IsEmpty(Window(Home).Property(Returnto51))">Container.SetViewMode(51)</onstop>
        <onstop condition="Control.HasFocus(501) + !String.IsEmpty(Window(Home).Property(Returnto53))">Container.SetViewMode(53)</onstop>
        <!-- <onstart>Notification(skintimer, Wall scroll timer started, 1000)</onstart>
        <onstop>Notification(skintimer, Wall scroll timer stopped, 1000)</onstop> -->
    </timer>
    <!-- <timer>
        <name>autolock_view_timer</name>
        <start reset="true">Control.HasFocus($PARAM[list_id])</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autolock_view_timer),1)</stop>
        <onstop condition="Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)">Skin.SetString(Skin.ForcedView.episodes.outside,$INFO[Container.Viewmode])</onstop>
        <onstop condition="Container.Content(episodes) + String.StartsWith(Container.PluginCategory,Season)">Skin.SetString(Skin.ForcedView.episodes.inside,$INFO[Container.Viewmode])</onstop>
        <onstop condition="!Container.Content(episodes)">Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode])</onstop>
        <onstop>Notification(View Locked,$INFO[Container.Content] - $INFO[Container.Viewmode],3000)</onstop>
        <onstop>Notification(View locked$VAR[ContentTypeLabel], [UPPERCASE]$INFO[Container.Viewmode][/UPPERCASE], 2000)</onstop>
    </timer> -->
    
</timers>
