<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="View_50_List">
		<param name="ratings_notvisible">[
					[String.IsEqual(Skin.String(RatingSlot1),none) | 
							[String.IsEqual(Skin.String(RatingSlot1),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot1),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot1),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot1),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot1),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot1),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot1),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot1),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot1),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot2),none) | 
							[String.IsEqual(Skin.String(RatingSlot2),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot2),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot2),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot2),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot2),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot2),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot2),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot2),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot2),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot3),none) | 
							[String.IsEqual(Skin.String(RatingSlot3),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot3),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot3),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot3),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot3),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot3),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot3),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot3),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot3),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot4),none) | 
							[String.IsEqual(Skin.String(RatingSlot4),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot4),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot4),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot4),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot4),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot4),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot4),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot4),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot4),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot5),none) | 
							[String.IsEqual(Skin.String(RatingSlot5),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot5),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot5),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot5),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot5),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot5),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot5),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot5),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot5),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot6),none) | 
							[String.IsEqual(Skin.String(RatingSlot6),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot6),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot6),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot6),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot6),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot6),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot6),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot6),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot6),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					] +
					[String.IsEqual(Skin.String(RatingSlot7),none) | 
							[String.IsEqual(Skin.String(RatingSlot7),metacritic) + String.IsEmpty(Window(Home).Property(altus.metascore))] |
							[String.IsEqual(Skin.String(RatingSlot7),trakt) + String.IsEmpty(Window(Home).Property(altus.traktRating))] |
							[String.IsEqual(Skin.String(RatingSlot7),letterboxd) + String.IsEmpty(Window(Home).Property(altus.letterboxdRating))] |
							[String.IsEqual(Skin.String(RatingSlot7),mdblist) + String.IsEmpty(Window(Home).Property(altus.mdblistRating))] |
							[String.IsEqual(Skin.String(RatingSlot7),rtc) + String.IsEmpty(Window(Home).Property(altus.tomatoMeter))] |
							[String.IsEqual(Skin.String(RatingSlot7),rta) + String.IsEmpty(Window(Home).Property(altus.tomatoUserMeter))] |
							[String.IsEqual(Skin.String(RatingSlot7),imdb) + String.IsEmpty(Window(Home).Property(altus.imdbRating))] |
							[String.IsEqual(Skin.String(RatingSlot7),imdbpop) + String.IsEmpty(Window(Home).Property(altus.popularRating))] |
							[String.IsEqual(Skin.String(RatingSlot7),tmdb) + String.IsEmpty(Window(Home).Property(altus.tmdbRating))]
					]
		]</param>
		<definition>
			<control type="group">
				<visible>
				!Player.HasMedia + Control.IsVisible(50) + [String.IsEqual(Skin.String(BackgroundSetting),0) | String.IsEqual(Skin.String(BackgroundSetting),1)] + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
						[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | 
						[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] |
						[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)]
					]
				</visible>
				<include>FullScreenDimensions</include>
				<!-- <control type="image">
					<fadetime>500</fadetime>
					<texture background="true" colordiffuse="FFE0E0E8" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[ListLandscapeVar]</texture>
					<aspectratio>scale</aspectratio>
					<include>ArtworkAnimations</include>
				</control>
				<control type="image">
					<texture colordiffuse="BF000000">overlays/fanart-diffuse.png</texture>
				</control> -->
				<control type="image">
					<fadetime>500</fadetime>
					<texture background="true" colordiffuse="80FFFFFF" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[ListLandscapeVar]</texture>
					<aspectratio>scale</aspectratio>
					<include>ArtworkAnimations</include>
				</control>
				<control type="image">
					<texture colordiffuse="99000000">overlays/fanart-diffuse_setting0or1.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>
				!Player.HasMedia + Control.IsVisible(50) + String.IsEqual(Skin.String(BackgroundSetting),2) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
						[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | 
						[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] |
						[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)]
					]
				</visible>
				<include>FullScreenDimensions</include>
				<!-- <control type="image">
					<fadetime>500</fadetime>
					<texture background="true" colordiffuse="FFE0E0E8" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[ListLandscapeVar]</texture>
					<aspectratio>scale</aspectratio>
					<include>ArtworkAnimations</include>
				</control>
				<control type="image">
					<texture colordiffuse="BF000000">overlays/fanart-diffuse.png</texture>
				</control> -->
				<control type="image">
					<fadetime>500</fadetime>
					<texture background="true" colordiffuse="artwork_dim" diffuse="overlays/fanart-diffuse.png" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[ListLandscapeVar]</texture>
					<aspectratio>scale</aspectratio>
					<include>ArtworkAnimations</include>
				</control>
				<!-- <control type="image">
					<texture colordiffuse="99000000">overlays/fanart-diffuse.png</texture>
				</control> -->
			</control>
			<control type="group">
				<include>OpenClose_Left</include>
				<left>0</left>
				<top>0</top>
				<visible>Control.IsVisible(50)</visible>
				<include>Visible_Left</include>
				<!-- <control type="label">
					<left>300</left>
					<top>100</top>
					<width>700</width>
					<height>80</height>
					<label>$INFO[Container.Content]</label>
				</control> -->
				<!-- <control type="label">
					<left>300</left>
					<top>150</top>
					<width>700</width>
					<height>80</height>
					<label>Last Focused Color: $INFO[Window(home).Property(LastFocusedColor)]</label>
				</control>
				<control type="label">
					<left>300</left>
					<top>200</top>
					<width>700</width>
					<height>80</height>
					<label>Current Color: $INFO[Window(home).Property(listitem_color)]</label>
				</control> -->
				<control type="group">
					<visible>
					![
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
							[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | 
							[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] |
							[Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)]
					]</visible>
					<animation condition="
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
						]" 
						reversible="true">
						<effect type="slide" start="0,0" end="-120,0" time="0" tween="cubic" easing="in" />
					</animation>
					<animation condition="
						[
							[Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]
						]" 
						reversible="true">
						<effect type="slide" start="0,0" end="-75,0" time="0" tween="cubic" easing="in" />
					</animation>
					<animation condition="
					$EXP[isContent] + 
					[Skin.HasSetting(Disable.50_ListSetting1_Ratings) + [
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
					]] | 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
					] +
					$PARAM[ratings_notvisible]" 
					reversible="true">
					<effect type="slide" start="0,0" end="-166,0" delay="200" time="500" tween="cubic" easing="in" />
				</animation>
					<include content="MenuContentPanel">
						<!-- <param name="width" value="1030"/>
						<param name="bg_left" value="0"/>
						<param name="dividerleft" value="1030"/> -->
						<param name="width" value="1200"/>
						<param name="bg_left" value="1005"/>
						<param name="dividerleft" value="1005"/>
					</include>
				</control>
				<control type="image">
					<!-- 70 -->
					<left>35</left>
					<bottom>240</bottom>
					<width>930</width>
					<height>523</height>
					<fadetime>500</fadetime>
					<texture colordiffuse="artwork_dim" background="true" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[ListLandscapeVar]</texture>
					<bordersize>border_size</bordersize>
					<!-- <aspectratio scalediffuse="false">scale</aspectratio> -->
					<!-- <include>ArtworkAnimations</include> -->
					<include>ListLandscapeArtworkSlide</include>
					<bordertexture border="border_size" colordiffuse="$VAR[BorderColorVar]" infill="false">masks/bordertexture.png</bordertexture>
					<!-- <visible>
						false
					</visible> -->
					<visible>
						Control.IsVisible(50) + !Player.HasMedia + 
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)] | 
							[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)] | 
							[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)] |
							[Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]
						]
					</visible>
				</control>
				<control type="group">
					<visible>Control.IsVisible(50) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)] | 
						[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)] | 
						[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)] |
						[Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]
					]</visible>
					<include>ListLandscapeArtworkSlide</include>
					<include content="ProgressBar">
						<param name="left" value="35"/>
						<param name="top" value="839.5"/>
						<param name="width" value="930"/>
						<param name="visible1" value="true"/>
						<param name="visible2" value="true"/>
					</include>
				</control>
				
				<control type="image">
					<left>0</left>
					<bottom>0</bottom>
					<width>720</width>
					<height>1080</height>
					<fadetime>500</fadetime>
					<texture colordiffuse="artwork_dim" background="true" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[FlixPosterVar]</texture>
					
					
					<aspectratio scalediffuse="false">scale</aspectratio>
					<include>ArtworkAnimations</include>
					<!-- <animation condition="
						Skin.HasSetting(Disable.50_ListSetting1_Ratings) | 
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
						] +
						$PARAM[ratings_notvisible]" 
						reversible="true">
						<effect type="slide" start="0,0" end="45,0" delay="200" time="500" tween="cubic" easing="in" />
					</animation> -->
					<visible>
						Control.IsVisible(50) + !Player.HasMedia + 
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
						] + 
						[!Container.Content(addons) | String.StartsWith(Container.PluginName,plugin.video.otaku)]
					</visible>
				</control>
				<control type="group">
					<visible>Control.IsVisible(50) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),1)] | 
						[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),1)] | 
						[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),1)] |
						[Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),1)]
					]</visible>
					<include content="ProgressBar">
						<param name="left" value="0"/>
						<param name="top" value="1074"/>
						<param name="width" value="720"/>
						<param name="visible1" value="true"/>
						<param name="visible2" value="true"/>
					</include>
				</control>
				<control type="image">
					<top>90</top>
					<right>90</right>
					<width>470</width>
					<height>182</height>
					<fadetime>300</fadetime>
					<texture background="true">$INFO[Window(Home).Property(listitem_clearlogo_cropped)]</texture>
					<aspectratio align="right" aligny="top">keep</aspectratio>
					<visible>
						Control.IsVisible(50) + !Player.HasMedia + !String.IsEmpty(ListItem.Art(clearlogo)) + Skin.HasSetting(Enable.FanartClearlogo) +
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)]
						] + 
						[!Container.Content(addons) | String.StartsWith(Container.PluginName,plugin.video.otaku)]
					</visible>
				</control>
				<control type="image">
					<left>104</left>
					<bottom>190</bottom>
					<width>700</width>
					<height>700</height>
					<fadetime>500</fadetime>
					<!-- <bordersize>1</bordersize> -->
					<texture background="true" fallback="$VAR[AltusCustomBackgroundImage]">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="true">keep</aspectratio>
					<!-- <bordertexture border="1border_size" colordiffuse="$VAR[BorderColorVar]" infill="false">masks/bordertexture.png</bordertexture> -->
					<include>ArtworkAnimations</include>
					<visible>
						Control.IsVisible(50) + !Player.HasMedia + 
						Container.Content(addons) + 
						!String.StartsWith(Container.PluginName,plugin.video.otaku) + 
						!String.IsEqual(Skin.String(ListArtworkChoice.addons),2)
					</visible>
				</control>
				<!-- <control type="image">
					<left>289</left>
					<bottom>290</bottom>
					<width>500</width>
					<height>500</height>
					<fadetime>500</fadetime>
					<texture background="true" fallback="$VAR[AltusCustomBackgroundImage]">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false">keep</aspectratio>
					<include>ArtworkAnimations</include>
					<visible>!Player.HasMedia + Container.Content() + !String.StartsWith(Container.PluginName,plugin.video.otaku)</visible>
				</control> -->
				<control type="group">
					<visible>
						Control.IsVisible(50) + !Player.HasMedia + 
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)]
						] + 
						[[!String.IsEmpty(ListItem.Art(clearlogo)) | !String.IsEmpty(Container.ListItem.Art(tvshow.clearlogo))] + Skin.HasSetting(Enable.LandscapeClearlogo)] + 
						[$EXP[isContent] | Container.Content(addons)] + 
						[
							[Container.Content(movies) + String.IsEqual(Skin.String(ListLandscape.movies),1)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListLandscape.tvshows),1)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListLandscape.seasons),1)] | 
							[Container.Content(episodes) + [String.IsEqual(Skin.String(ListLandscape.episodes),0) | String.IsEqual(Skin.String(ListLandscape.episodes),1)]]
						]
					</visible>
					<include>ListLandscapeArtworkSlide</include>
					<control type="image">
						<top>590</top>
						<left>35</left>
						<width>931</width>
						<height>250</height>
						<texture colordiffuse="overlay_fade_color" background="true">overlays/overlay_bg_long.png</texture>
					</control>
					<control type="image">
						<top>674</top>
						<left>85</left>
						<width>300</width>
						<height>116</height>
						<fadetime>300</fadetime>
						<texture background="true">$INFO[Window(Home).Property(listitem_clearlogo_cropped)]</texture>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
					</control>
				</control>
				<control type="group">
					<include>ListLandscapeArtworkSlide</include>
					<animation effect="fade" time="400">VisibleChange</animation>
					<include condition="!String.IsEmpty(Skin.String(valid_api_key))" content="HorizontalRatings">
						<param name="visible" value="!Player.HasMedia + !Skin.HasSetting(Disable.50_ListSetting0_Ratings) + 
						Control.IsVisible(50) + [
							[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | 
							[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
							[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
							[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)]
						] + 
						!String.IsEmpty(ListItem.Genre) + 
						$EXP[isContent]"/>
						<param name="align" value="center"/>
						<param name="top" value="249.5"/>
						<param name="left" value="-925"/>
						<!-- <param name="left" value="-942.5"/> -->
					</include>
				</control>

				<!-- Grouplist for ListArtworkChoice 1 -->
				<control type="grouplist">
					<animation effect="fade" time="400">VisibleChange</animation>
					<width>150</width>
					<left>728.5</left>
					<bottom>90</bottom>
					<height>915</height>
					<orientation>vertical</orientation>
					<itemgap>36</itemgap>
					<aligny>center</aligny>
					<align>center</align>
					<visible>
							Control.IsVisible(50) + 
							!Player.HasMedia + 
							!Skin.HasSetting(Disable.50_ListSetting1_Ratings) + 
							[
									[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
									[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
									[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
									[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
							] + 
							!String.IsEmpty(ListItem.Genre) + 
							$EXP[isContent]
					</visible>
					<include condition="!String.IsEmpty(Skin.String(valid_api_key))">VerticalRatings</include>
				</control>

				<!-- Grouplist for ListArtworkChoice 2 -->
				<control type="grouplist">
					<animation type="Visible">
						<effect type="slide" start="-100,0" end="0,0" tween="cubic" easing="out" time="400" />
						<effect type="fade" start="0" end="100" time="400" />
					</animation>
					<animation type="Hidden">
						<effect type="slide" start="0,0" end="-100,0" tween="cubic" easing="in" time="400" />
						<effect type="fade" start="100" end="0" time="400" />
					</animation>
					<width>150</width>
					<left>40</left>
					<bottom>55</bottom>
					<height>915</height>
					<orientation>vertical</orientation>
					<itemgap>36</itemgap>
					<aligny>center</aligny>
					<align>center</align>
					<visible>
							Control.IsVisible(50) + 
							!Player.HasMedia + 
							!Skin.HasSetting(Disable.50_ListSetting2_Ratings) + 
							[
									[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
									[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
									[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
									[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)]
							] + 
							!String.IsEmpty(ListItem.Genre) + 
							$EXP[isContent]
					</visible>
					<include condition="!String.IsEmpty(Skin.String(valid_api_key))">VerticalRatings</include>
				</control>

				<include content="ListContainer">
					<param name="list_id" value="50" />
					<param name="left" value="1018" />
					<param name="viewtype_label" value="$LOCALIZE[535]" />
					<param name="ratings_notvisible" value="$PARAM[ratings_notvisible]" />
				</include>
				<control type="group">
					<depth>DepthContentPanel</depth>
					<control type="group">
						<right>0</right>
						<width>634</width>
						<!-- <include content="RightListPanel">
							<param name="list_id" value="50" />
						</include> -->
						<!-- <control type="image">
							<top>0</top>
							<bottom>0</bottom>
							<width>7</width>
							<right>-7</right>
							<texture >colors/black.png</texture>
							<animation effect="slide" end="-7,0" time="300" tween="sine" easing="inout" condition="Control.HasFocus(50600)">Conditional</animation>
						</control> -->
						<!-- <control type="scrollbar" id="50600">
							<right>-7</right>
							<top>0</top>
							<width>7</width>
							<bottom>0</bottom>
							<onleft>50</onleft>
							<onright>50</onright>
							<orientation>vertical</orientation>
							<animation effect="slide" end="-7,0" time="300" tween="sine" easing="inout" condition="Control.HasFocus(50600)">Conditional</animation>
						</control> -->
						<control type="scrollbar" id="50600">
							<visible>Control.IsVisible(50) + !$EXP[sidebar_visible]</visible>
							<top>0</top>
							<right>-7</right>
							<width>7</width>
							<bottom>0</bottom>
							<orientation>vertical</orientation>
							<texturesliderbar colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texturesliderbar>
							<texturesliderbarfocus colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texturesliderbarfocus>
							<!-- Animation for right-side scrollbar -->
							<animation effect="slide" end="-7,0" time="300" tween="sine" easing="inout" condition="
							[
								[Container.Scrolling + ![Container.Content(addons) | String.IsEmpty(Container.Content())]] | 
								Control.HasFocus(50600)
							] + 
							![
								[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
								[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
								[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
								[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | 
								[Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] |  
								[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | 
								[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]
							]">Conditional</animation>
							<!-- Animation for left-side scrollbar -->
							<animation effect="slide" end="7,0" time="300" tween="sine" easing="inout" condition="
							[
								[Container.Scrolling + ![Container.Content(addons) | String.IsEmpty(Container.Content())]] | 
								Control.HasFocus(50600)
							] + 
							[
								[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
								[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
								[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
								[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | 
								[Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | 
								[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] |
								[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]
							]">Conditional</animation>
							<animation type="Conditional" condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]">
								<effect type="slide" start="0,0" end="-1927,0" time="0" />
							</animation>
							<onleft condition="[Container.Content(movies) + !String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + !String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + !String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + !String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + !String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + !String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + !String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + !String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + !String.IsEqual(Skin.String(ListArtworkChoice.),2)]">50</onleft>
							<onright condition="[Container.Content(movies) + !String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + !String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + !String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + !String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + !String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + !String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + !String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + !String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + !String.IsEqual(Skin.String(ListArtworkChoice.),2)]">50</onright>
							<onleft condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]">9000</onleft>
							<onright condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]">50</onright>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="RightListPanel">
		<control type="group">
			<depth>DepthContentPanel</depth>
			<control type="group">
				<right>-32</right>
				<!-- right content panel -->
				<!-- <include content="ContentPanel">
					<param name="left" value="-150" />
					<param name="top" value="-20" />
					<param name="width" value="806" />
					<param name="flipx" value="true" />
				</include> -->
				<control type="group">
					<visible>!Container.Content(songs)</visible>
					<control type="image">
						<depth>DepthContentPopout</depth>
						<left>48</left>
						<top>160</top>
						<width>540</width>
						<height>850</height>
						<bottom>124</bottom>
						<fadetime>200</fadetime>
						<aspectratio aligny="top">keep</aspectratio>
						<texture fallback="DefaultVideo.png" background="true">$VAR[FlixThumbVar]</texture>
					</control>
					<control type="group">
						<left>540</left>
						<top>143</top>
					</control>
					<include content="ProgressBar">
						<!-- 48 -->
						<param name="left" value="100"/>
						<param name="top" value="120"/>
						<param name="width" value="435"/>
					</include>
				</control>
				<control type="group">
					<visible>Control.IsVisible(503) + Window.IsActive(musicplaylist)</visible>
					<control type="image">
						<left>58</left>
						<top>110</top>
						<width>540</width>
						<height>470</height>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>300</fadetime>
						<texture fallback="DefaultAudio.png" background="true">$INFO[Player.Icon]</texture>
					</control>
					<control type="group">
						<left>301</left>
						<top>560</top>
						<control type="group">
							<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
							<include content="UserRatingContent" condition="Skin.HasSetting(circle_userrating)">
								<param name="infolabel" value="MusicPlayer.UserRating" />
							</include>
							<include content="UserRatingContent" condition="Skin.HasSetting(circle_rating)">
								<param name="infolabel" value="MusicPlayer.Rating" />
							</include>
						</control>
					</control>
					<control type="textbox" id="15599">
						<visible>Player.HasAudio + Window.IsActive(musicplaylist)</visible>
						<left>58</left>
						<top>600</top>
						<width>540</width>
						<bottom>70</bottom>
						<autoscroll time="3000" delay="7000" repeat="5000">!System.HasModalDialog + $PARAM[focused]</autoscroll>
						<label>[COLOR button_focus][B]$LOCALIZE[31000]: [/COLOR]$INFO[musicplayer.Playlistposition,]$INFO[musicplayer.Playlistlength,/][/B][CR]$VAR[NowPlayingInfoVar]</label>
					</control>
					<control type="textbox" id="15599">
						<visible>!Player.HasAudio + Window.IsActive(musicplaylist)</visible>
						<left>58</left>
						<top>640</top>
						<width>540</width>
						<bottom>70</bottom>
						<autoscroll time="3000" delay="7000" repeat="5000">!System.HasModalDialog + $PARAM[focused]</autoscroll>
						<label>[COLOR button_focus][B]$LOCALIZE[31000]: [/COLOR]$LOCALIZE[36623][/B]</label>
					</control>
				</control>
			</control>
		</control>
	</include>

	<include name="ListContainer">
		<param name="left">45</param>
		<param name="right">0</param>
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<animation effect="slide" start="0,0" end="-75,0" tween="cubic" easing="in" time="500" 
				condition="Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + !String.IsEqual(Skin.String(ListArtworkChoice.addons),2)">Conditional</animation>
				<animation condition="
					$EXP[isContent] + 
					[Skin.HasSetting(Disable.50_ListSetting1_Ratings) + [
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
					]] | 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
					] +
					$PARAM[ratings_notvisible]" 
					reversible="true">
					<effect type="slide" start="0,0" end="-166,0" delay="200" time="500" tween="cubic" easing="in" />
				</animation>
				<animation condition="
					$EXP[isContent] + 
					[Skin.HasSetting(Disable.50_ListSetting2_Ratings) + [
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)]
					]] | 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)]
					] +
					$PARAM[ratings_notvisible]" 
					reversible="true">
					<effect type="slide" start="0,0" end="-60,0" delay="200" time="400" tween="cubic" easing="in" />
				</animation>
				<animation condition="
					[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)]" reversible="false">
					<effect type="slide" start="0,0" end="-870,0" time="0" tween="cubic" easing="inout" />
				</animation>
				<animation condition="
					[Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | 
					[Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
					[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | 
					[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] |
					[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)]" reversible="false">
					<effect type="slide" start="0,0" end="-930,0" time="0" tween="cubic" easing="inout" />
				</animation>
				<animation condition="
					[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]" reversible="false">
					<effect type="slide" start="0,0" end="-120,0" time="0" tween="cubic" easing="inout" />
				</animation>
				<control type="label">
					<include>ListLandscapeSlideAnimations</include>
					<left>30</left>
					<top>80</top>
					<width>810</width>
					<label>$VAR[ListLandscapeHeaderVar]</label>
					<font>font32</font>
					<textcolor>$VAR[FocusColorTheme]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<align>left</align>
				</control>
				<control type="fixedlist" id="$PARAM[list_id]">
					<left>-40</left>
					<top>135</top>
					<bottom>75</bottom>
					<movement>6</movement>
					<focusposition>5</focusposition>
					<scrolltime tween="cubic" easing="out">500</scrolltime>
					<orientation>vertical</orientation>
					<pagecontrol>50600</pagecontrol>
					<!-- LANDSCAPE + POSTER -->
					<onleft condition="[Container.Content(movies) + !String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + !String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + !String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + !String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + !String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + !String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + !String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + !String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + !String.IsEqual(Skin.String(ListArtworkChoice.),2)]">9000</onleft>
							<!-- ONRIGHT SCROLLBAR -->
							<onright condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.MovieTV),0)">50600</onright>
							<onright condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.Other),0)">50600</onright>
							<!-- ONRIGHT TRAILER (MOVIES/TVSHOWS) -->
							<onright condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.MovieTV),1)">$VAR[AutoplayTrailerSource]</onright>
							<onright condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.MovieTV),1)">Skin.SetString(TrailerPlaying, true)</onright>
							<!-- ONRIGHT INFORMATION -->
							<onright condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.MovieTV),2)">info</onright>
							<onright condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.Other),1) + [Container.Content(seasons) | Container.Content(episodes)]">info</onright>
							<!-- ONRIGHT OTHER CONTENT -->
							<onright condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnRightSetting.Other),1) + [Container.Content(addons) | Container.Content(files) | Container.Content(favourites) | Container.Content()]">50600</onright>
					<!-- FANART -->
					<onleft condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]">50600</onleft>
					<onup>$PARAM[list_id]</onup>
					<ondown>$PARAM[list_id]</ondown>
					<width>1950</width>
					<viewtype label="$PARAM[viewtype_label]">list</viewtype>
					<visible>
						[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 

						[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 
						
						[Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.outside))]] | 
						
						[Container.Content(episodes) + String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.inside),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.inside))]] | 
						
						[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 
						
						[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 
						
						[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 
						
						[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]] | 
						
						[Container.Content(videoplaylist) + [String.IsEqual(Skin.String(Skin.ForcedView.videoplaylist),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.videoplaylist))]] | 
						
						[Container.Content(musicplaylist) + [String.IsEqual(Skin.String(Skin.ForcedView.musicplaylist),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicplaylist))]] | 
						
						[Container.Content(genres) + [String.IsEqual(Skin.String(Skin.ForcedView.genres),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.genres))]] | 
						
						[Container.Content(playlists) + [String.IsEqual(Skin.String(Skin.ForcedView.playlists),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]] | 
						
						[Container.Content(favourites) + [String.IsEqual(Skin.String(Skin.ForcedView.favourites),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.favourites))]] | 
						
						[Container.Content() + [String.IsEqual(Skin.String(Skin.ForcedView.),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.))]] | 
						
						[Container.Content(songs) + [String.IsEqual(Skin.String(Skin.ForcedView.songs),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.songs))]] | 
						
						[Container.Content(addons) + [String.IsEqual(Skin.String(Skin.ForcedView.addons),$PARAM[viewtype_label]) | String.IsEmpty(Skin.String(Skin.ForcedView.addons))]] | 
						
						[!Container.Content(songs) + !Container.Content(addons) + !Container.Content(playlists) + !Container.Content() + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(movies) + !Container.Content(musicvideos) + !Container.Content(videos) + !Container.Content(favourites) + !Container.Content(genres)]
					</visible>
					<focusedlayout condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
					Container.Content(sets) | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | 
					Container.Content(musicvideos) | 
					Container.Content(games) | 
					Window.IsActive(videoplaylist) | 
					Window.IsActive(musicplaylist)" height="210" width="610" infoupdate="30">
						<control type="group">
							<left>190</left>
							<top>5</top>
							<control type="image">
								<left>-115</left>
								<top>3</top>
								<!-- 236 -->
								<width>127</width>
								<!-- 354 -->
								<height>190</height>
								<texture background="true">$VAR[FlixPosterVar]</texture>
								<bordersize>4</bordersize>
								<!-- <aspectratio scalediffuse="false">scale</aspectratio> -->
								<bordertexture border="4" colordiffuse="$VAR[FocuscolorTheme]" infill="false">colors/white.png</bordertexture>
								<!-- <animation condition="Container($PARAM[list_id]).IsUpdating + String.IsEmpty(Skin.String(TrailerPlaying))" effect="fade" time="700" start="50" end="100" pulse="true">Conditional</animation> -->
							</control>
							<!-- <control type="image">
								<top>-4</top>
								<bottom>12</bottom>
								<width>5</width>
								<left>-140</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>!String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control> -->
							<!-- <control type="image">
								<top>-4</top>
								<bottom>7</bottom>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>[$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>![$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control> -->
							<control type="label">
								<left>70</left>
								<width>810</width>
								<centertop>13%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>70</left>
								<width>810</width>
								<centertop>13%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="label">
								<left>33</left>
								<width>810</width>
								<centertop>33%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font23</font>
								<label>$VAR[InfoPanelTop]</label>
								<textcolor>$VAR[FocusColorTheme]</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>810</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">true</autoscroll>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>810</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + [Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>810</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>810</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + [[Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])]</visible>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control>
						</control>
					</focusedlayout>
					<itemlayout condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
					Container.Content(sets) | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | 
					Container.Content(musicvideos) | 
					Container.Content(games) | 
					Window.IsActive(videoplaylist) | 
					Window.IsActive(musicplaylist)" height="67" width="610">
						<control type="group">
							<left>40</left>
							<include>altus.PreloadPoster</include>
							<control type="label">
								<left>70</left>
								<width>810</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<font>font32</font>
								<textcolor>lightgrey</textcolor>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="image">
								<left>33</left>
								<centertop>49%</centertop>
								<width>21</width>
								<height>21</height>
								<texture colordiffuse="lightgrey">$VAR[ListWatchedIconVar]</texture>
							</control>
						</control>
					</itemlayout>
					<focusedlayout condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
					Container.Content(sets) | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | 
					Container.Content(musicvideos) | 
					Container.Content(games) | 
					Window.IsActive(videoplaylist) | 
					Window.IsActive(musicplaylist)" height="210" width="610" infoupdate="30">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-4</top>
								<bottom>12</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>!String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<!-- <control type="image">
								<top>-4</top>
								<bottom>7</bottom>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>[$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>![$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control> -->
							<control type="label">
								<left>70</left>
								<width>830</width>
								<centertop>13%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>70</left>
								<width>830</width>
								<centertop>13%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="label">
								<left>33</left>
								<width>830</width>
								<centertop>33%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font23</font>
								<label>$VAR[InfoPanelTop]</label>
								<textcolor>$VAR[FocusColorTheme]</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>830</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">true</autoscroll>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>830</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + [Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>830</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>830</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + [[Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])]</visible>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control>
						</control>
					</focusedlayout>
					<itemlayout condition="[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
					Container.Content(sets) | 
					[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
					[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
					[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | 
					Container.Content(musicvideos) | 
					Container.Content(games) | 
					Window.IsActive(videoplaylist) | 
					Window.IsActive(musicplaylist)" height="67" width="610">
						<control type="group">
							<left>40</left>
							<control type="label">
								<left>70</left>
								<width>830</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<font>font32</font>
								<textcolor>lightgrey</textcolor>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="image">
								<left>33</left>
								<centertop>49%</centertop>
								<width>21</width>
								<height>21</height>
								<texture colordiffuse="lightgrey">$VAR[ListWatchedIconVar]</texture>
							</control>
						</control>
					</itemlayout>
					<focusedlayout condition="!Skin.HasSetting(Disable.50_ListSetting1_Ratings) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
						Container.Content(sets) | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)] | 
						Container.Content(musicvideos) | 
						Container.Content(games) | 
						Window.IsActive(videoplaylist) | 
						Window.IsActive(musicplaylist)
					]" height="210" width="610" infoupdate="30">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-4</top>
								<bottom>12</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>!String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<!-- <control type="image">
								<top>-4</top>
								<bottom>7</bottom>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>[$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>![$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control> -->
							<control type="label">
								<left>70</left>
								<width>930</width>
								<centertop>13%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>70</left>
								<width>930</width>
								<centertop>13%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="label">
								<left>33</left>
								<width>930</width>
								<centertop>33%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font23</font>
								<label>$VAR[InfoPanelTop]</label>
								<textcolor>$VAR[FocusColorTheme]</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>930</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">true</autoscroll>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>930</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + [Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>930</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>930</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + [[Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])]</visible>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control>
						</control>
					</focusedlayout>
					<itemlayout condition="!Skin.HasSetting(Disable.50_ListSetting1_Ratings) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
						Container.Content(sets) | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)] | 
						Container.Content(musicvideos) | 
						Container.Content(games) | 
						Window.IsActive(videoplaylist) | 
						Window.IsActive(musicplaylist)
					]" height="67" width="610">
						<control type="group">
							<left>40</left>
							<control type="label">
								<left>70</left>
								<width>930</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<font>font32</font>
								<textcolor>lightgrey</textcolor>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="image">
								<left>33</left>
								<centertop>49%</centertop>
								<width>21</width>
								<height>21</height>
								<texture colordiffuse="lightgrey">$VAR[ListWatchedIconVar]</texture>
							</control>
						</control>
					</itemlayout>
					<focusedlayout condition="Skin.HasSetting(Disable.50_ListSetting1_Ratings) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
						Container.Content(sets) | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)] | 
						Container.Content(musicvideos) | 
						Container.Content(games) | 
						Window.IsActive(videoplaylist) | 
						Window.IsActive(musicplaylist)
					]" height="210" width="610" infoupdate="30">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-4</top>
								<bottom>12</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>!String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>String.IsEmpty(ListItem.Plot) + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<!-- <control type="image">
								<top>-4</top>
								<bottom>7</bottom>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>[$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="image">
								<top>-4</top>
								<height>61</height>
								<width>4</width>
								<left>11</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>![$EXP[isContent] | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)]] + Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control> -->
							<control type="label">
								<left>70</left>
								<width>1096</width>
								<centertop>13%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>70</left>
								<width>1096</width>
								<centertop>13%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="label">
								<left>33</left>
								<width>1096</width>
								<centertop>33%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>$PARAM[focused]</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font23</font>
								<label>$VAR[InfoPanelTop]</label>
								<textcolor>$VAR[FocusColorTheme]</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>1096</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">true</autoscroll>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>1096</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<visible>!String.StartsWith(Container.PluginName,plugin.video.dramacool) + [Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>1096</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + ![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>55</top>
								<left>33</left>
								<width>1096</width>
								<bottom>5</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[RI_Plot]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">$PARAM[focused]</autoscroll>
								<visible>String.StartsWith(Container.PluginName,plugin.video.dramacool) + [[Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])]</visible>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
							</control>
							<control type="image">
								<left>33</left>
								<top>14</top>
								<width>21</width>
								<height>21</height>
								<texture>$VAR[ListWatchedIconVar]</texture>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control>
						</control>
					</focusedlayout>
					<itemlayout condition="Skin.HasSetting(Disable.50_ListSetting1_Ratings) + 
					[
						[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1) + !String.StartsWith(Container.PluginName,plugin.video.the-loop)] | 
						Container.Content(sets) | 
						[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
						[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
						[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)] | 
						Container.Content(musicvideos) | 
						Container.Content(games) | 
						Window.IsActive(videoplaylist) | 
						Window.IsActive(musicplaylist)
					]" height="67" width="610">
						<control type="group">
							<left>40</left>
							<control type="label">
								<left>70</left>
								<width>1096</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<font>font32</font>
								<textcolor>lightgrey</textcolor>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="image">
								<left>33</left>
								<centertop>49%</centertop>
								<width>21</width>
								<height>21</height>
								<texture colordiffuse="lightgrey">$VAR[ListWatchedIconVar]</texture>
							</control>
						</control>
					</itemlayout>
					<focusedlayout condition="!Container.Content(songs) + !Container.Content(addons) + !Container.Content(playlists) + !Container.Content() + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(movies) + !Container.Content(musicvideos) + !Container.Content(videos) + !Container.Content(favourites)" height="67" width="610" infoupdate="300">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-1</top>
								<bottom>10</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
							</control>
							<control type="label">
								<left>29</left>
								<width>844</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>true</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>29</left>
								<width>844</width>
								<centertop>50%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
						</control>
					</focusedlayout>
					<itemlayout condition="!Container.Content(songs) + !Container.Content(addons) + !Container.Content(playlists) + !Container.Content() + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(movies) + !Container.Content(musicvideos) + !Container.Content(videos) + !Container.Content(favourites)" height="67" width="610">
						<control type="label">
							<left>69</left>
							<width>844</width>
							<top>0</top>
							<bottom>0</bottom>
							<aligny>center</aligny>
							<font>font32</font>
							<textcolor>lightgrey</textcolor>
							<label>$VAR[ListLabelVar]</label>
							<shadowcolor>text_shadow</shadowcolor>
						</control>
					</itemlayout>
					<focusedlayout condition="!String.IsEqual(Window(Home).Property(CurrentFolder),addons) + [Container.Content(playlists) | Container.Content(favourites) | Container.Content() | String.StartsWith(Container.PluginName,plugin.video)]" height="67" width="610" infoupdate="300">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-1</top>
								<bottom>10</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
								<animation condition="
									[
										[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] | 
										[Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]
									]" 
									reversible="true">
									<effect type="slide" start="0,0" end="20,0" time="0" tween="cubic" easing="in" />
								</animation>
							</control>
							<control type="label">
								<left>29</left>
								<width>844</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>true</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>29</left>
								<width>844</width>
								<centertop>50%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
						</control>
					</focusedlayout>
					<itemlayout condition="!String.IsEqual(Window(Home).Property(CurrentFolder),addons) + [Container.Content(playlists) | Container.Content(favourites) | Container.Content() | String.StartsWith(Container.PluginName,plugin.video)]" height="67" width="610">
						<control type="label">
							<left>69</left>
							<width>844</width>
							<top>0</top>
							<bottom>0</bottom>
							<aligny>center</aligny>
							<font>font32</font>
							<textcolor>lightgrey</textcolor>
							<label>$VAR[ListLabelVar]</label>
							<shadowcolor>text_shadow</shadowcolor>
						</control>
					</itemlayout>
					<!-- <focusedlayout condition="Container.Content(addons) + ![String.StartsWith(Container.PluginName,plugin.video.otaku) | String.StartsWith(Container.PluginName,plugin.video.scrubsv2)]" height="210" width="610" infoupdate="30"> -->
					<focusedlayout condition="String.IsEqual(Window(Home).Property(CurrentFolder),addons) | [Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video)]" height="210" width="610" infoupdate="30">
						<control type="group">
							<left>40</left>
							<control type="image">
								<top>-4</top>
								<bottom>12</bottom>
								<width>5</width>
								<left>-15</left>
								<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
								<visible>Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(50600)</visible>
								<animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
								<animation condition="
									[
										[Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)]
									]" 
									reversible="true">
									<effect type="slide" start="0,0" end="20,0" time="0" tween="cubic" easing="in" />
								</animation>
							</control>
							<control type="label">
								<left>79</left>
								<width>790</width>
								<centertop>13%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>true</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font36_title</font>
								<label>$INFO[ListItem.Label]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>79</left>
								<width>700</width>
								<centertop>13%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font36_title</font>
								<label>$VAR[ListLabelVar]</label>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="label">
								<left>33</left>
								<width>900</width>
								<centertop>33%</centertop>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<scroll>true</scroll>
								<scrollspeed>300</scrollspeed>
								<font>font23</font>
								<label>$VAR[AddonsLabel2Var]</label>
								<textcolor>$VAR[FocusColorTheme]</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<!-- <control type="textbox">
								<left>33</left>
								<width>810</width>
								<centertop>33%</centertop>
								<height>50</height>
								<aligny>center</aligny>
								<font>font27</font>
								<label>$VAR[AddonsLabel2Var]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="3000" time="3000" repeat="3000">$PARAM[focused]</autoscroll>
							</control> -->
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>900</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[ListBoxInfoVar]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<autoscroll delay="7000" time="3000" repeat="7000">true</autoscroll>
								<visible>![Container.OnNext | Container.OnPrevious] + Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="textbox">
								<top>89</top>
								<left>33</left>
								<width>900</width>
								<bottom>10</bottom>
								<aligny>center</aligny>
								<font>font23</font>
								<label>$VAR[ListBoxInfoVar]</label>
								<textcolor>unfocused_text</textcolor>
								<shadowcolor>text_shadow</shadowcolor>
								<visible>[Container.OnNext | Container.OnPrevious] | !Control.HasFocus($PARAM[list_id])</visible>
							</control>
							<control type="image">
								<left>890</left>
								<centertop>11.5%</centertop>
								<width>30</width>
								<height>30</height>
								<texture>$VAR[AddonsOriginVar]</texture>
								<aspectratio>keep</aspectratio>
							</control>
							<!-- <control type="image">
								<right>-220</right>
								<centertop>11.5%</centertop>
								<width>30</width>
								<height>30</height>
								<texture>$VAR[AddonsOriginVar]</texture>
								<aspectratio>keep</aspectratio>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control> -->
							<control type="image">
								<left>33</left>
								<centertop>11.5%</centertop>
								<width>33</width>
								<height>30</height>
								<texture>$VAR[AddonsListIconVar]</texture>
								<aspectratio>keep</aspectratio>
							</control>
							<!-- <control type="image">
								<left>33</left>
								<centertop>12.5%</centertop>
								<width>33</width>
								<height>30</height>
								<texture>$VAR[AddonsListIconVar]</texture>
								<aspectratio>keep</aspectratio>
								<animation effect="fade" time="150">VisibleChange</animation>
								<visible>Control.HasFocus($PARAM[list_id])</visible>
							</control> -->
						</control>
					</focusedlayout>
					<itemlayout condition="String.IsEqual(Window(Home).Property(CurrentFolder),addons) | [Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video)]" height="67" width="610">
						<control type="group">
							<left>40</left>
							<control type="label">
								<left>79</left>
								<width>900</width>
								<top>0</top>
								<bottom>0</bottom>
								<aligny>center</aligny>
								<font>font32</font>
								<textcolor>lightgrey</textcolor>
								<label>$INFO[ListItem.Label]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type="image">
								<left>890</left>
								<centertop>47%</centertop>
								<width>30</width>
								<height>30</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="lightgrey">$VAR[AddonsOriginVar]</texture>
							</control>
							<control type="image">
								<left>33</left>
								<centertop>47%</centertop>
								<width>33</width>
								<height>33</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="lightgrey">$VAR[AddonsListIconVar]</texture>
							</control>
						</control>
					</itemlayout>
				</control>
			</control>
		</definition>
	</include>

	<include name="ListThumbInfoPanel">
		<param name="fallback_image"></param>
		<param name="flip_bg">false</param>
		<definition>
			<control type="group">
				<depth>DepthContentPanel</depth>
				<!-- <include content="ContentPanel">
					<param name="width" value="1106" />
					<param name="flipx" value="$PARAM[flip_bg]" />
				</include> -->
				<!-- <include content="FlixPanel"/> -->
				<!-- image control -->
				<!-- <control type="image">
					<left>875</left>
					<bottom>25</bottom>
					<width>170</width>
					<height>170</height>
					<aspectratio aligny="center" align="center">keep</aspectratio>
					<fadetime>300</fadetime>
					<texture fallback="$PARAM[fallback_image]" background="true">$INFO[ListItem.Icon]</texture>
					<visible>!String.IsEqual(Container.PluginName,plugin.video.dramacool) + ![$EXP[isMovie] | $EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode] | String.IsEqual(ListItem.DBType,song)] + !Container.Content(addons)</visible>
				</control> -->
				<control type="image">
					<left>30</left>
					<top>110</top>
					<width>540</width>
					<height>470</height>
					<aspectratio aligny="bottom">keep</aspectratio>
					<fadetime>300</fadetime>
					<texture fallback="DefaultAudio.png" background="true">$VAR[IconWallThumbVar]</texture>
					<visible>String.IsEqual(ListItem.DBType,song)</visible>
				</control>
				<control type="group">
					<visible>!Container.Content() | !String.isempty(ListItem.Plot)</visible>
					<left>30</left>
					<!-- Plot control -->
					<control type="textbox" id="15503">
						<top>600</top>
						<width>540</width>
						<bottom>70</bottom>
						<autoscroll time="3000" delay="3000" repeat="5000">!System.HasModalDialog + $PARAM[focused]</autoscroll>
						<label>$VAR[ListBoxInfoVar]</label>
						<textcolor>unfocused_text</textcolor>
						<visible>String.IsEqual(ListItem.DBType,song)</visible>
					</control>
				</control>
				<control type="group">
					<left>20</left>
					<top>640</top>
					<visible>ListItem.IsCollection + String.IsEmpty(ListItem.Plot)</visible>
					<include content="InfoList">
						<param name="bottom" value="100" />
						<param name="width" value="540" />
						<param name="sortby" value="year" />
						<param name="sortorder" value="ascending" />
						<param name="font" value="font13" />
					</include>
				</control>
				<control type="group">
					<visible>!ListItem.IsCollection + String.IsEmpty(Control.GetLabel(15500)) + Control.IsVisible(15500)</visible>
					<control type="group">
						<left>20</left>
						<top>640</top>
						<visible>!String.IsEmpty(ListItem.DBID)</visible>
						<include content="InfoList">
							<param name="list_id" value="42000" />
							<param name="bottom" value="100" />
							<param name="width" value="540" />
							<param name="sortby" value="year" />
							<param name="sortorder" value="ascending" />
							<param name="item_label" value="$INFO[ListItem.Year,[COLOR button_focus],[/COLOR]  -  ]$INFO[ListItem.Label]" />
							<param name="visible" value="String.IsEqual(ListItem.DBType,artist)" />
						</include>
						<include content="InfoList">
							<param name="list_id" value="43000" />
							<param name="bottom" value="100" />
							<param name="width" value="540" />
							<param name="sortby" value="track" />
							<param name="sortorder" value="ascending" />
							<param name="item_label" value="$INFO[ListItem.Duration,[COLOR button_focus],[/COLOR]  -  ]$INFO[ListItem.Label]" />
							<param name="visible" value="String.IsEqual(ListItem.DBType,album)" />
						</include>
					</control>
				</control>
			</control>
		</definition>
	</include>
	
</includes>
