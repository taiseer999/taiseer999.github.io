<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="PosterFlowLayout">
		<param name="focused">false</param>
		<definition>
			<control type="group">
			<visible>String.IsEmpty(ListItem.Art(fanart)) + String.IsEmpty(ListItem.Art(poster))</visible>
				<control type="image">
					<width>472</width>
          <height>710</height>
					<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
          <visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
					<!-- <visible>!Container($PARAM[list_id]).IsUpdating</visible> -->
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="image">
					<width>472</width>
          <height>710</height>
					<texture colordiffuse="FF333333">colors/dark.png</texture>
          <visible>![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
          <visible>![$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
					<!-- <visible>!Container($PARAM[list_id]).IsUpdating</visible> -->
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="textbox">
					<left>50</left>
					<top>200</top>
					<width>620</width>
					<height>680</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[FocusedTextColorVar]</textcolor>
          <font>font_MainMenu</font>
					<autoscroll time="2000" delay="1000" repeat="2000">$PARAM[focused] + Control.HasFocus($PARAM[list_id])</autoscroll>
					<visible>!ListItem.IsParentFolder + [$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
				</control>
				<control type="textbox">
					<left>12</left>
					<top>100</top>
					<width>180</width>
					<height>880</height>
					<font>font25_title</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>unfocused_text</textcolor>
					<visible>!ListItem.IsParentFolder + [!$PARAM[focused] | [!Control.HasFocus($PARAM[list_id]) + ![Control.IsVisible(51) | Control.IsVisible(500)]]]</visible>
				</control>
				<!-- <control type="image">
					<left>1</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + $PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<left>2.5</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture colordiffuse="unfocused_text" fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + ![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
				</control> -->
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(ListItem.Art(poster))</visible>
        <control type="group">
          <animation type="UnFocus" condition="Container(51).OnNext" reversible="false">
            <effect type="slide" start="200,0" end="0,0" time="700" tween="quadratic"/>
          </animation>
          <animation type="UnFocus" condition="Container(51).OnPrevious" reversible="false">
            <effect type="slide" start="-200,0" end="0,0" time="700" tween="quadratic"/>
          </animation>
          <control type="image">
            <!-- 720 -->
            <width>472</width>
            <height>710</height>
            <texture colordiffuse="artwork_dim" fallback="DefaultMovies.png">$VAR[FlixPosterVar]</texture>
            <!-- <aspectratio scalediffuse="false">scale</aspectratio> -->
            <visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
          </control>
          <control type="image">
            <width>472</width>
            <height>710</height>
            <texture fallback="DefaultMovies.png" colordiffuse="$VAR[PosterFlowArtworkDiffuse]">$VAR[FlixPosterVar]</texture>
            <!-- <aspectratio scalediffuse="false">scale</aspectratio> -->
            <visible>![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
            <visible>![$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
            <!-- <animation condition="Container($PARAM[list_id]).IsUpdating + String.IsEmpty(Skin.String(TrailerPlaying))" effect="fade" time="700" start="50" end="100" pulse="true">Conditional</animation> -->
          </control>
          <control type="group">
            <width>387</width>
            <height>150</height>
            <centertop>40%</centertop>
            <centerleft>50%</centerleft>
            <animation effect="rotate" center="auto" end="90" time="0" condition="true">Conditional</animation>
            <control type="image">
              <animation effect="fade" start="0" end="100" time="1000" >Visible</animation>
              <width>258</width>
              <height>100</height>
              <left>150</left>
              <centertop>50%</centertop>
              <texture background="true">$VAR[ClearlogoVar]</texture>
              <aspectratio align="center" aligny="center">keep</aspectratio>
              <visible>![$PARAM[focused] + Control.HasFocus($PARAM[list_id])] + String.IsEmpty(Skin.String(TrailerPlaying))</visible>
              <visible>![$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]] + String.IsEmpty(Skin.String(TrailerPlaying))</visible>
              <visible>[!String.IsEmpty(ListItem.Art(clearlogo)) + Skin.HasSetting(Enable.SpineClearlogo) + !Skin.HasSetting(Disable.51Dim)] + [$EXP[isMovie] | $EXP[isTVShow] | $EXP[isEpisode] | Container.Content(addons)] + !$EXP[sidebar_visible]</visible>
            </control>
          </control>
          <control type="image">
            <left>0</left>
            <top>540</top>
            <width>170</width>
            <height>170</height>
            <texture colordiffuse="overlay_fade_color">overlays/overlay_bg.png</texture>
            <visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]] | Skin.HasSetting(Disable.51Dim)</visible>
            <visible>Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0) | !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)</visible>
            <animation condition="
              [[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]] + 
              [
                  [$EXP[isMovie] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] | 
                  [[$EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode]] + !Integer.IsGreater(ListItem.Playcount,0) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] |
                  [!$EXP[isMovie] + !$EXP[isTVShow] + !$EXP[isSeason] + !$EXP[isEpisode] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]
              ]
              " effect="fade" time="0" start="100" end="0">Conditional
            </animation>
          </control>
          <control type="image">
            <left>0</left>
            <top>620.5</top>
            <width>472</width>
            <height>90</height>
            <texture colordiffuse="overlay_fade_color">overlays/overlay_bg_long.png</texture>
            <visible>!String.IsEmpty(ListItem.Art(poster))</visible>
            <visible>
              [
                [$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
                $PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]
              ] + 
              [
                [[$EXP[isTVShow] | $EXP[isSeason]] +
                Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
                !String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
                !Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)
              ] | 
                [[$EXP[isMovie] | $EXP[isEpisode]] + 
                !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)
                ]
              ]
            </visible>
            <include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
          </control>
          <control type="label">
            <right>20</right>
            <top>650</top>
            <width>280</width>
            <font>font32_title</font>
            <shadowcolor>text_shadow</shadowcolor>
            <align>right</align>
            <label>$VAR[Item_WatchedProgress]</label>
            <shadowcolor>text_shadow</shadowcolor>
            <textcolor>unfocused_text</textcolor>
            <align>right</align>
            <visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]] + [$EXP[isMovie] | $EXP[isEpisode]]</visible>
            <include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
          </control>
          <control type="label">
            <right>20</right>
            <top>650</top>
            <width>280</width>
            <font>font32_title</font>
            <shadowcolor>text_shadow</shadowcolor>
            <align>right</align>
            <label>$INFO[ListItem.Property(UnwatchedEpisodes),, remaining]</label>
            <visible>$EXP[isTVShow] | $EXP[isSeason]</visible>
            <visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]</visible>
            <visible>
              Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + 
              !String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + 
              !Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)
            </visible>
            <include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
          </control>
          <control type="image">
            <animation condition="!Skin.HasSetting(Disable.51Dim) + ![$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]]" reversible="true">
              <effect type="slide" start="0,0" end="30,0" time="0" tween="cubic" easing="inout" />
            </animation>
            <left>28</left>
            <top>650</top>
            <width>35</width>
            <height>35</height>
            <texture colordiffuse="unfocused_text">$VAR[WallWatchedIconVar]</texture>
            <align>left</align>
          </control>
        </control>
			</control>
				<!-- <control type="image">
					<left>218</left>
					<top>11.2</top>
					<width>24</width>
					<height>24</height>
					<texture>lists/played-total.png</texture>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(51) | Control.IsVisible(500)]] + !Integer.IsEqual(ListItem.Property(UnwatchedEpisodes),0)</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control> -->
		</definition>
	</include>

	<include name="View_51_PosterFlow">
		<control type="group">
			<include>OpenClose_Right</include>
			<include>MediaMenuAnimations</include>
			<left>0</left>
			<top>0</top>
			<visible>Control.IsVisible(51)</visible>
      <control type="group">
        <animation condition="!Control.HasFocus(5199) + !$EXP[sidebar_visible] + String.IsEqual(Window(Home).Property(FanartVisible),true)">
          <effect type="fade" start="100" end="0" time="300" tween="cubic" reversible="true" />
        </animation>
        <animation type="Hidden">
          <effect type="fade" start="100" end="0" time="500" delay="500" tween="cubic" easing="out"/>
        </animation>
        <control type="image">
          <height>367</height>
          <bottom>0</bottom>
          <texture colordiffuse="$VAR[FocusColorTheme]">colors/darkest.png</texture>
          <visible>String.IsEqual(Skin.String(BackgroundSetting),1)</visible>
        </control>
        <control type="image">
          <height>3</height>
          <bottom>367</bottom>
          <texture colordiffuse="$VAR[FocusColorTheme]">masks/posterflowdivider.png</texture>
        </control>
      </control>
			<control type="wraplist" id="51">
        <!-- -171 -->
        <top>0</top>
				<left>0</left>
				<right>0</right>
				<height>100%</height>
        <width>2230</width>
				<onleft>51</onleft>
				<orientation>horizontal</orientation>
        <focusposition>5</focusposition>
				<onup>9000</onup>
        <animation condition="!Control.HasFocus(5199) + !$EXP[sidebar_visible] + String.IsEqual(Window(Home).Property(FanartVisible),true)">
          <effect type="fade" start="100" end="0" time="300" tween="cubic" reversible="true" />
        </animation>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),0)">5199</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),1)">Container.SetViewMode(500)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),2)">Container.SetViewMode(501)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),3) + String.IsEmpty(Skin.String(TrailerPlaying))">Skin.SetString(TrailerPlaying, true)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),3) + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))">$VAR[AutoplayTrailerSource]</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),3) + Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),3) + Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),4)">info</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),5)">SetProperty(FanartVisible,true,Home)</ondown>
        <ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.MovieTV),5) + String.IsEqual(Window(Home).Property(FanartVisible),true)">ClearProperty(FanartVisible,Home)</ondown>
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.Other),0)">5199</ondown>
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.Other),1)">Container.SetViewMode(501)</ondown>
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.Other),2)">info</ondown>
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.Other),3)">SetProperty(FanartVisible,true,Home)</ondown>
        <ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(51OnDownSetting.Other),3) + String.IsEqual(Window(Home).Property(FanartVisible),true)">ClearProperty(FanartVisible,Home)</ondown>
				<onback condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onback>
				<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
				<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
				<viewtype label="310981">icon</viewtype>
				<preloaditems>2</preloaditems>
				<pagecontrol>5199</pagecontrol>
				<scrolltime tween="cubic" easing="out">700</scrolltime>
				<!-- <visible>Container.Content(artists) | Container.Content(albums) | Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | Container.Content(musicvideos) | Container.Content(images) | Container.Content(videos) | Container.Content(games)</visible> -->
				<visible>
					[Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | 
					
					[Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | 
					
					[Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | 
					
					[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 
					
					[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 
					
					[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 
					
					[Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.outside))]] | 
					
					[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 
					
					[Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | 
					
					[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 
					
					[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[310981]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]]
				</visible>
        <!-- 245 -->
        <!-- 120 -->
				<itemlayout width="145" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<left>0</left>
						<!-- <top>120</top> -->
						<include>PosterFlowLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="472" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<!-- <top>120</top> -->
						<include content="PosterFlowLayout">
							<param name="focused" value="true" />
						</include>
            <include>ResetFanartVisible</include>
            <include>ReturntoView</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<top>150</top>
						<left>40</left>
						<include>SquareLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<left>40</left>
						<include content="SquareLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
			</control>
      <control type="image">
        <visible>String.IsEqual(Window(Home).Property(FanartVisible),true) + !Control.HasFocus(5199) + !$EXP[sidebar_visible]</visible>
        <animation effect="fade" time="300" tween="cubic">VisibleChange</animation>
				<include>FullScreenDimensions</include>
				<fadetime>500</fadetime>
				<texture colordiffuse="artwork_dim" diffuse="overlays/posterflow-fanartdiffuse.png" background="true" fallback="$VAR[AltusCustomBackgroundImage]">$VAR[MediaFanartVar]</texture>
				<aspectratio>stretch</aspectratio>
				<include>ArtworkAnimations</include>
			</control>
      <control type="group">
        <top>710</top>
        <left>77</left>
        <right>77</right>
        <!-- <bottom>160</bottom> -->
        <control type="grouplist">
          <left>0</left>
          <top>0</top>
          <bottom>0</bottom>
          <orientation>vertical</orientation>
          <align>center</align>
          <itemgap>10</itemgap>
          <control type="label">
            <align>center</align>
            <height>60</height>
            <label>$VAR[ClockCrumbs]$VAR[BreadcrumbsVideoVar]$VAR[FlixCategory]$VAR[VideoFlixCrumbsVar]</label>
            <font>font32</font>
            <textcolor>$VAR[FocusColorTheme]</textcolor>
            <shadowcolor>text_shadow</shadowcolor>
          </control>
          <!-- <control type="label">
            <left>15</left>
            <top>913</top>
            <width>100%</width>
            <label>$INFO[Container.CurrentItem] [COLOR $VAR[FocusColorTheme]][B]/[/B][/COLOR] $INFO[Container.NumItems] total items</label>
            <font>font32</font>
            <textcolor>unfocused_text</textcolor>
            <shadowcolor>text_shadow</shadowcolor>
            <align>center</align>
          </control> -->
          <include condition="!String.IsEmpty(Skin.String(valid_api_key))" content="HorizontalRatings">
            <param name="align" value="center"/>
          </include>
          <control type="label">
            <align>center</align>
            <height>35</height>
            <!-- <label>$INFO[Window(Home).Property(Returnto51)]</label> -->
            <label>$VAR[VideoInfoPanelTop]</label>
            <font>font27</font>
            <textcolor>$VAR[FocusColorTheme]</textcolor>
            <scroll>true</scroll>
            <scrollspeed>150</scrollspeed>
          </control>
          <control type="textbox">
            <height max="130">auto</height>
            <font>font27</font>
            <textcolor>unfocused_text</textcolor>
            <align>center</align>
            <label>$VAR[RI_Plot]</label>
            <autoscroll delay="12000" time="5000" repeat="12000">$PARAM[focused]</autoscroll>
            <visible>Control.HasFocus(51)</visible>
          </control>
          <control type="textbox">
            <height max="130">auto</height>
            <font>font27</font>
            <textcolor>unfocused_text</textcolor>
            <align>center</align>
            <label>$VAR[RI_Plot]</label>
            <visible>$EXP[sidebar_visible] | Control.HasFocus(5199)</visible>
          </control>
        </control>
      </control>
		</control>
	</include>

</includes>