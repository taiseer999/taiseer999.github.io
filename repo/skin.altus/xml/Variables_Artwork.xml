<?xml version="1.0" encoding="UTF-8"?>
<includes>

  <variable name="ImageTextureSourceVar">
    <!-- <value condition="ControlGroup(12000).HasFocus | Window.IsVisible(tvguide) | Window.IsVisible(tvchannels)">$VAR[ChannelListEPGIconVar]</value> -->
    <value condition="[Window.IsVisible(Home) + !ControlGroup(15000).HasFocus + !String.IsEqual(Container(9000).ListItem.Property(id),weather)] | Window.IsVisible(1121)">$VAR[HomeFanartVar]</value>
    <!-- <value condition="Window.IsVisible(Home) + [ControlGroup(15000).HasFocus | String.IsEqual(Container(9000).ListItem.Property(id),weather)]">$VAR[WeatherFanartVar]</value> -->
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)]">$VAR[MediaFanartVar]</value>
    <!-- <value condition="Control.IsVisible(50)">$VAR[ListArtworkVar]</value>
    <value condition="Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(500) | Control.IsVisible(501)">$VAR[MediaFanartVar]</value> -->
	</variable>

  <variable name="AltusCustomBackgroundImage">
		<value condition="!String.IsEmpty(Skin.String(AltusCustomBackground))">$INFO[Skin.String(AltusCustomBackground)]</value>
		<value condition="String.IsEmpty(Skin.String(AltusCustomBackground))">special://skin/resources/fallback.jpg</value>
	</variable>
  <!-- <variable name="SpotlightColorDiffuse">
		<value condition="String.IsEmpty(Window(Home).Property(SpotlightWidget))">FF404040</value>
		<value>FF000000</value>
	</variable> -->



  <variable name="HomeFanartVar">
    <value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
    <value condition="!String.IsEmpty(ListItem.Thumb) + !String.IsEmpty(Window(Home).Property(SpotlightWidget)) + $EXP[isEpisode]">$INFO[ListItem.Thumb]</value>
    <value condition="!String.IsEmpty(ListItem.Art(fanart)) | [String.IsEmpty(ListItem.Art(landscape)) + !String.IsEmpty(ListItem.Art(fanart))] | [!$EXP[isContent] + !String.IsEmpty(ListItem.Art(fanart))]">$INFO[ListItem.Art(fanart)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
    <value condition="Container.Content(genres) + Window.IsActive(videos)">$INFO[Skin.String(MovieGenreFanart.path)]$INFO[ListItem.Label]$INFO[Skin.String(MovieGenreFanart.ext)]</value>
    <value condition="Window.IsActive(pictures) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.FolderPath]</value>
    <value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
    <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
    <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
    <value>$INFO[Container.Art(fanart)]</value>
  </variable>

	<variable name="MediaFanartVar">
    <value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(ListItem.Thumb) + $EXP[isEpisode] + ![Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(55) | Control.IsVisible(501)] + ![Control.IsVisible(50) + [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)]]">$INFO[ListItem.Thumb]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value>$INFO[Container.Art(fanart)]</value>
	</variable>

  <variable name="AddonsFanartVar">
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>
  
	<variable name="WeatherFanartVar">
		<value condition="!String.IsEmpty(Container.ListItem.Property(FanartCode))">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container.ListItem.Property(FanartCode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(current.fanartcode)) + !String.IsEmpty(Skin.String(weatherfanart.path))">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(weatherfanart.ext)]</value>
		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]weather$INFO[Skin.String(HomeFanart.ext)]</value>
	</variable>

  <variable name="ClearlogoVar">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(tvshow.clearlogo))">$INFO[Container.ListItem.Art(tvshow.clearlogo)]</value>
		<value>$INFO[ListItem.Art(clearlogo)]</value>
	</variable>

  <variable name="PlayerCacheColor">
		<value condition="String.IsEmpty(Window(Home).Property(listitem_logo_color_alt_video))">osd_light</value>
		<value>$INFO[Window(Home).Property(listitem_logo_color_alt_video)]</value>
	</variable>

  <variable name="PlayerProgressColor">
    <value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(Skin.String(FocusColorThemeSetting),0)">accent_color</value>
    <value condition="!String.IsEmpty(Window(Home).Property(listitem_logo_color_video)) + String.IsEqual(Skin.String(FocusColorThemeSetting),0) + [String.IsEqual(Skin.String(BackgroundSetting),1) | String.IsEqual(Skin.String(BackgroundSetting),2)]">$INFO[Window(Home).Property(listitem_logo_color_video)]</value>
    <value condition="String.IsEqual(Skin.String(FocusColorThemeSetting),1)">FFA3A3A3</value>
    <value>FFA3A3A3</value>
  </variable>

  <variable name="PlayerProgressTextColor">
    <value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(Skin.String(FocusColorThemeSetting),0)">focused_text</value>
    <value condition="!String.IsEmpty(Window(Home).Property(listitem_logo_text_color_video)) + String.IsEqual(Skin.String(FocusColorThemeSetting),0) + [String.IsEqual(Skin.String(BackgroundSetting),1) | String.IsEqual(Skin.String(BackgroundSetting),2)]">$INFO[Window(Home).Property(listitem_logo_text_color_video)]</value>
    <value condition="String.IsEqual(Skin.String(FocusColorThemeSetting),1)">FF141415</value>
    <value>FF141415</value>
  </variable>

  <variable name="PlayerClearlogoVar">
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
	</variable>

  <variable name="DialogBackground">
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),2)">$INFO[Window(home).Property(listitem_blurred)]</value>
		<value>colors/darker.png</value>
	</variable>

  <variable name="DialogBackgroundDiffuse">
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),2)">E6666666</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1)">$VAR[FocusColorTheme]</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0)">accent_color</value>
	</variable>

	<variable name="FlixPosterVar">
    <value condition="$EXP[isSeason] + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
    <value condition="!$EXP[isEpisode] + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
    <value condition="$EXP[isEpisode] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
    <value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
    <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
    <value>$INFO[ListItem.Icon]</value>
  </variable>

	<variable name="ListArtworkVar">
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)">$VAR[FlixPosterVar]</value>
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)">$VAR[FlixPosterVar]</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)">$VAR[FlixPosterVar]</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)">$VAR[FlixPosterVar]</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),1)">$VAR[FlixPosterVar]</value>
    <value condition="Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)">$VAR[ListLandscapeVar]</value>
    <value condition="Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)">$VAR[ListLandscapeVar]</value>
    <!-- <value condition="Container.Content(addons)">$INFO[ListItem.Icon]</value> -->
    <value>$VAR[ListLandscapeVar]</value>
  </variable>

  <variable name="ListLandscapeVar">
    <!-- <value condition="$EXP[isMovie] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)">$INFO[ListItem.Art(fanart)]</value> -->
    <value condition="$EXP[isMovie] + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isMovie] + String.IsEqual(Skin.String(ListLandscape.movies),0) + !String.IsEmpty(Listitem.Art(landscape))">$INFO[Listitem.Art(landscape)]</value>
    <value condition="$EXP[isMovie] + String.IsEqual(Skin.String(ListLandscape.movies),0) + String.IsEmpty(Listitem.Art(landscape))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isMovie] + String.IsEqual(Skin.String(ListLandscape.movies),1)">$INFO[ListItem.Art(fanart)]</value>
    
    <value condition="$EXP[isTVShow] + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isTVShow] + String.IsEqual(Skin.String(ListLandscape.tvshows),0) + !String.IsEmpty(Listitem.Art(landscape))">$INFO[Listitem.Art(landscape)]</value>
    <value condition="$EXP[isTVShow] + String.IsEqual(Skin.String(ListLandscape.tvshows),0) + String.IsEmpty(Listitem.Art(landscape))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isTVShow] + String.IsEqual(Skin.String(ListLandscape.tvshows),1)">$INFO[ListItem.Art(fanart)]</value>
    
    <value condition="$EXP[isSeason] + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isSeason] + String.IsEqual(Skin.String(ListLandscape.seasons),0) + !String.IsEmpty(Listitem.Art(landscape))">$INFO[Listitem.Art(landscape)]</value>
    <value condition="$EXP[isSeason] + String.IsEqual(Skin.String(ListLandscape.seasons),0) + String.IsEmpty(Listitem.Art(landscape))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isSeason] + String.IsEqual(Skin.String(ListLandscape.seasons),1)">$INFO[ListItem.Art(fanart)]</value>
    
    <value condition="$EXP[isEpisode] + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)">$INFO[ListItem.Thumb]</value>
    <value condition="$EXP[isEpisode] + String.IsEqual(Skin.String(ListLandscape.episodes),0)">$INFO[ListItem.Thumb]</value>
    <value condition="$EXP[isEpisode] + String.IsEqual(Skin.String(ListLandscape.episodes),1)">$INFO[ListItem.Art(fanart)]</value>
    <value condition="$EXP[isEpisode] + String.IsEqual(Skin.String(ListLandscape.episodes),2) + !String.IsEmpty(Listitem.Art(landscape))">$INFO[Listitem.Art(landscape)]</value>
    <value condition="$EXP[isEpisode] + String.IsEqual(Skin.String(ListLandscape.episodes),2) + String.IsEmpty(Listitem.Art(landscape))">$INFO[ListItem.Art(fanart)]</value>
    
    <value>$INFO[ListItem.Art(fanart)]</value>
  </variable>

  <variable name="FlixScapeVar">
    <!-- Home window -->
    <value condition="[Window.IsVisible(Home) | Window.IsVisible(1121)] + !$EXP[isEpisode] + String.IsEqual(Skin.String(HomeItemArtworkChoice),0) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="[Window.IsVisible(Home) | Window.IsVisible(1121)] + !$EXP[isEpisode] + String.IsEqual(Skin.String(HomeItemArtworkChoice),1) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="[Window.IsVisible(Home) | Window.IsVisible(1121)] + $EXP[isEpisode] + !String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Thumb]</value>
    <!-- Fallbacks/Universes (mixed content) -->
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isMovie] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isTVShow] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isSeason] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Thumb]</value>
    <value>$INFO[ListItem.Art(fanart)]</value>
  </variable>

  <variable name="SmallLandscapeVar">
    <value condition="$EXP[isEpisode] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Thumb]</value>
    <value condition="$EXP[isSeason] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Thumb]</value>
    <value condition="!$EXP[isEpisode] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="[Window.IsVisible(Home) | Window.IsVisible(1121)] + $EXP[isEpisode] + !String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Thumb]</value>
    <!-- Fallbacks/Universes (mixed content) -->
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isMovie] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isTVShow] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + $EXP[isSeason] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
    <value condition="![Window.IsVisible(Home) | Window.IsVisible(1121)] + Container.Content(episodes) + !String.IsEmpty(ListItem.Art(Thumb))">$INFO[ListItem.Thumb]</value>
    <value>$INFO[ListItem.Art(fanart)]</value>
  </variable>

  <variable name="ListArtworkToggleVar">
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)">Skin.SetString(ListArtworkChoice.movies,1)</value>
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)">Skin.SetString(ListArtworkChoice.movies,2)</value>
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)">Skin.SetString(ListArtworkChoice.movies,0)</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)">Skin.SetString(ListArtworkChoice.tvshows,1)</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)">Skin.SetString(ListArtworkChoice.tvshows,2)</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)">Skin.SetString(ListArtworkChoice.tvshows,0)</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)">Skin.SetString(ListArtworkChoice.seasons,1)</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)">Skin.SetString(ListArtworkChoice.seasons,2)</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)">Skin.SetString(ListArtworkChoice.seasons,0)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)">Skin.SetString(ListArtworkChoice.episodes,1)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)">Skin.SetString(ListArtworkChoice.episodes,2)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)">Skin.SetString(ListArtworkChoice.episodes,0)</value>
    <value condition="Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),0)">Skin.SetString(ListArtworkChoice.videos,2)</value>
    <value condition="Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)">Skin.SetString(ListArtworkChoice.videos,0)</value>
    <value condition="Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)">Skin.SetString(ListArtworkChoice.files,2)</value>
    <value condition="Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)">Skin.SetString(ListArtworkChoice.files,0)</value>
    <value condition="Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)">Skin.SetString(ListArtworkChoice.favourites,2)</value>
    <value condition="Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)">Skin.SetString(ListArtworkChoice.favourites,0)</value>
    <value condition="Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)">Skin.SetString(ListArtworkChoice.,2)</value>
    <value condition="Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)">Skin.SetString(ListArtworkChoice.,0)</value>
    <value condition="Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)">Skin.SetString(ListArtworkChoice.addons,2)</value>
    <value condition="Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)">Skin.SetString(ListArtworkChoice.addons,0)</value>
    <value condition="Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)">Skin.SetString(ListArtworkChoice.addons,2)</value>
    <value condition="Container.Content(addons) + !String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)">Skin.SetString(ListArtworkChoice.addons,0)</value>
</variable>

  <variable name="ListLandscapeToggleVar">
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListLandscape.movies),0)">Skin.SetString(ListLandscape.movies,1)</value>
    <value condition="Container.Content(movies) + String.IsEqual(Skin.String(ListLandscape.movies),1)">Skin.SetString(ListLandscape.movies,0)</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListLandscape.tvshows),0)">Skin.SetString(ListLandscape.tvshows,1)</value>
    <value condition="Container.Content(tvshows) + String.IsEqual(Skin.String(ListLandscape.tvshows),1)">Skin.SetString(ListLandscape.tvshows,0)</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListLandscape.seasons),0)">Skin.SetString(ListLandscape.seasons,1)</value>
    <value condition="Container.Content(seasons) + String.IsEqual(Skin.String(ListLandscape.seasons),1)">Skin.SetString(ListLandscape.seasons,0)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),0)">Skin.SetString(ListLandscape.episodes,1)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),1)">Skin.SetString(ListLandscape.episodes,2)</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),2)">Skin.SetString(ListLandscape.episodes,0)</value>
  </variable>

  <variable name="ListArtworkSettingVar">
    <value condition="[[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),0)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)] | [Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]]">Landscape</value>
    <value condition="[[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]]">Poster</value>
    <value condition="[[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] | [Container.Content(videos) + String.IsEqual(Skin.String(ListArtworkChoice.videos),2)] | [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)] | [Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)]]">Fanart</value>
    <value condition="Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)">Icon</value>
  </variable>

  <variable name="ListLandscapeSettingVar">
    <value condition="[[Container.Content(movies) + String.IsEqual(Skin.String(ListLandscape.movies),0)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListLandscape.tvshows),0)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListLandscape.seasons),0)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),0)]]">Default</value>
    <value condition="[[Container.Content(movies) + String.IsEqual(Skin.String(ListLandscape.movies),1)] | [Container.Content(tvshows) + String.IsEqual(Skin.String(ListLandscape.tvshows),1)] | [Container.Content(seasons) + String.IsEqual(Skin.String(ListLandscape.seasons),1)] | [Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),1)]]">Fanart</value>
    <value condition="Container.Content(episodes) + String.IsEqual(Skin.String(ListLandscape.episodes),2)">Landscape</value>
  </variable>

  <variable name="HomeItemArtworkChoiceToggleVar">
    <value condition="!Container.Content(episodes) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0)">Skin.SetString(HomeItemArtworkChoice,1)</value>
    <value condition="!Container.Content(episodes) + String.IsEqual(Skin.String(HomeItemArtworkChoice),1)">Skin.SetString(HomeItemArtworkChoice,0)</value>
  </variable>
  
  <variable name="HomeItemArtworkChoiceSettingVar">
    <value condition="!Container.Content(episodes) + String.IsEqual(Skin.String(HomeItemArtworkChoice),0)">Default</value>
    <value condition="!Container.Content(episodes) + String.IsEqual(Skin.String(HomeItemArtworkChoice),1)">Fanart</value>
  </variable>	

  <variable name="PVRInfoHeader">
    <value condition="!String.IsEmpty(ListItem.Label) + !String.IsEmpty(ListItem.StartTime) + !String.IsEmpty(ListItem.EndTime)">[COLOR unfocused_text]$INFO[ListItem.Label][/COLOR] | [COLOR unfocused_text]$INFO[ListItem.StartTime][/COLOR] - [COLOR unfocused_text]$INFO[ListItem.EndTime][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Label) + String.IsEmpty(ListItem.StartTime) + String.IsEmpty(ListItem.EndTime)">[COLOR unfocused_text]$INFO[ListItem.Label][/COLOR]</value>
    <value>[COLOR unfocused_text]No information[/COLOR]</value>
  </variable>	

  <!-- <include name="altus.HiddenArtwork">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
	</include>

	<include name="altus.PreloadPoster">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture background="true">$VAR[FlixPosterVar]</texture>
		</control>
	</include>

	<include name="altus.PreloadPoster_ListSetting1">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture background="true">$VAR[FlixPosterVar]</texture>
      <visible>!Player.HasMedia + 
      [
        [Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),1)] | 
        [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),1)] | 
        [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),1)] | 
        [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),1)]
      ] + 
      [!Container.Content(addons) | String.StartsWith(Container.PluginName,plugin.video.otaku)]</visible>
		</control>
	</include>

	<include name="altus.PreloadLandscape_ListSetting0">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture background="true">$VAR[ListLandscapeVar]</texture>
      <visible>
      [
          [Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),0)] | 
          [Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),0)] | 
          [Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),0)] | 
          [Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),0)] | [Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),0)] | 
          [Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),0)] | 
          [Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),0)] |
          [Container.Content(addons) + String.StartsWith(Container.PluginName,plugin.video.otaku) + String.IsEqual(Skin.String(ListArtworkChoice.addons),0)]
      ]
      </visible>
		</control>
	</include>

	<include name="altus.PreloadFanart">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture background="true">$VAR[ImageTextureSourceVar]</texture>
		</control>
	</include>

	<include name="altus.PreloadClearlogo">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture background="true">$VAR[ClearlogoVar]</texture>
		</control>
	</include>

	<include name="altus.PreloadClearlogo_ListSetting0">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture>$VAR[ClearlogoVar]</texture>
      <visible>Skin.HasSetting(Enable.LandscapeClearlogo)</visible>
		</control>
	</include>

	<include name="altus.PreloadClearlogo_ListSetting2">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture>$VAR[ClearlogoVar]</texture>
      <visible>Skin.HasSetting(Enable.FanartClearlogo)</visible>
		</control>
	</include>

	<include name="altus.PreloadIcon">
		<control type="image">
			<include>altus.HiddenArtwork</include>
			<texture>$INFO[ListItem.Icon]</texture>
      <visible>!Player.HasMedia + 
      Container.Content(addons) + 
      !String.StartsWith(Container.PluginName,plugin.video.otaku) + 
      !String.IsEqual(Skin.String(ListArtworkChoice.addons),2)</visible>
		</control>
	</include>

	<include name="altus.Preload50_ListSetting0or1">
		<include>altus.PreloadFanart</include>
		<include>altus.PreloadLandscape_ListSetting0</include>
		<include>altus.PreloadClearlogo_ListSetting0</include>
    <include>altus.PreloadPoster_ListSetting1</include>
	</include>

	<include name="altus.Preload50_ListSetting2">
		<include>altus.PreloadFanart</include>
		<include>altus.PreloadPoster</include>
		<include>altus.PreloadClearlogo_ListSetting2</include>
	</include>

	<include name="altus.Preload50_Addons">
		<include>altus.PreloadFanart</include>
		<include>altus.PreloadIcon</include>
	</include> -->


</includes>