<?xml version="1.0" encoding="UTF-8"?>
<includes>
  <!-- RATINGS INFOPANEL VARIABLES -->

	<!-- <variable name="AltusIP_Divider">
		<value condition="[[Window.IsVisible(Home) | Window.IsVisible(1121)] + !String.IsEmpty(Window(Home).Property(SpotlightWidget))] | [Window.IsVisible(videos) + ![Control.IsVisible(54) | Control.IsVisible(55)]]"> • </value>
	</variable>

	<variable name="Linebreak">
		<value condition="[[Window.IsVisible(Home) | Window.IsVisible(1121)] + String.IsEmpty(Window(Home).Property(SpotlightWidget))] | [Window.IsVisible(videos) + [Control.IsVisible(54) | Control.IsVisible(55)]]">[CR]</value>
	</variable> -->

	<variable name="_Genre">
		<!-- Specific Genre Combinations -->
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,History)"> • [COLOR unfocused_text]Historical Docudrama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Historical Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Crime)"> • [COLOR unfocused_text]Crime Docudrama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Animated Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Crime Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Romantic Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sports) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Sports Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Animated Rom-Com[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Action Rom-Com[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Sci-Fi Rom-Com[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Animated Sci-Fi Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Animated Sci-Fi Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Ecchi) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Ecchi Rom-Com[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Slice of Life Rom-Com[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Sci-Fi Rom-Com[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Musical Rom-Com[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Musical Dramedy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic War Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic War Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Historical War Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Fantastical War Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Historical War Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]War Thriller[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Western Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Action) + !String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Western-Action[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Politics)"> • [COLOR unfocused_text]Political Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + !String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]War Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + !String.Contains(ListItem.Genre,Adventure) + !String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]War Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Kids) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Sci-Fi Fantasy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Kids) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Sci-Fi Kids[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Drama) + !String.Contains(ListItem.Genre,Thriller) + !String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Action-Adventure[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Adventure-Fantasy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Animated Comedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Action-Comedy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Sci-Fi Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Action Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Action-Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,History)"> • [COLOR unfocused_text]Action-History[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Horror)"> • [COLOR unfocused_text]Action-Horror[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,War)"> • [COLOR unfocused_text]War-Action[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Romance)"> • [COLOR unfocused_text]Romantic Western[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic Western[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Western-Adventure[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Romantic Comedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Dramedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Docudrama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Crime Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Crime-Fantasy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Comedic Fantasy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Dark Fantasy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) +  !String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,History)"> • [COLOR unfocused_text]Historical Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Thriller) + String.Contains(ListItem.Genre,Romance)"> • [COLOR unfocused_text]Romantic Thriller[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Psychological) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Psychological Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Romance)"> • [COLOR unfocused_text]Romantic Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Documentary)"> • [COLOR unfocused_text]Musical Documentary[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Documentary)"> • [COLOR unfocused_text]Historical Documentary[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Documentary)"> • [COLOR unfocused_text]Comedic Documentary[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Documentary)"> • [COLOR unfocused_text]Crime Documentary[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Crime Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Mystery) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Mystery Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Crime-Comedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Fantasy) + String.Contains(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Fantasy-Adventure[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Western Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Musical Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Musical Comedy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Horror-Comedy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Horror Thriller[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Mystery)"> • [COLOR unfocused_text]Horror Mystery[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Action)"> • [COLOR unfocused_text]Sci-Fi Action[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Action)"> • [COLOR unfocused_text]Sci-Fi Action[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic Sci-Fi[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic Sci-Fi[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Horror)"> • [COLOR unfocused_text]Sci-Fi Horror[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Horror)"> • [COLOR unfocused_text]Sci-Fi Horror[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Sci-Fi Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Sci-Fi Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Sci-Fi Fantasy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Sci-Fi Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Sci-Fi Adventure[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Sci-Fi Adventure[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Comedic Fantasy[/COLOR]</value>
		<!-- <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedic Animation[/COLOR]</value> -->
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Animated Fantasy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Action-Fantasy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Musical Fantasy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Family)"> • [COLOR unfocused_text]Animation-Family[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction)"> • [COLOR unfocused_text]Animated Sci-Fi[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi)"> • [COLOR unfocused_text]Animated Sci-Fi[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Thriller) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Dramatic Thriller[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Horror Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Crime)"> • [COLOR unfocused_text]Action-Crime[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Adventure Thriller[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Supernatural Comedy[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Action)"> • [COLOR unfocused_text]Supernatural Action[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Supernatural Drama[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedy-Slice of Life[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Mystery)"> • [COLOR unfocused_text]Mystery-Slice of Life[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Romance)"> • [COLOR unfocused_text]Romantic Slice of Life[/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Drama-Slice of Life[/COLOR]</value>
    <!-- Single Genres (fallback) -->
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Action)"> • [COLOR unfocused_text]Action[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Adventure)"> • [COLOR unfocused_text]Adventure[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Animation)"> • [COLOR unfocused_text]Animation[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Comedy)"> • [COLOR unfocused_text]Comedy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Crime)"> • [COLOR unfocused_text]Crime[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Documentary)"> • [COLOR unfocused_text]Documentary[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Drama)"> • [COLOR unfocused_text]Drama[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Family)"> • [COLOR unfocused_text]Family[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Fantasy)"> • [COLOR unfocused_text]Fantasy[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Kids)"> • [COLOR unfocused_text]Kids[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,History)"> • [COLOR unfocused_text]History[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Horror)"> • [COLOR unfocused_text]Horror[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Music)"> • [COLOR unfocused_text]Music[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Mystery)"> • [COLOR unfocused_text]Mystery[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,News)"> • [COLOR unfocused_text]News[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Reality)"> • [COLOR unfocused_text]Reality[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Romance)"> • [COLOR unfocused_text]Romance[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Science Fiction)"> • [COLOR unfocused_text]Sci-Fi[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Sci-Fi)"> • [COLOR unfocused_text]Sci-Fi[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Soap)"> • [COLOR unfocused_text]Soap[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Talk)"> • [COLOR unfocused_text]Talk[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,TV Movie)"> • [COLOR unfocused_text]TV Movie[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Thriller)"> • [COLOR unfocused_text]Thriller[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,War)"> • [COLOR unfocused_text]War[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Western)"> • [COLOR unfocused_text]Western[/COLOR]</value>
	</variable>

	<variable name="VI_Genre">
		<!-- Specific Genre Combinations -->
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,History)">Historical Docudrama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Historical Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Crime)">Crime Docudrama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Animated Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Crime Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Romantic Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sports) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Sports Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Animated Rom-Com[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Action Rom-Com[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Sci-Fi Rom-Com[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Drama)">Animated Sci-Fi Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Drama)">Animated Sci-Fi Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Ecchi) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Ecchi Rom-Com[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Slice of Life Rom-Com[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Sci-Fi Rom-Com[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Musical Rom-Com[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Drama)">Musical Dramedy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Comedic War Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Comedy)">Comedic War Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama)">Historical War Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Fantasy)">Fantastical War Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Thriller)">Historical War Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)">War Thriller[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)">Western Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Action) + !String.Contains(ListItem.Genre,Thriller)">Western-Action[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Politics)">Political Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + !String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,War) + !String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Drama)">War Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Politics) + !String.Contains(ListItem.Genre,Adventure) + !String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,War) + String.Contains(ListItem.Genre,Drama)">War Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Kids) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Fantasy)">Sci-Fi Fantasy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Kids) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Fantasy)">Sci-Fi Kids[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Drama) + !String.Contains(ListItem.Genre,Thriller) + !String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Adventure)">Action-Adventure[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Fantasy)">Adventure-Fantasy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Comedy)">Animated Comedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Comedy)">Action-Comedy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Thriller)">Sci-Fi Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Thriller)">Action Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Drama)">Action-Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,History)">Action-History[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Horror)">Action-Horror[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,War)">War-Action[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Romance)">Romantic Western[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Comedy)">Comedic Western[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Adventure)">Western-Adventure[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Romance) + String.Contains(ListItem.Genre,Comedy)">Romantic Comedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Drama)">Dramedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Documentary) + String.Contains(ListItem.Genre,Drama)">Docudrama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Drama)">Crime Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Fantasy)">Crime-Fantasy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Fantasy)">Comedic Fantasy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Fantasy)">Dark Fantasy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) +  !String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,History)">Historical Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Thriller) + String.Contains(ListItem.Genre,Romance)">Romantic Thriller[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Psychological) + String.Contains(ListItem.Genre,Drama)">Psychological Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Drama) + String.Contains(ListItem.Genre,Romance)">Romantic Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Documentary)">Musical Documentary[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,History) + String.Contains(ListItem.Genre,Documentary)">Historical Documentary[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Documentary)">Comedic Documentary[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Documentary)">Crime Documentary[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Thriller)">Crime Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Mystery) + String.Contains(ListItem.Genre,Thriller)">Mystery Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Comedy)">Crime-Comedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Fantasy) + String.Contains(ListItem.Genre,Adventure)">Fantasy-Adventure[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Western) + String.Contains(ListItem.Genre,Drama)">Western Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Drama)">Musical Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Comedy)">Musical Comedy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Comedy)">Horror-Comedy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Crime) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Thriller)">Horror Thriller[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Mystery)">Horror Mystery[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Action)">Sci-Fi Action[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Action)">Sci-Fi Action[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Comedy)">Comedic Sci-Fi[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Comedy)">Comedic Sci-Fi[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Horror)">Sci-Fi Horror[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Horror)">Sci-Fi Horror[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Drama)">Sci-Fi Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Drama)">Sci-Fi Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Fantasy)">Sci-Fi Fantasy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Thriller)">Sci-Fi Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Sci-Fi) + String.Contains(ListItem.Genre,Adventure)">Sci-Fi Adventure[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Science Fiction) + String.Contains(ListItem.Genre,Adventure)">Sci-Fi Adventure[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Comedy) + String.Contains(ListItem.Genre,Fantasy)">Comedic Fantasy[CR]</value>
		<!-- <value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Comedy)">Comedic Animation[CR]</value> -->
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Fantasy)">Animated Fantasy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Fantasy)">Action-Fantasy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Music) + String.Contains(ListItem.Genre,Fantasy)">Musical Fantasy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Family)">Animation-Family[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Science Fiction)">Animated Sci-Fi[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !String.Contains(ListItem.Genre,Family) + String.Contains(ListItem.Genre,Animation) + String.Contains(ListItem.Genre,Sci-Fi)">Animated Sci-Fi[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Thriller) + String.Contains(ListItem.Genre,Drama)">Dramatic Thriller[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Horror) + String.Contains(ListItem.Genre,Drama)">Horror Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Action) + String.Contains(ListItem.Genre,Crime)">Action-Crime[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Adventure) + String.Contains(ListItem.Genre,Thriller)">Adventure Thriller[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Comedy)">Supernatural Comedy[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Action)">Supernatural Action[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Supernatural) + String.Contains(ListItem.Genre,Drama)">Supernatural Drama[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Comedy)">Comedy-Slice of Life[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Mystery)">Mystery-Slice of Life[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Romance)">Romantic Slice of Life[CR]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.Contains(ListItem.Genre,Slice of Life) + String.Contains(ListItem.Genre,Drama)">Drama-Slice of Life[CR]</value>
    <!-- Single Genres (fallback) -->
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Action)">Action[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Adventure)">Adventure[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Animation)">Animation[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Comedy)">Comedy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Crime)">Crime[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Documentary)">Documentary[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Drama)">Drama[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Family)">Family[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Fantasy)">Fantasy[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Kids)">Kids[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,History)">History[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Horror)">Horror[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Music)">Music[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Mystery)">Mystery[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,News)">News[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Reality)">Reality[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Romance)">Romance[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Science Fiction)">Sci-Fi[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Sci-Fi)">Sci-Fi[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Soap)">Soap[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Talk)">Talk[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,TV Movie)">TV Movie[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Thriller)">Thriller[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,War)">War[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Western)">Western[CR]</value>
	</variable>


	<!-- Released Digital -->
	<variable name="RI_Digital">
    <!-- Already digitally released (more than 3 days) - show digital release date in teal -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),true)">[COLOR FF40E0B0]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR]</value>
    <!-- Recently released (within 3 days) - show digital release date in yellow -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),recently)">[COLOR FFFFC30B]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR]</value>
    <!-- Future digital release - show date in coral -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),false) + !String.IsEmpty(Window(home).Property(altus.digital_release_date))">[COLOR FFFF4D4D]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR]</value>
    <!-- Expired or disabled or fallback - show premiered date in unfocused color -->
    <value condition="!Skin.HasSetting(Enable.SmartStatus) | String.IsEqual(Window(home).Property(altus.digital_release_flag),expired) | !String.IsEmpty(ListItem.Premiered)">[COLOR unfocused_text]$INFO[ListItem.Premiered][/COLOR]</value>
	</variable>
	<variable name="VI_Digital">
    <!-- Already digitally released (more than 3 days) - show digital release date in teal -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),true)">[COLOR FF40E0B0]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR][CR]</value>
    <!-- Recently released (within 3 days) - show digital release date in yellow -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),recently)">[COLOR FFFFC30B]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR][CR]</value>
    <!-- Future digital release - show date in coral -->
    <value condition="Skin.HasSetting(Enable.SmartStatus) + String.IsEqual(Window(home).Property(altus.digital_release_flag),false) + !String.IsEmpty(Window(home).Property(altus.digital_release_date))">[COLOR FFFF4D4D]$INFO[Window(home).Property(altus.digital_release_date)][/COLOR][CR]</value>
    <!-- Expired or disabled or fallback - show premiered date in unfocused color -->
    <value condition="!Skin.HasSetting(Enable.SmartStatus) | String.IsEqual(Window(home).Property(altus.digital_release_flag),expired) | !String.IsEmpty(ListItem.Premiered)">[COLOR unfocused_text]$INFO[ListItem.Premiered][/COLOR][CR]</value>
	</variable>
	<!-- Aired -->
	<variable name="RI_Aired">
		<value condition="!String.IsEmpty(ListItem.Premiered)">[COLOR unfocused_text]$INFO[ListItem.Premiered][/COLOR]</value>
	</variable>
	<variable name="VI_Aired">
		<value condition="!String.IsEmpty(ListItem.Premiered)">[COLOR unfocused_text]$INFO[ListItem.Premiered][/COLOR][CR]</value>
	</variable>
	<!-- MPAA Rating -->
	<variable name="RI_Mpaa">
		<value condition="!String.IsEmpty(ListItem.Mpaa)"> • [COLOR unfocused_text]$INFO[ListItem.Mpaa][/COLOR]</value>
	</variable>
	<variable name="Rated_">
		<value condition="!String.IsEmpty(ListItem.Mpaa) + String.IsEmpty(Window(Home).Property(SpotlightWidget))">Rated </value>
	</variable>
	<variable name="Alt_Mpaa">
		<value condition="!String.IsEmpty(ListItem.Mpaa)"> • [COLOR unfocused_text]$VAR[Rated_]$INFO[ListItem.Mpaa][/COLOR]</value>
	</variable>
	<variable name="VI_Mpaa">
		<value condition="!String.IsEmpty(ListItem.Mpaa)">$VAR[Rated_]$INFO[ListItem.Mpaa][CR]</value>
	</variable>
	<!-- Rating -->
	<variable name="RI_Rating">
		<value condition="!String.IsEmpty(ListItem.Rating)"> • [COLOR unfocused_text]$INFO[ListItem.Rating][/COLOR]</value>
	</variable>
	<variable name="RI_Rating_Other">
		<value condition="!String.IsEmpty(ListItem.Rating) + String.IsEqual(Container.PluginName,plugin.video.otaku)"> • [COLOR unfocused_text]$INFO[ListItem.Rating][/COLOR]</value>
	</variable>
	<variable name="Season_Mpaa">
		<value condition="!String.IsEmpty(ListItem.Mpaa)">[COLOR unfocused_text]$INFO[ListItem.Mpaa][/COLOR]</value>
	</variable>
	<!-- Genre -->
	<variable name="RI_Genre">
		<value condition="!String.IsEmpty(ListItem.Genre)"> • [COLOR unfocused_text]$INFO[ListItem.Genre][/COLOR]</value>
	</variable>
	<!-- Director -->
	<variable name="RI_Director">
		<value condition="!String.IsEmpty(ListItem.Director)"> • [COLOR unfocused_text]$INFO[ListItem.Director][/COLOR]</value>
	</variable>
	<!-- Network -->
	<variable name="RI_Network">
		<value condition="!String.IsEmpty(ListItem.Studio) + [!Control.IsVisible(53) | [Control.IsVisible(53) + Skin.HasSetting(Disable.53StudioLogo)]]"> • [COLOR unfocused_text]$INFO[ListItem.Studio][/COLOR]</value>
	</variable>
	<!-- Movie Collection -->
	<!-- <variable name="RI_MovieCollection">
		<value condition="String.IsEqual(Window(Home).Property(altus.belongs_to_collection),true) + !String.EndsWith(Container.PluginCategory,Collection) + [Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)]"> • [COLOR unfocused_text]Collection[/COLOR]</value>
	</variable> -->
	<!-- <variable name="RI_MovieCollection">
    <value condition="[Control.IsVisible(50) | Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56)] + [!String.EndsWith(Container.PluginCategory,Collection) + !String.EndsWith(Container.PluginCategory,Saga) | String.IsEqual(Container.PluginCategory,Movies Collection)] + String.IsEqual(Window(Home).Property(altus.belongs_to_collection),true)">$VAR[CollectionLabel]</value>
	</variable> -->
	<!-- <variable name="CollectionLabel">
    <value condition="[Control.IsVisible(50) | Window.IsVisible(Home)] + String.IsEqual(Window(Home).Property(altus.first_in_collection),true)"> • [COLOR unfocused_text]1ˢᵗ|Collection[/COLOR]</value>
		<value condition="!Control.IsVisible(50) + !Window.IsVisible(Home) + String.IsEqual(Window(Home).Property(altus.first_in_collection),true)"> • [COLOR unfocused_text]1ˢᵗ in Collection[/COLOR]</value>
    <value condition="String.IsEqual(Window(Home).Property(altus.collection_follow_up),true)"> • [COLOR unfocused_text]Collection[/COLOR]</value>
    <value> • [COLOR unfocused_text]Collection[/COLOR]</value>
	</variable> -->
	<!-- <variable name="CollectionLabel">
    <value condition="[Control.IsVisible(50) | Window.IsVisible(Home)] + String.IsEqual(Window(Home).Property(altus.first_in_collection),true)"> • [COLOR unfocused_text]1ˢᵗ|Collection[/COLOR]</value>
    <value condition="!Control.IsVisible(50) + !Window.IsVisible(Home) + String.IsEqual(Window(Home).Property(altus.first_in_collection),true)"> • [COLOR unfocused_text]1ˢᵗ in Collection[/COLOR]</value>
    <value condition="String.IsEqual(Window(Home).Property(altus.collection_follow_up),true)"> • [COLOR unfocused_text]Collection[/COLOR]</value>
    <value> • [COLOR unfocused_text]Collection[/COLOR]</value>
	</variable> -->
	<variable name="CollectionStatus">
    <value condition="String.IsEqual(Window(Home).Property(altus.first_in_collection),true)">icons/collection_first.png</value>
    <value condition="String.IsEqual(Window(Home).Property(altus.collection_follow_up),true)">icons/collection.png</value>
    <value>icons/collection.png</value>
	</variable>
	<!-- Watched Progress -->
	<variable name="RI_WatchedProgress">
		<value condition="!Integer.IsEqual(ListItem.Property(WatchedProgress),0) + Integer.IsGreater(ListItem.Playcount,0)"> • [COLOR unfocused_text]$INFO[ListItem.Property(WatchedProgress)]% rewatched[/COLOR]</value>
		<value condition="!Integer.IsEqual(ListItem.Property(WatchedProgress),0) + Integer.IsEqual(ListItem.Playcount,0)"> • [COLOR unfocused_text]$INFO[ListItem.Property(WatchedProgress)]% watched[/COLOR]</value>
	</variable>
	<variable name="Item_WatchedProgress">
		<value condition="!Integer.IsEqual(ListItem.Property(WatchedProgress),0) + Integer.IsGreater(ListItem.Playcount,0)">$INFO[ListItem.Property(WatchedProgress)]% rewatched</value>
		<value condition="!Integer.IsEqual(ListItem.Property(WatchedProgress),0) + Integer.IsEqual(ListItem.Playcount,0)">$INFO[ListItem.Property(WatchedProgress)]% watched</value>
	</variable>
	<!-- Total Seasons -->
	<variable name="RI_TotalSeasons">
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsEqual(Container.ListItem.Property(TotalSeasons),1)"> • [COLOR unfocused_text]$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36904]][/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsGreater(Container.ListItem.Property(TotalSeasons),1)"> • [COLOR unfocused_text]$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36905]][/COLOR]</value>
	</variable>
	<variable name="VI_TotalSeasons">
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsEqual(Container.ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36904]][CR]</value>
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsGreater(Container.ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36905]][CR]</value>
	</variable>
	<!-- Total Seasons -->
	<variable name="I_Available">
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsEqual(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36904]]$INFO[ListItem.Property(TotalEpisodes), (, $LOCALIZE[20453])]</value>
		<value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36905]]$INFO[ListItem.Property(TotalEpisodes), (, $LOCALIZE[20453])]</value>
	</variable>
	<!-- Status -->
	<variable name="TVShowStatusIcon">
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Returning)">icons/returning.png</value>
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Ended)">icons/ended.png</value>
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Canceled)">icons/canceled.png</value>
		<!-- <value> • [COLOR unfocused_text]$INFO[Container.ListItem.Status][/COLOR]</value> -->
	</variable>
	<variable name="RI_Status">
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Returning) + Container.Content(tvshows) + [!Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) | String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) | String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)]"> • [COLOR unfocused_text]Returning[/COLOR]</value>
		<value condition="[Container.Content(tvshows) + [!Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) | String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) | String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)]]"> • [COLOR unfocused_text]$INFO[Container.ListItem.Status][/COLOR]</value>
	</variable>
	<variable name="RI_Widget_Status">
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Returning)"> • [COLOR unfocused_text]Returning[/COLOR]</value>
		<value> • [COLOR unfocused_text]$INFO[Container.ListItem.Status][/COLOR]</value>
	</variable>
	<variable name="Alt_Status">
		<value condition="!String.IsEmpty(ListItem.Status)"> • [COLOR unfocused_text]$INFO[Container.ListItem.Status][/COLOR]</value>
	</variable>
	<variable name="VI_Status">
		<value condition="!String.IsEmpty(ListItem.Status)">$INFO[Container.ListItem.Status][CR]</value>
	</variable>
	<!-- Runtime -->
	<variable name="RI_Runtime">
    <!-- MOVIES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(h),, hrs] $INFO[ListItem.Duration(m),, mins][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(h),, hrs] 1 min[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(h),, hrs][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)"> • [COLOR unfocused_text]1 hr $INFO[ListItem.Duration(m),, mins][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)"> • [COLOR unfocused_text]1 hr 1 min[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)"> • [COLOR unfocused_text]1 hr[/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsGreater(ListItem.Duration(m),1)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(m),, mins][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsEqual(ListItem.Duration(m),1)"> • [COLOR unfocused_text]1 min[/COLOR]</value>
    <!-- TVSHOWS, SEASONS, EPISODES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + !$EXP[isMovie]"> • [COLOR unfocused_text]$INFO[ListItem.Duration(mins),, mins][/COLOR]</value>
	</variable>
	<variable name="VI_Runtime">
    <!-- MOVIES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hrs] $INFO[ListItem.Duration(m),, mins][CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hrs] 1 min[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)">$INFO[ListItem.Duration(h),, hrs][CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)">1 hr $INFO[ListItem.Duration(m),, mins][CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)">1 hr 1 min[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)">1 hr[CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsGreater(ListItem.Duration(m),1)">$INFO[ListItem.Duration(m),, mins][CR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsEqual(ListItem.Duration(m),1)">1 min[CR]</value>
    <!-- TVSHOWS, SEASONS, EPISODES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + !$EXP[isMovie]">$INFO[ListItem.Duration(mins),, mins][CR]</value>
	</variable>

	<!-- Runtime -->
	<variable name="oldRI_Runtime">
    <!-- MOVIES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsGreaterOrEqual(ListItem.Duration(m),1)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(h),,h] $INFO[ListItem.Duration(m),,m][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(m),0)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(h),,h][/COLOR]</value>
    <value condition="!String.IsEmpty(ListItem.Duration) + $EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsGreaterOrEqual(ListItem.Duration(m),1)"> • [COLOR unfocused_text]$INFO[ListItem.Duration(m),,m][/COLOR]</value>
    <!-- TVSHOWS, SEASONS, EPISODES -->
    <value condition="!String.IsEmpty(ListItem.Duration) + !$EXP[isMovie]"> • [COLOR unfocused_text]$INFO[ListItem.Duration(mins),,m][/COLOR]</value>
	</variable>



	<variable name="RI_EpisodeType">
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_premiere)"> • [COLOR ff8fc5d9][UPPERCASE]Series Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_premiere)"> • [COLOR ff8fd9c5][UPPERCASE]Season Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)"> • [COLOR ffc5d98f][UPPERCASE]Mid-Season Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_finale)"> • [COLOR ffc58fd9][UPPERCASE]Series Finale[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_finale)"> • [COLOR ffd98fc5][UPPERCASE]Season Finale[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_finale)"> • [COLOR ffd9c58f][UPPERCASE]Mid-Season Finale[/UPPERCASE][/COLOR]</value>
		<!-- <value condition="String.IsEqual(ListItem.Property(episode_type), series_premiere)"> • [COLOR unfocused_text]Series Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_premiere)"> • [COLOR unfocused_text]Season Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)"> • [COLOR unfocused_text]Mid-Season Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_finale)"> • [COLOR unfocused_text]Series Finale[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_finale)"> • [COLOR unfocused_text]Season Finale[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_finale)"> • [COLOR unfocused_text]Mid-Season Finale[/COLOR]</value> -->
	</variable>

	<!-- <variable name="RI_EpisodeType_Season">
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_premiere)"> • [COLOR ff8fc5d9]Series Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_premiere)"> • [COLOR ff8fd9c5]Season Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)"> • [COLOR ffc5d98f]Mid-Season Premiere[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_finale)"> • [COLOR ffc58fd9]Series Finale[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_finale)"> • [COLOR ffd98fc5]Season Finale[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_finale)"> • [COLOR ffd9c58f]Mid-Season Finale[/COLOR]</value>
	</variable> -->

	<variable name="VI_EpisodeType">
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_premiere)">[COLOR ff8fc5d9][UPPERCASE]Series Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_premiere)">[COLOR ff8fd9c5][UPPERCASE]Season Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)">[COLOR ffc5d98f][UPPERCASE]Mid-Season Premiere[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_finale)">[COLOR ffc58fd9][UPPERCASE]Series Finale[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_finale)">[COLOR ffd98fc5][UPPERCASE]Season Finale[/UPPERCASE][/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_finale)">[COLOR ffd9c58f][UPPERCASE]Mid-Season Finale[/UPPERCASE][/COLOR]</value>
	</variable>
	
	<variable name="RI_EpisodesRemaining">
		<value condition="Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)"> • [COLOR unfocused_text]$INFO[ListItem.Property(UnwatchedEpisodes),, remaining][/COLOR]</value>
		<!-- <value condition="!String.IsEmpty(ListItem.Duration) + [$EXP[isTVShow] |  $EXP[isSeason] |  $EXP[isEpisode]]">$INFO[ListItem.Duration(mins), • ,m]</value> -->
	</variable>
	<variable name="RI_SeasonEpisode">
		<value condition="!String.StartsWith(Container.PluginCategory,Season)"> • [COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Season,,]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,][/COLOR]</value>
		<!-- <value condition="!String.IsEmpty(ListItem.Duration) + [$EXP[isTVShow] |  $EXP[isSeason] |  $EXP[isEpisode]]">$INFO[ListItem.Duration(mins), • ,m]</value> -->
	</variable>

	<!-- Ends at: -->
	<variable name="RI_Endsat">
		<value condition="!String.IsEmpty(ListItem.EndTime) + !String.IsEmpty(ListItem.Duration) + String.IsEmpty(Window(Home).Property(SpotlightWidget))"> • [COLOR unfocused_text]$INFO[ListItem.EndTime,$LOCALIZE[31080]: ][/COLOR]</value>
		<value condition="!String.IsEmpty(ListItem.EndTime) + !String.IsEmpty(ListItem.Duration) + !String.IsEmpty(Window(Home).Property(SpotlightWidget))"> » [COLOR unfocused_text]$INFO[ListItem.EndTime][/COLOR]</value>
	</variable>

	<variable name="RI_AltEndsat">
		<value condition="!String.IsEmpty(ListItem.EndTime) + !String.IsEmpty(ListItem.Duration)"> » [COLOR unfocused_text]$INFO[ListItem.EndTime][/COLOR]</value>
	</variable>

	<variable name="RI_StartsEnds">
		<value condition="!String.IsEmpty(ListItem.EndTime) + !String.IsEmpty(ListItem.Duration)">[COLOR unfocused_text]$INFO[System.Time] - $INFO[ListItem.EndTime][/COLOR][CR]</value>
	</variable>
	
	<!-- Tagline -->
	<variable name="RI_Tagline">
		<value condition="!String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
		<value></value>
	</variable>

	<!-- Plot -->
	<variable name="RI_Plot">
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value></value>
	</variable>

	<variable name="SeasonInfoPanelTop">
		<!-- EPISODES -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode]">$VAR[RI_Aired]$VAR[RI_Rating]$VAR[RI_Runtime]$VAR[RI_EpisodeType]</value>
	</variable>

	<variable name="VideoInfoPanelTop">
		<!-- MOVIES -->
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + !Control.IsVisible(53)">$VAR[RI_Digital]$VAR[RI_Mpaa]$VAR[RI_Genre]$VAR[RI_MovieCollection]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_Endsat]</value>
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + Control.IsVisible(53)">$VAR[RI_Digital]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_MovieCollection]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_Endsat]</value>
		<!-- SHOWS -->
		<value condition="!ListItem.IsCollection + $EXP[isTVShow] + !Control.IsVisible(53)">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[RI_Genre]$VAR[RI_TotalSeasons]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_Network]$VAR[Alt_Status]</value>
		<value condition="!ListItem.IsCollection + $EXP[isTVShow] + Control.IsVisible(53)">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_TotalSeasons]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_Network]$VAR[Alt_Status]</value>
		<!-- SEASONS -->
		<value condition="!ListItem.IsCollection + $EXP[isSeason] + !Control.IsVisible(53)">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[RI_Genre]$VAR[RI_Runtime]$VAR[RI_Rating_Other]$VAR[RI_Network]$VAR[RI_Endsat]</value>
		<value condition="!ListItem.IsCollection + $EXP[isSeason] + Control.IsVisible(53)">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Runtime]$VAR[RI_Rating_Other]$VAR[RI_Network]$VAR[RI_Endsat]</value>
		<!-- EPISODES -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[RI_Rating]$VAR[RI_Runtime]$VAR[RI_Network]$VAR[RI_Endsat]$VAR[RI_EpisodeType]</value>
	</variable>

	<variable name="InfoPanelTop">
		<!-- MOVIES -->
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + Integer.IsEqual(ListItem.Property(WatchedProgress),0)">$VAR[RI_Digital]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_AltEndsat]</value>
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + !Integer.IsEqual(ListItem.Property(WatchedProgress),0)">$VAR[RI_Digital]$VAR[RI_WatchedProgress]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Rating_Other]$VAR[RI_Runtime]</value>
		<!-- SHOWS -->
		<value condition="!ListItem.IsCollection + $EXP[isTVShow]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_TotalSeasons]$VAR[RI_EpisodesRemaining]$VAR[RI_Rating_Other]$VAR[RI_Status]</value>
		<!-- SEASONS -->
		<value condition="!ListItem.IsCollection + $EXP[isSeason]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Runtime]$VAR[RI_EpisodesRemaining]$VAR[RI_Rating_Other]</value>
		<!-- EPISODES -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + Integer.IsEqual(ListItem.Property(WatchedProgress),0) + String.IsEmpty(ListItem.Property(episode_type))">$VAR[RI_Aired]$VAR[RI_SeasonEpisode]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Rating]$VAR[RI_Runtime]</value>
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + Integer.IsEqual(ListItem.Property(WatchedProgress),0) + !String.IsEmpty(ListItem.Property(episode_type))">$VAR[RI_Aired]$VAR[RI_SeasonEpisode]$VAR[RI_Mpaa]$VAR[RI_Rating]$VAR[RI_Runtime]$VAR[RI_EpisodeType]</value>

		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !Integer.IsEqual(ListItem.Property(WatchedProgress),0) + String.IsEmpty(ListItem.Property(episode_type))">$VAR[RI_Aired]$VAR[RI_WatchedProgress]$VAR[RI_SeasonEpisode]$VAR[RI_Mpaa]$VAR[RI_Rating]$VAR[RI_Runtime]</value>
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !Integer.IsEqual(ListItem.Property(WatchedProgress),0) + !String.IsEmpty(ListItem.Property(episode_type))">$VAR[RI_Aired]$VAR[RI_WatchedProgress]$VAR[RI_SeasonEpisode]$VAR[RI_Runtime]$VAR[RI_EpisodeType]</value>
	</variable>

	

	<variable name="VI_WidgetInfoPanelTop">
		<!-- MOVIES -->
		<value condition="!ListItem.IsCollection + $EXP[isMovie]">$VAR[VI_Digital]$VAR[VI_Mpaa]$VAR[VI_Genre]$VAR[VI_Runtime]$VAR[RI_StartsEnds]</value>
		<!-- SHOWS -->
		<value condition="!ListItem.IsCollection + $EXP[isTVShow]">$VAR[VI_Aired]$VAR[VI_Mpaa]$VAR[VI_Genre]$VAR[VI_TotalSeasons]$VAR[VI_Status]</value>
		<!-- SEASONS -->
		<value condition="!ListItem.IsCollection + $EXP[isSeason]">$VAR[VI_Aired]$VAR[VI_Mpaa]$VAR[VI_Genre]$VAR[VI_Runtime]$VAR[RI_StartsEnds]</value>
		<!-- EPISODES -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + String.IsEmpty(ListItem.Property(episode_type))">$VAR[VI_Aired]$VAR[VI_Runtime]$VAR[RI_StartsEnds]</value>
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !String.IsEmpty(ListItem.Property(episode_type))">$VAR[VI_Aired]$VAR[VI_Runtime]$VAR[RI_StartsEnds]$VAR[VI_EpisodeType]</value>
	</variable>

	<variable name="Spotlight_WidgetInfoPanelTop">
		<!-- MOVIES -->
		<value condition="!ListItem.IsCollection + $EXP[isMovie]">$VAR[RI_Digital]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_MovieCollection]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_AltEndsat]</value>
		<!-- SHOWS -->
		<value condition="!ListItem.IsCollection + $EXP[isTVShow]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_TotalSeasons]$VAR[RI_Rating_Other]$VAR[RI_Widget_Status]</value>
		<!-- SEASONS -->
		<value condition="!ListItem.IsCollection + $EXP[isSeason]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[_Genre]$VAR[RI_Rating_Other]$VAR[RI_Runtime]$VAR[RI_AltEndsat]</value>
		<!-- EPISODES -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode]">$VAR[RI_Aired]$VAR[RI_Mpaa]$VAR[RI_Rating]$VAR[RI_Runtime]$VAR[RI_AltEndsat]$VAR[RI_EpisodeType]</value>
	</variable>

	<variable name="SpotlightWidgetStatus">
		<!-- MOVIES -->
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + Integer.IsGreater(ListItem.Playcount,0) + !Integer.IsEqual(ListItem.Property(WatchedProgress),0)">[COLOR unfocused_text]Rewatching[/COLOR] | [COLOR unfocused_text]$INFO[ListItem.Property(WatchedProgress)]% watched[/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + Integer.IsGreater(ListItem.Playcount,0)">[COLOR unfocused_text]You've previously watched this movie[/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isMovie] + !Integer.IsEqual(ListItem.Property(WatchedProgress),0)">[COLOR unfocused_text]In progress[/COLOR] | [COLOR unfocused_text]$INFO[ListItem.Property(WatchedProgress)]% watched[/COLOR]</value>
		<!-- SHOWS -->
		<value condition="!ListItem.IsCollection + $EXP[isTVShow] + String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + String.StartsWith(ListItem.Status,Returning)">[COLOR unfocused_text]All caught up[/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isTVShow] + String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + !String.StartsWith(ListItem.Status,Returning)">[COLOR unfocused_text]Show completed[/COLOR]</value>
		<value condition="!ListItem.IsCollection + [$EXP[isTVShow] | $EXP[isSeason]] + [Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),1) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)]">[COLOR unfocused_text]$INFO[ListItem.Property(UnwatchedEpisodes)] episodes remaining[/COLOR]</value>
		<value condition="!ListItem.IsCollection + [$EXP[isTVShow] | $EXP[isSeason]] + [Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + String.IsEqual(ListItem.Property(UnWatchedEpisodes),1) + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)]">[COLOR unfocused_text]$INFO[ListItem.Property(UnwatchedEpisodes)] episode remaining[/COLOR]</value>
		<!-- SEASONS -->
		<value condition="!ListItem.IsCollection + $EXP[isSeason] + String.IsEqual(ListItem.Property(WatchedEpisodes),0)">[COLOR unfocused_text]$INFO[ListItem.Property(TotalEpisodes)] episodes[/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isSeason] + String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes))">[COLOR unfocused_text]Season completed[/COLOR] | [COLOR unfocused_text]$INFO[ListItem.Property(TotalEpisodes)] episodes[/COLOR]</value>
		<!-- <value condition="!ListItem.IsCollection + $EXP[isSeason] + String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes))">$INF0[ListItem.Label] | Completed</value> -->
		<!-- EPISODES -->
		<!-- TODO FIX not showing on 53 slide -->
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !Control.IsVisible(53) + !Integer.IsGreater(ListItem.Playcount,0) + String.IsEmpty(ListItem.Property(WatchedProgress))">[COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Season]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,][/COLOR] | [COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Title][/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !Control.IsVisible(53) + Integer.IsGreater(ListItem.Playcount,0)">[COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Season]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,][/COLOR] | [COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Title][/COLOR] | [COLOR unfocused_text]Watched[/COLOR]</value>
		<value condition="!ListItem.IsCollection + $EXP[isEpisode] + !Control.IsVisible(53) + !Integer.IsEqual(ListItem.Property(WatchedProgress),0)">[COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Season]$INFO[Container($PARAM[list_id]).ListItem.Episode,x,][/COLOR] | [COLOR unfocused_text]$INFO[Container($PARAM[list_id]).ListItem.Title][/COLOR] | [COLOR unfocused_text]$INFO[ListItem.Property(WatchedProgress)]% watched[/COLOR]</value>
	</variable>
	
	<variable name="InfoPanelBottom">
		<!-- MOVIES, TVSHOWS, SEASONS, EPISODES, COLLECTIONS -->
		<value condition="!ListItem.IsCollection + [$EXP[isMovie] | $EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode]]">$VAR[RI_Plot]</value>
	</variable>

	<variable name="FlixPanelRuntime">
    <!-- MOVIES -->
    <value condition="$EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hrs] $INFO[ListItem.Duration(m),, mins]</value>
    <value condition="$EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hrs] 1 min</value>
    <value condition="$EXP[isMovie] + Integer.IsGreater(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)">$INFO[ListItem.Duration(h),, hrs]</value>
    <value condition="$EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsGreater(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hr] $INFO[ListItem.Duration(m),, mins]</value>
    <value condition="$EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),1)">$INFO[ListItem.Duration(h),, hr] 1 min</value>
    <value condition="$EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),1) + Integer.IsEqual(ListItem.Duration(m),0)">$INFO[ListItem.Duration(h),, hr]</value>
    <value condition="$EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsGreater(ListItem.Duration(m),1)">$INFO[ListItem.Duration(m),, mins]</value>
    <!-- <value condition="$EXP[isMovie] + Integer.IsEqual(ListItem.Duration(h),0) + Integer.IsEqual(ListItem.Duration(m),1)">1 min</value> -->
    <!-- TVSHOWS, SEASONS, EPISODES -->
    <value condition="$EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode]">$INFO[ListItem.Duration(mins),, mins]</value>
	</variable>

	<variable name="EpisodeType">
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_premiere)">Series Premiere</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_premiere)">Season Premiere</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)">Mid-Season Premiere</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), series_finale)">Series Finale</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), season_finale)">Season Finale</value>
		<value condition="String.IsEqual(ListItem.Property(episode_type), mid_season_finale)">Mid-Season Finale</value>
	</variable>

	<variable name="EpisodeTypeTextColor">
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + [String.IsEqual(ListItem.Property(episode_type), series_premiere) | String.IsEqual(ListItem.Property(episode_type), season_premiere) | String.IsEqual(ListItem.Property(episode_type), mid_season_finale) | String.IsEqual(ListItem.Property(episode_type), mid_season_premiere) | String.IsEqual(ListItem.Property(episode_type), season_finale) | String.IsEqual(ListItem.Property(episode_type), series_finale)]">ffffffff</value>

		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), series_premiere)">ff8fc5d9</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), season_premiere)">ff8fd9c5</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)">ffc5d98f</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), series_finale)">ffc58fd9</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), season_finale)">ffd98fc5</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), mid_season_finale)">ffd9c58f</value>
	</variable>

	<variable name="EpisodeTypeColor">
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), series_premiere)">ff116483</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), season_premiere)">ff118364</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)">ff4c6017</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), series_finale)">ff641183</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), season_finale)">ff831164</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + String.IsEqual(ListItem.Property(episode_type), mid_season_finale)">ff836411</value>

		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), series_premiere)">338fc5d9</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), season_premiere)">338fd9c5</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), mid_season_premiere)">33c5d98f</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), series_finale)">33c58fd9</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), season_finale)">33d98fc5</value>
		<value condition="String.IsEqual(Skin.String(BackgroundSetting),1) + String.IsEqual(ListItem.Property(episode_type), mid_season_finale)">33d9c58f</value>
	</variable>

	<!-- <variable name="FlixIconColor">
    <value condition="String.IsEqual(Skin.String(BackgroundSetting),0) + !Control.IsVisible(51)">FF2E2E2E</value>
    <value condition="String.IsEqual(Skin.String(BackgroundSetting),1) | [String.IsEqual(Skin.String(BackgroundSetting),0) | Control.IsVisible(51)]">26CCCCCC</value>
	</variable> -->

</includes>