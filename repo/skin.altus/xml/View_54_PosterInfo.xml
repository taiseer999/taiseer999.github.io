<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="PosterInfoPictureLayout">
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<top>-10</top>
				<width>376</width>
				<height>380</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image">
				<top>-14</top>
				<left>-4</left>
				<width>384</width>
				<height>388</height>
				<texture colordiffuse="button_focus">colors/grey.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
			</control>
			<control type="image">
				<left>20</left>
				<top>10</top>
				<width>336</width>
				<height>300</height>
				<texture border="2" background="true">$VAR[FlixThumbVar]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="label">
				<left>20</left>
				<top>318</top>
				<width>338</width>
				<textoffsetx>20</textoffsetx>
				<height>20</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</definition>
	</include>

	<include name="SquareLayout">
		<param name="fallback_icon">DefaultAddon.png</param>
		<param name="main_label">$INFO[ListItem.Artist]</param>
		<param name="sub_label">$INFO[ListItem.Title]</param>
		<param name="single_label">$INFO[ListItem.Label]</param>
		<param name="focused">false</param>
		<definition>
			<control type="group">
				<width>279</width>
				<height>279</height>
				<left>5</left>
				<control type="group">
					<control type="image">
						<!-- <left>2</left> -->
						<texture colordiffuse="$VAR[FocusColorTheme]">colors/white.png</texture>
						<bordersize>-5</bordersize>
						<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + ControlGroup(400).HasFocus]</visible>
						<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
					</control>
				</control>
				<control type="image">
					<texture colordiffuse="66000000">colors/white.png</texture>
					<bordersize>1</bordersize>
					<bordertexture colordiffuse="$VAR[FocusColorTheme]" border="10" infill="false">masks/bordertexture.png</bordertexture>
				</control>
				<control type="image">
					<centertop>50%</centertop>
					<centerleft>50%</centerleft>
					<texture fallback="$PARAM[fallback_icon]" background="true">$VAR[FlixThumbVar]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!$EXP[isContent]</visible>
				</control>
				<control type="image">
					<centertop>50%</centertop>
					<centerleft>50%</centerleft>
					<texture fallback="$PARAM[fallback_icon]" background="true">$VAR[FlixThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<visible>$EXP[isContent]</visible>
				</control>
				<control type="label">
					<centerleft>50%</centerleft>
					<top>275</top>
					<width>240</width>
					<height>75</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$PARAM[single_label]</label>
					<scroll>$PARAM[focused] + Control.HasFocus($PARAM[list_id])</scroll>
					<font>font25</font>
					<textcolor>unfocused_text</textcolor>
					<visible>!String.IsEqual(ListItem.DBType,album)</visible>
				</control>
				<control type="group">
					<visible>String.IsEqual(ListItem.DBType,album)</visible>
					<control type="label">
						<left>29</left>
						<top>256</top>
						<width>224</width>
						<label>$PARAM[sub_label]</label>
						<font>font10</font>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>$PARAM[focused]</scroll>
						<align>center</align>
					</control>
					<control type="label">
						<left>29</left>
						<top>284</top>
						<width>224</width>
						<label>$PARAM[main_label]</label>
						<font>font12</font>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>$PARAM[focused]</scroll>
						<align>center</align>
					</control>
				</control>
				<control type="group">
					<left>133</left>
					<top>2</top>
					<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating)">RatingCircle</include>
				</control>
			</control>
		</definition>
	</include>

	<include name="PosterLayout">
		<param name="focused">false</param>
		<definition>
			<control type="group">
			<visible>String.IsEmpty(ListItem.Art(fanart)) + String.IsEmpty(ListItem.Art(poster))</visible>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<width>236</width>
					<height>354</height>
					<texture colordiffuse="$VAR[FocusColorTheme]">masks/poster.png</texture>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))] | [[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))]</visible>
					<visible>!Container($PARAM[list_id]).IsUpdating</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[FocusedTextColorVar]</textcolor>
					<autoscroll time="2000" delay="1000" repeat="2000">$PARAM[focused] + Control.HasFocus($PARAM[list_id])</autoscroll>
					<visible>!ListItem.IsParentFolder + [$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>unfocused_text</textcolor>
					<visible>!ListItem.IsParentFolder + [!$PARAM[focused] | [!Control.HasFocus($PARAM[list_id]) + ![Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
				</control>
				<control type="image">
					<left>1</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + $PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<left>2.5</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture colordiffuse="unfocused_text" fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + ![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
				</control>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(ListItem.Art(poster))</visible>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<!-- 242 -->
					<width>249</width>
					<!-- 364 -->
					<height>375</height>
					<texture colordiffuse="artwork_dim" background="true">$VAR[FlixPosterVar]</texture>
				</control>
				<control type="image">
					<left>20</left>
					<top>280</top>
					<width>106</width>
					<height>106</height>
					<texture colordiffuse="overlay_fade_color">overlays/overlay_bg.png</texture>
					<visible>Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0) + [[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
					<animation condition="
						[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[
								[$EXP[isMovie] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] | 
								[[$EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode]] + !Integer.IsGreater(ListItem.Playcount,0) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] |
								[!$EXP[isMovie] + !$EXP[isTVShow] + !$EXP[isSeason] + !$EXP[isEpisode] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]
						]
						" effect="fade" time="0" start="100" end="0">Conditional</animation>
					</control>
				<control type="image">
					<left>20</left>
					<top>317</top>
					<width>250</width>
					<height>69</height>
					<texture colordiffuse="overlay_fade_color">overlays/overlay_bg_long.png</texture>
					<visible>
						[[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
						$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[[[$EXP[isTVShow] | $EXP[isSeason]] +
						Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
						!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
						[[$EXP[isMovie] | $EXP[isEpisode]] + 
						!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]]]
					</visible>
					<!-- <visible>
						[Control.IsVisible(53) + [
								[[$EXP[isTVShow] | $EXP[isSeason]] + 
								Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
								!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
								!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
								[[$EXP[isMovie] | $EXP[isEpisode]] + 
								!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]
						]] | 
						[[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
						$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[[[$EXP[isTVShow] | $EXP[isSeason]] +
						Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
						!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
						[[$EXP[isMovie] | $EXP[isEpisode]] + 
						!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]]]
					</visible> -->
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="label">
					<left>-26</left>
					<top>345</top>
					<width>280</width>
					<label>$VAR[Item_WatchedProgress]</label>
					<textcolor>FFFFFFFF</textcolor>
					<font>font18_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + [$EXP[isMovie] | $EXP[isEpisode]]</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
			</control>
			<control type="group">
				<visible>$EXP[isTVShow] | $EXP[isSeason]</visible>
				<top>325</top>
				<control type="label">
					<left>85</left>
					<top>20</top>
					<width>169</width>
					<label>$INFO[ListItem.Property(UnwatchedEpisodes),, remaining]</label>
					<font>font18_title</font>
					<textcolor>FFFFFFFF</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
					<visible>
						Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + 
						!String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)
					</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<!-- <control type="image">
					<left>218</left>
					<top>11.2</top>
					<width>24</width>
					<height>24</height>
					<texture>lists/played-total.png</texture>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Integer.IsEqual(ListItem.Property(UnwatchedEpisodes),0)</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control> -->
			</control>
			<control type="image">
				<left>37</left>
				<top>347</top>
				<width>23</width>
				<height>23</height>
				<texture colordiffuse="FFFFFFFF">$VAR[WallWatchedIconVar]</texture>
				<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
				[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
			</control>
			<control type="label">
				<left>25</left>
				<top>394</top>
				<right>15</right>
				<!-- <width>390</width> -->
				<label>$INFO[Container($PARAM[list_id]).ListItem.Title]</label>
				<font>font10</font>
				<shadowcolor>text_shadow</shadowcolor>
				<textcolor>unfocused_text</textcolor>
				<align>center</align>
				<scroll>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</scroll>
				<scrollspeed>100</scrollspeed>
				<visible>[Control.IsVisible(54) + Skin.HasSetting(Enable.54Titles)] | [Control.IsVisible(500) + Skin.HasSetting(Enable.500Titles)]</visible>
			</control>
			<control type="group">
				<visible>![[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
				[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
				<include content="ProgressBar">
					<param name="left" value="20"/>
					<param name="top" value="382"/>
					<param name="width" value="249"/>
					<param name="height" value="4"/>
				</include>
			</control>
			<control type="image">
				<left>20</left>
				<top>11</top>
				<width>249</width>
				<height>375</height>
				<texture border="6" colordiffuse="$VAR[FocusColorTheme]" infill="false">colors/white.png</texture>
				<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
			</control>
		</definition>
	</include>

	<include name="PosterLayout_Video">
		<param name="focused">false</param>
		<definition>
			<control type="group">
			<visible>String.IsEmpty(ListItem.Art(fanart)) + String.IsEmpty(ListItem.Art(poster))</visible>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<width>236</width>
					<height>354</height>
					<texture colordiffuse="$VAR[FocusColorTheme]">masks/poster.png</texture>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))] | [[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))]</visible>
					<visible>!Container($PARAM[list_id]).IsUpdating</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[FocusedTextColorVar]</textcolor>
					<autoscroll time="2000" delay="1000" repeat="2000">$PARAM[focused] + Control.HasFocus($PARAM[list_id])</autoscroll>
					<visible>!ListItem.IsParentFolder + [$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>unfocused_text</textcolor>
					<visible>!ListItem.IsParentFolder + [!$PARAM[focused] | [!Control.HasFocus($PARAM[list_id]) + ![Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
				</control>
				<control type="image">
					<left>1</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + $PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<left>2.5</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture colordiffuse="unfocused_text" fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + ![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
				</control>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Art(fanart)) | !String.IsEmpty(ListItem.Art(poster))</visible>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<width>236</width>
					<height>354</height>
					<texture background="true">$VAR[FlixPosterVar]</texture>
				</control>
				<control type="image">
					<left>20</left>
					<top>259</top>
					<width>106</width>
					<height>106</height>
					<texture colordiffuse="overlay_fade_color">overlays/overlay_bg.png</texture>
					<visible>Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0) + [[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
					[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
					<animation condition="
						[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[
								[$EXP[isMovie] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] | 
								[[$EXP[isTVShow] | $EXP[isSeason] | $EXP[isEpisode]] + !Integer.IsGreater(ListItem.Playcount,0) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] |
								[!$EXP[isMovie] + !$EXP[isTVShow] + !$EXP[isSeason] + !$EXP[isEpisode] + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]
						]
						" effect="fade" time="0" start="100" end="0">Conditional</animation>
					</control>
				<control type="image">
					<left>20</left>
					<top>312</top>
					<width>234</width>
					<height>53</height>
					<texture colordiffuse="overlay_fade_color">overlays/overlay_bg_long.png</texture>
					<visible>
						[[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
						$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[[[$EXP[isTVShow] | $EXP[isSeason]] +
						Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
						!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
						[[$EXP[isMovie] | $EXP[isEpisode]] + 
						!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]]]
					</visible>
					<!-- <visible>
						[Control.IsVisible(53) + [
								[[$EXP[isTVShow] | $EXP[isSeason]] + 
								Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
								!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
								!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
								[[$EXP[isMovie] | $EXP[isEpisode]] + 
								!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]
						]] | 
						[[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
						$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[[[$EXP[isTVShow] | $EXP[isSeason]] +
						Integer.IsGreater(ListItem.Property(WatchedEpisodes), 0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes), ListItem.Property(TotalEpisodes)) + 
						!Integer.IsLess(ListItem.Property(UnWatchedEpisodes),0)] | 
						[[$EXP[isMovie] | $EXP[isEpisode]] + 
						!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress), 0)]]]
					</visible> -->
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="label">
					<left>-40</left>
					<top>324</top>
					<width>280</width>
					<label>$VAR[Item_WatchedProgress]</label>
					<textcolor>FFFFFFFF</textcolor>
					<font>font18_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + [$EXP[isMovie] | $EXP[isEpisode]]</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
			</control>
			<control type="group">
				<visible>$EXP[isTVShow] | $EXP[isSeason]</visible>
				<top>315</top>
				<control type="label">
					<left>71</left>
					<top>9</top>
					<width>169</width>
					<label>$INFO[ListItem.Property(UnwatchedEpisodes),, remaining]</label>
					<font>font18_title</font>
					<textcolor>FFFFFFFF</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
					<visible>
						Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + 
						!String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)
					</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<!-- <control type="image">
					<left>218</left>
					<top>11.2</top>
					<width>24</width>
					<height>24</height>
					<texture>lists/played-total.png</texture>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Integer.IsEqual(ListItem.Property(UnwatchedEpisodes),0)</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control> -->
			</control>
			<control type="image">
				<left>36</left>
				<top>326</top>
				<width>23</width>
				<height>23</height>
				<texture colordiffuse="FFFFFFFF">$VAR[WallWatchedIconVar]</texture>
				<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
			</control>
			<control type="label">
				<left>25</left>
				<top>374</top>
				<right>15</right>
				<!-- <width>390</width> -->
				<label>[LIGHT]$INFO[Container($PARAM[list_id]).ListItem.Title][/LIGHT]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<textcolor>unfocused_text</textcolor>
				<align>center</align>
				<scroll>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</scroll>
				<scrollspeed>100</scrollspeed>
				<visible>[Control.IsVisible(54) + Skin.HasSetting(Enable.54Titles)] | [Control.IsVisible(500) + Skin.HasSetting(Enable.500Titles)]</visible>
			</control>
			<control type="group">
				<visible>![[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | 
				[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
				<include content="ProgressBar">
					<param name="left" value="20"/>
					<param name="top" value="359"/>
					<param name="width" value="236"/>
				</include>
			</control>
			<control type="image">
				<left>20</left>
				<top>11</top>
				<width>236</width>
				<height>354</height>
				<texture border="6" colordiffuse="$VAR[FocusColorTheme]" infill="false">colors/white.png</texture>
				<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
			</control>
		</definition>
	</include>

	<include name="View_54_PosterInfo">
		<control type="group">
			<include>OpenClose_Right</include>
			<include>Visible_Right</include>
			<include>MediaMenuAnimations</include>
			<left>0</left>
			<top>70</top>
			<visible>Control.IsVisible(54)</visible>
			<control type="label">
				<left>525</left>
				<right>30</right>
				<top>-57</top>
				<!-- <width>1815</width> -->
				<!-- <label>$INFO[ListItem.IMDbNumber]</label> -->
				<label>$VAR[BreadcrumbsVideoVar]$VAR[FlixCategory]$VAR[VideoFlixCrumbsVar]</label>
				<font>font37</font>
				<textcolor>$VAR[FocusColorTheme]</textcolor>
				<shadowcolor>text_shadow</shadowcolor>
				<align>center</align>
				<scroll>true</scroll>
				<scrollspeed>170</scrollspeed>
			</control>
			<!-- <control type="label">
				<right>30</right>
				<top>-57</top>
				<width>1815</width>
				<label>[COLOR unfocused_text]$INFO[Control.GetLabel(10)][/COLOR]  [B]•[/B]  [COLOR unfocused_text]$INFO[Container.CurrentItem][/COLOR] [B]/[/B] [COLOR unfocused_text]$INFO[Container.NumItems] items[/COLOR]</label>
				<font>font37</font>
				<textcolor>$VAR[FocusColorTheme]</textcolor>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
			</control> -->
			<control type="panel" id="54">
				<left>496</left>
				<right>0</right>
				<height>100%</height>
				<onright>54</onright>
				<onleft>531</onleft>
				<orientation>vertical</orientation>
				<movement>6</movement>
				<viewtype label="31101">icon</viewtype>
				<preloaditems>2</preloaditems>
				<pagecontrol>531</pagecontrol>
				<scrolltime tween="cubic" easing="out">600</scrolltime>
				<onback condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onback>
				<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
				<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
				<!-- <visible>Container.Content(artists) | Container.Content(albums) | Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | Container.Content(musicvideos) | Container.Content(images) | Container.Content(videos) | Container.Content(games)</visible> -->
				<visible>
					[Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | 
					
					[Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | 
					
					[Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | 
					
					[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 
					
					[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 
					
					[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 
					
					[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 
					
					[Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | 
					
					[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 
					
					[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]]
				</visible>

				<!-- DEFAULT LAYOUT -->
				<!-- W:249 H:375 -->
				<itemlayout width="283" height="409" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),0) + !Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="54"/>
						</include>
						<top>0</top>
						<include>PosterLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="283" height="409" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),0) + !Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>0</top>
						<include content="PosterLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="283" height="444" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),0) + Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="54"/>
						</include>
						<top>0</top>
						<include>PosterLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="283" height="444" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),0) + Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>0</top>
						<include content="PosterLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>

				<!-- SMALL LAYOUT -->
				<!-- W: 204 H: 306 -->
				<itemlayout width="235" height="337" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),1) + !Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="54"/>
						</include>
						<top>0</top>
						<include>SmallPosterLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="235" height="337" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),1) + !Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>0</top>
						<include content="SmallPosterLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="235" height="375" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),1) + Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]">
					<control type="group">
						<include content="ViewUnfocusedAnimations">
							<param name="id" value="54"/>
						</include>
						<top>0</top>
						<include>SmallPosterLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="235" height="375" condition="String.IsEqual(Skin.String(ArtworkSize54Setting),1) + Skin.HasSetting(Enable.54Titles) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>0</top>
						<include content="SmallPosterLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<top>150</top>
						<left>40</left>
						<include>SquareLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<left>40</left>
						<include content="SquareLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
				<itemlayout height="401" width="378" condition="Container.Content(images)">
					<control type="group">
						<left>0</left>
						<top>150</top>
						<include>PosterInfoPictureLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="378" condition="Container.Content(images)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>150</top>
						<include content="PosterInfoPictureLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
			</control>
			<include content="TopBottomBars">
				<param name="top_visible" value="false"/>
				<param name="bottom_visible" value="!Skin.HasSetting(Enable.54Dim)"/>
			</include>
		</control>
	</include>

</includes>