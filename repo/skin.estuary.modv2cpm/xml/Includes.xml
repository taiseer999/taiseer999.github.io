<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="Defaults.xml" />
	<include file="Includes_Home.xml" />
	<include file="Includes_Animations.xml" />
	<include file="Includes_MediaMenu.xml" />
	<include file="Includes_Buttons.xml" />
	<include file="Includes_DialogSelect.xml" />
	<include file="Includes_PVR.xml" />
	<include file="Includes_VideoLyrics.xml" />
	<include file="View_50_List.xml" />
	<include file="View_51_Poster.xml" />
	<include file="View_52_IconWall.xml" />
	<include file="View_53_Shift.xml" />
	<include file="View_54_InfoWall.xml" />
	<include file="View_55_WideList.xml" />
	<include file="View_500_Wall.xml" />
	<include file="View_501_Banner.xml" />
	<include file="View_502_FanArt.xml" />
	<include file="View_503_Gallery.xml" />
	<include file="View_503_Gallery_21x9.xml" />
	<include file="View_504_ThumbsWall.xml" />
	<include file="View_505_ThumbsInfoWall.xml" />
	<include file="View_506_Mosaic.xml" />
	<include file="View_507_Mosaic_Vertical.xml" />
	<include file="View_508_DoubleLists.xml" />
	<include file="View_509_TripleLists.xml" />
	<include file="View_510_Flix.xml" />
	<include file="Variables.xml" />
	<include file="script-skinshortcuts-includes.xml"/>
	<constant name="DepthDialog">0.50</constant>
	<constant name="DepthDialog+">0.52</constant>
	<constant name="DepthDialog-">0.48</constant>
	<constant name="DepthMax">0.54</constant>
	<constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
	<constant name="DepthContentPopout">0.10</constant>
	<constant name="DepthContentPanel">0.05</constant>
	<constant name="DepthBars">0.12</constant>
	<constant name="DepthBackground">-0.80</constant>
	<constant name="DepthSideBlade">0.10</constant>
	<constant name="bg_alpha">79</constant>
	<constant name="dialogbuttons_itemgap">-20</constant>
	<constant name="list_y_offset">0</constant>
	<constant name="list_item_height">80</constant>
	<expression name="infodialog_active">Window.IsActive(musicinformation) | Window.IsActive(songinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-embuary-image.xml) | Window.IsVisible(script-embuary-person.xml) | Window.IsVisible(script-embuary-video.xml) | Window.IsVisible(1132)</expression>
	<expression name="sidebar_visible">ControlGroup(9000).HasFocus | ControlGroup(8000).HasFocus | Control.HasFocus(6130) | Control.HasFocus(6131) | Window.IsActive(videoplaylist)</expression>
	<expression name="EnableTheme">![VideoPlayer.IsFullscreen | Window.IsActive(fullscreeninfo) | Window.IsVisible(visualisation) | Window.IsVisible(1104)]</expression>
	<!-- Christmas Time from 1. Advent to 2. Christmas Date, fix end date (26.12.) -->
	<expression name="ChristmasTime">System.Date(12-01,12-27) + !Skin.HasSetting(DisableThemes)</expression>
	<expression name="ChristmasTheme">$EXP[ChristmasTime] + $EXP[EnableTheme]</expression>
	<!-- Palm Sunday to Maundy Thursday, variable date -->
	<expression name="PreEasterTime">System.Date(03-24,03-29) + !Skin.HasSetting(DisableThemes)</expression>
	<expression name="PreEasterTheme">$EXP[PreEasterTime] + $EXP[EnableTheme]</expression>
	<!-- Easter from Good Friday to Easter Monday, variable date -->
	<expression name="EasterTime">System.Date(03-29,04-02) + !Skin.HasSetting(DisableThemes)</expression>
	<expression name="EasterTheme">$EXP[EasterTime] + $EXP[EnableTheme]</expression>
	<!-- Valentines Day, fix date (14.02) -->
	<expression name="ValentineTime">System.Date(02-14,02-15) + !Skin.HasSetting(DisableThemes)</expression>
	<expression name="ValentineTheme">$EXP[ValentineTime] + $EXP[EnableTheme]</expression>
	<!-- Halloween, fix date (31.10) -->
	<expression name="HalloweenTime">System.Date(10-31,11-01) + !Skin.HasSetting(DisableThemes)</expression>
	<expression name="HalloweenTheme">$EXP[HalloweenTime] + $EXP[EnableTheme]</expression>
	<!-- Expression lossless audio -->
	<expression name="isLossless">String.isEqual(Videoplayer.AudioCodec,cdda) | String.IsEqual(VideoPlayer.AudioCodec,wavpack) | String.IsEqual(Videoplayer.AudioCodec,flac) | String.IsEqual(Videoplayer.AudioCodec,pcm_bluray) | String.IsEqual(Videoplayer.AudioCodec,wav) | String.IsEqual(Videoplayer.AudioCodec,pcm) | String.IsEqual(Videoplayer.AudioCodec,pcm_s16le) | String.IsEqual(Videoplayer.AudioCodec,alac) | String.IsEqual(Videoplayer.AudioCodec,pcm_s24le) | String.IsEqual(Videoplayer.AudioCodec,ape) | String.IsEqual(Videoplayer.AudioCodec,sacd)</expression>
	<!-- Expression Seek, Skip Forwarding and Rewinding -->
	<expression name="isSeeking">Player.Seeking | Player.HasPerformedSeek(5) | Player.Forwarding | Player.Rewinding</expression>
	<!-- Expression not media, all types except movies, videos, tvshows, sets, seasons, epsiodes, music, musicvidoes -->
	<expression name="subCategories">Container.Content(genres) | Container.Content(tags) | Container.Content(years) | Container.Content(directors) | Container.Content(actors) | Container.Content(artists) | Container.Content(roles) | Container.Content(countries) | Container.Content(studios) | Container.Content(files) | Container.Content(playlists)</expression>
	<!-- Expression Categories Widget has Focus -->
	<expression name="widgetHasFocus">Control.HasFocus(4900) | Control.HasFocus(49001) | Control.HasFocus(5900) | Control.HasFocus(59001) | Control.HasFocus(6900) | Control.HasFocus(69001) | Control.HasFocus(7900) | Control.HasFocus(79001) | Control.HasFocus(8900) | Control.HasFocus(89001) | Control.HasFocus(11900) | Control.HasFocus(119001) | Control.HasFocus(12900) | Control.HasFocus(129001) | Control.HasFocus(13900) | Control.HasFocus(139001) | Control.HasFocus(16900) | Control.HasFocus(169001)</expression>
	<!-- Expression showing Jump to Letter -->
	<expression name="isJump2Letter">System.AddonIsEnabled(script.embuary.helper) + [String.IsEqual(ListItem.dbtype,video) | String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,set) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,musicvideo) | String.IsEqual(ListItem.dbtype,music) | String.IsEqual(ListItem.dbtype,song) | String.IsEqual(ListItem.dbtype,album) | String.IsEqual(ListItem.dbtype,artist) | String.IsEqual(ListItem.dbtype,actor) | Container.Content(artists) | Container.Content(addons)] + [String.IsEqual(Container.SortMethod,$LOCALIZE[171]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20376])]</expression>
	<!-- Expression showing Status icon on EPG timelime -->
	<expression name="hasPvrStatus">ListItem.IsRecording | ListItem.HasReminder | ListItem.HasTimerSchedule | ListItem.HasTimer | ListItem.HasArchive | ListItem.IsPlaying | ListItem.IsLive | ListItem.IsPremiere | ListItem.IsNew | ListItem.IsFinale</expression>
	<!-- Expression for showing pvr nextup window time slot -->
	<expression name="PvrNextUpTimeSlot">[!Skin.HasSetting(disable_PVRNextUp) + Integer.IsEqual(PVR.EpgEventRemainingTime(hh),0) + Integer.IsEqual(PVR.EpgEventRemainingTime(mm),0) + Integer.IsLess(PVR.EpgEventRemainingTime(ss),36) + Integer.IsGreater(PVR.EpgEventRemainingTime(ss),4)]</expression>
	<!-- Expression if PVR frontend has numbered Devices (#0 ... #8) -->
	<expression name="PvrHasNumberedDevices">String.Contains(PVR.ActStreamDevice,#0) | String.Contains(PVR.ActStreamDevice,#1) | String.Contains(PVR.ActStreamDevice,#2) | String.Contains(PVR.ActStreamDevice,#3) | String.Contains(PVR.ActStreamDevice,#4) | String.Contains(PVR.ActStreamDevice,#5) | String.Contains(PVR.ActStreamDevice,#6) | String.Contains(PVR.ActStreamDevice,#7) | String.Contains(PVR.ActStreamDevice,#8)</expression>
	<!-- Expression if show thumbs on unwatched episodes is set -->
	<expression name="show_unwatchedthumbs">String.Contains(Window(home).Property(videolibrary.showunwatchedplots),2)</expression>
	<include name="CommonScrollbars">
		<control type="group">
			<animation effect="fade" start="100" end="0" time="150">WindowClose</animation>
			<animation effect="fade" start="100" end="0" time="200" tween="sine" condition="System.HasActiveModalDialog">Conditional</animation>
			<animation effect="fade" start="0" end="100" delay="300" time="320">WindowOpen</animation>
			<control type="group">
				<right>0</right>
				<top>0</top>
				<width>60</width>
				<bottom>0</bottom>
				<control type="scrollbar" id="531">
					<right>0</right>
					<top>0</top>
					<bottom>0</bottom>
					<width>12</width>
					<onleft>50</onleft>
					<onright condition="$EXP[isJump2Letter]">SetFocus(8000)</onright>
					<onright condition="!$EXP[isJump2Letter]">50</onright>
					<orientation>vertical</orientation>
					<texturesliderbackground />
					<hitrect x="0" y="0" w="80" h="2160" />
					<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
					<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
					<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus(531) + !Skin.HasSetting(touchmode)">conditional</animation>
					<animation effect="slide" end="12,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus(531) + Skin.HasSetting(touchmode)">conditional</animation>
					<visible>Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(500) | Control.IsVisible(504) | Control.IsVisible(55) | Control.IsVisible(501) | Control.IsVisible(54) | Control.IsVisible(505) | Control.IsVisible(507)</visible>
				</control>
			</control>
			<control type="group">
				<left>0</left>
				<right>0</right>
				<bottom>0</bottom>
				<width>100%</width>
				<height>60</height>
				<control type="scrollbar" id="5199">
					<left>0</left>
					<bottom>65</bottom>
					<width>100%</width>
					<height>12</height>
					<texturesliderbackground />
					<hitrect x="0" y="-80" w="3840" h="80" />
					<onup>50</onup>
					<ondown condition="$EXP[isJump2Letter]">SetFocus(8000)</ondown>
					<ondown condition="!$EXP[isJump2Letter]">50</ondown>
					<orientation>horizontal</orientation>
					<visible>Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(510)</visible>
					<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
					<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
					<animation effect="slide" end="0,-13" time="0" condition="Control.IsVisible(506)">conditional</animation>
					<animation effect="slide" end="0,90" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				</control>
			</control>
		</control>
	</include>
	<include name="CommonAlphabet">
		<control type="button" id="8000">
			<left>-10000</left>
			<width>10</width>
			<height>1</height>
			<onfocus condition="!String.IsEqual(ListItem.SortLetter,A) + !String.IsEqual(ListItem.SortLetter,B) + !String.IsEqual(ListItem.SortLetter,C) + !String.IsEqual(ListItem.SortLetter,D) + !String.IsEqual(ListItem.SortLetter,E) + !String.IsEqual(ListItem.SortLetter,F) + !String.IsEqual(ListItem.SortLetter,G) + !String.IsEqual(ListItem.SortLetter,H) + !String.IsEqual(ListItem.SortLetter,I) + !String.IsEqual(ListItem.SortLetter,J) + !String.IsEqual(ListItem.SortLetter,K) + !String.IsEqual(ListItem.SortLetter,L) + !String.IsEqual(ListItem.SortLetter,M) + !String.IsEqual(ListItem.SortLetter,N) + !String.IsEqual(ListItem.SortLetter,O) + !String.IsEqual(ListItem.SortLetter,P) + !String.IsEqual(ListItem.SortLetter,Q) + !String.IsEqual(ListItem.SortLetter,R) + !String.IsEqual(ListItem.SortLetter,S) + !String.IsEqual(ListItem.SortLetter,T) + !String.IsEqual(ListItem.SortLetter,U) + !String.IsEqual(ListItem.SortLetter,V) + !String.IsEqual(ListItem.SortLetter,W) + !String.IsEqual(ListItem.SortLetter,X) + !String.IsEqual(ListItem.SortLetter,Y) + !String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,0)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,A)">SetFocus(8001,1)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,B)">SetFocus(8001,2)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,C)">SetFocus(8001,3)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,D)">SetFocus(8001,4)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,E)">SetFocus(8001,5)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,F)">SetFocus(8001,6)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,G)">SetFocus(8001,7)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,H)">SetFocus(8001,8)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,I)">SetFocus(8001,9)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,J)">SetFocus(8001,10)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,K)">SetFocus(8001,11)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,L)">SetFocus(8001,12)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,M)">SetFocus(8001,13)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,N)">SetFocus(8001,14)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,O)">SetFocus(8001,15)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,P)">SetFocus(8001,16)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,Q)">SetFocus(8001,17)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,R)">SetFocus(8001,18)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,S)">SetFocus(8001,19)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,T)">SetFocus(8001,20)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,U)">SetFocus(8001,21)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,V)">SetFocus(8001,22)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,W)">SetFocus(8001,23)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,X)">SetFocus(8001,24)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,Y)">SetFocus(8001,25)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,26)</onfocus>
			<visible>$EXP[isJump2Letter]</visible>
		</control>
		<control type="group">
			<animation type="Conditional" reversible="false" condition="[Control.HasFocus(8001) | Control.HasFocus(8101)]">
				<effect type="zoom" start="80" end="100" center="50%,50%" delay="160" tween="back" time="240" />
				<effect type="fade" delay="160" end="100" time="240" />
				<effect type="slide" start="0,-48" end="0" center="auto" time="0" />
			</animation>
			<animation type="Conditional" reversible="false" condition="![Control.HasFocus(8001) | Control.HasFocus(8101)]">
				<effect type="zoom" start="100" end="80" center="50%,50%" easing="in" tween="back" time="240" />
				<effect type="fade" start="100" end="0" time="240" />
				<effect type="slide" start="0" end="-5000" time="0" />
			</animation>
			<control type="group">
				<centerleft>50%</centerleft>
				<centertop>50%</centertop>
				<height>480</height>
				<width>905</width>
				<include content="DialogBackgroundCommons">
					<param name="width" value="905" />
					<param name="height" value="480" />
					<param name="header_label" value="$LOCALIZE[31365]" />
					<param name="header_id" value="1" />
				</include>
				<control type="panel" id="8001">
					<orientation>vertical</orientation>
					<left>30</left>
					<right>0</right>
					<top>100</top>
					<bottom>20</bottom>
					<onright>8001</onright>
					<onleft>8001</onleft>
					<onup>8101</onup>
					<ondown>8101</ondown>
					<onback>50</onback>
					<scrolltime tween="cubic" easing="out">500</scrolltime>
					<itemlayout width="95" height="95">
						<control type="group">
							<bottom>10</bottom>
							<right>10</right>
							<control type="label">
								<aligny>center</aligny>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font45</font>
								<animation effect="fade" start="100" end="33" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
							</control>
						</control>
					</itemlayout>
					<focusedlayout width="95" height="95">
						<control type="group">
							<bottom>10</bottom>
							<right>10</right>
							<control type="image">
								<left>-20</left>
								<top>-20</top>
								<width>125</width>
								<height>125</height>
								<texture colordiffuse="$VAR[SkinColorVar]">buttons/roundbutton-fo.png</texture>
							</control>
							<control type="label">
								<aligny>center</aligny>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font45</font>
								<animation effect="fade" start="100" end="33" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
							</control>
						</control>
					</focusedlayout>
					<content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=false&amp;reload=$INFO[Container.NumItems]</content>
				</control>
				<control type="group">
					<left>295</left>
					<control type="button" id="8101">
						<bottom>0</bottom>
						<width>315</width>
						<height>100</height>
						<onup>8001</onup>
						<ondown>8001</ondown>
						<onback>50</onback>
						<label>$LOCALIZE[15067]</label>
						<font>font25_title</font>
						<align>center</align>
						<textoffsetx>30</textoffsetx>
						<onclick>SetFocus(50)</onclick>
						<texturefocus border="40" colordiffuse="$VAR[SkinColorVar]">buttons/dialogbutton-fo.png</texturefocus>
						<texturenofocus border="40">buttons/dialogbutton-nofo.png</texturenofocus>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- animated fanarts -->
	<include name="GlobalAnimatedBackground">
		<control type="fadelabel" id="4399">
        	<top>-900</top>
            <width>2560</width>
            <height>0</height>
            <scroll>false</scroll>
            <scrollout>false</scrollout>
            <randomize>true</randomize>
            <resetonlabelchange>true</resetonlabelchange>
            <visible>Skin.HasSetting(EnableExtraFanart)</visible>
            <label>$INFO[ListItem.Art(fanart)]</label>
            <label>$INFO[ListItem.Art(fanart1)]</label>
            <label>$INFO[ListItem.Art(fanart2)]</label>
            <label>$INFO[ListItem.Art(fanart3)]</label>
            <label>$INFO[ListItem.Art(fanart4)]</label>
            <label>$INFO[ListItem.Art(fanart5)]</label>
            <label>$INFO[ListItem.Art(fanart6)]</label>
            <label>$INFO[ListItem.Art(fanart7)]</label>
            <label>$INFO[ListItem.Art(fanart8)]</label>
            <label>$INFO[ListItem.Art(fanart9)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart1)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart2)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart3)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart4)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart5)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart6)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart7)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart8)]</label>
            <label>$INFO[ListItem.Art(tvshow.fanart9)]</label>
			<label>$INFO[Window(Home).Property(PVR.Artwork.fanart)]</label>
            <label>$INFO[Window(Home).Property(PVR.Artwork.fanart1)]</label>
            <label>$INFO[Window(Home).Property(PVR.Artwork.fanart2)]</label>
            <label>$INFO[Window(Home).Property(PVR.Artwork.fanart3)]</label>
            <label>$INFO[Window(Home).Property(PVR.Artwork.fanart4)]</label>
            <pauseatend>8000</pauseatend>
        </control>
		<control type="image" id="4398">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<fadetime>1100</fadetime>
			<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
			<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
			<animation effect="fade" time="600">VisibleChange</animation>
			<texture colordiffuse="$VAR[Background_Opacity]">$VAR[FanartAnimated]</texture>
			<visible>Skin.HasSetting(show_fanart) + ![Player.HasVideo + !Skin.HasSetting(background_showvideo)] + !Control.IsVisible(502) + !Control.IsVisible(510) | [Window.IsVisible(movieinformation) + !Player.HasVideo]</visible>
		</control>
	</include>
	<include name="BusyPvrArtworkSpinner">
		<param name="left">155</param>
		<param name="top">91</param>
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<visible>!Player.HasVideo + !Pvr.IsPlayingRadio + String.IsEqual(Window(Home).Property(PVR.Artwork.Lookup),busy)</visible>
				<animation effect="fade" delay="500">VisibleChange</animation>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
				</control>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture>dialogs/extendedprogress/loading.png</texture>
					<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
				</control>
			</control>
		</definition>
	</include>
	<include name="HiddenObject">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label/>
		<font></font>
	</include>
	<include name="RatingCircle">
		<param name="animation">False</param>
		<definition>
			<control type="group">
				<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_userrating)">
					<param name="infolabel" value="ListItem.UserRating" />
				</include>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_rating)">
					<param name="infolabel" value="ListItem.Rating" />
				</include>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + !String.IsEmpty(ListItem.UserRating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[UserRatingColorVar]</textcolor>
						<label>$INFO[ListItem.UserRating]</label>
					</control>
				</control>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + String.IsEmpty(ListItem.UserRating) + !String.IsEmpty(ListItem.Rating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[RatingColorVar]</textcolor>
						<label>$INFO[ListItem.Rating]</label>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="VideoPlayerRatingCircle">
		<param name="animation">False</param>
		<definition>
			<control type="group">
				<left>175</left>
				<bottom>0</bottom>
				<height>44</height>
				<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_userrating)">
					<param name="infolabel" value="VideoPlayer.UserRating" />
				</include>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_rating)">
					<param name="infolabel" value="VideoPlayer.Rating" />
				</include>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + !String.IsEmpty(VideoPlayer.UserRating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[UserRatingColorVar]</textcolor>
						<label>$INFO[VideoPlayer.UserRating]</label>
					</control>
				</control>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + String.IsEmpty(VideoPlayer.UserRating) + !String.IsEmpty(VideoPlayer.Rating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[RatingColorVar]</textcolor>
						<label>$INFO[VideoPlayer.Rating]</label>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="RatingCircleGreyed">
		<param name="animation">False</param>
		<definition>
			<control type="group">
				<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
				<include content="UserRatingContentGreyed" condition="Skin.HasSetting(circle_userrating)">
					<param name="infolabel" value="ListItem.UserRating" />
				</include>
				<include content="UserRatingContentGreyed" condition="Skin.HasSetting(circle_rating)">
					<param name="infolabel" value="ListItem.Rating" />
				</include>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + !String.IsEmpty(ListItem.UserRating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[UserRatingColorVar]</textcolor>
						<label>$INFO[ListItem.UserRating]</label>
					</control>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="BFFFFFFF">overlays/badge_black.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>Skin.HasSetting(circle_bothrating) + String.IsEmpty(ListItem.UserRating) + !String.IsEmpty(ListItem.Rating)</visible>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
					</control>
					<control type="label">
						<left>3</left>
						<top>-4</top>
						<align>center</align>
						<aligny>center</aligny>
						<width>44</width>
						<height>44</height>
						<font>font20_title</font>
						<textcolor>$VAR[RatingColorVar]</textcolor>
						<label>$INFO[ListItem.Rating]</label>
					</control>
					<control type="image">
						<left>3</left>
						<top>-3</top>
						<width>44</width>
						<height>44</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="BFFFFFFF">overlays/badge_black.png</texture>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="UserRatingContent">
		<visible>!String.IsEmpty($PARAM[infolabel])</visible>
		<control type="image">
			<left>3</left>
			<top>-3</top>
			<width>44</width>
			<height>44</height>
			<aspectratio>keep</aspectratio>
			<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
		</control>
		<control type="label">
			<left>3</left>
			<top>-4</top>
			<align>center</align>
			<aligny>center</aligny>
			<width>44</width>
			<height>44</height>
			<font>font20_title</font>
			<textcolor>$VAR[RatingColorVar]</textcolor>
			<label>$INFO[$PARAM[infolabel]]</label>
		</control>
	</include>
	<include name="UserRatingContentGreyed">
		<visible>!String.IsEmpty($PARAM[infolabel])</visible>
		<control type="image">
			<left>3</left>
			<top>-3</top>
			<width>44</width>
			<height>44</height>
			<aspectratio>keep</aspectratio>
			<texture colordiffuse="$VAR[SkinColorVar]">overlays/badge.png</texture>
		</control>
		<control type="label">
			<left>3</left>
			<top>-4</top>
			<align>center</align>
			<aligny>center</aligny>
			<width>44</width>
			<height>44</height>
			<font>font20_title</font>
			<textcolor>$VAR[RatingColorVar]</textcolor>
			<label>$INFO[$PARAM[infolabel]]</label>
		</control>
		<control type="image">
			<left>3</left>
			<top>-3</top>
			<width>44</width>
			<height>44</height>
			<aspectratio>keep</aspectratio>
			<texture colordiffuse="BFFFFFFF">overlays/badge_black.png</texture>
		</control>
	</include>
	<include name="SettingsScrollbar">
		<param name="top">0</param>
		<param name="height">400</param>
		<param name="leftright">11100</param>
		<param name="right">0</param>
		<definition>
			<control type="scrollbar" id="60">
				<right>$PARAM[right]</right>
				<top>$PARAM[top]</top>
				<height>$PARAM[height]</height>
				<width>12</width>
				<onleft>$PARAM[leftright]</onleft>
				<onright>$PARAM[leftright]</onright>
				<orientation>vertical</orientation>
				<texturesliderbackground />
				<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
				<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
				<animation effect="fade" start="0" end="100" delay="300" time="320">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="150">WindowClose</animation>
			</control>
		</definition>
	</include>
	<include name="InfoList">
		<param name="item_label">$INFO[ListItem.Year,,[COLOR white]  -  ]$INFO[ListItem.Label,,[/COLOR]]</param>
		<param name="path">$VAR[InfoListPathVar]</param>
		<param name="item_height">40</param>
		<param name="bottom">100</param>
		<param name="width">1152</param>
		<param name="list_id">5000</param>
		<param name="font">font13</param>
		<param name="sortby"></param>
		<param name="sortorder">ascending</param>
		<param name="visible">true</param>
		<param name="textcolor">white</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<top>0</top>
				<width>$PARAM[width]</width>
				<bottom>$PARAM[bottom]</bottom>
				<orientation>vertical</orientation>
				<visible>$PARAM[visible]</visible>
				<scrolltime tween="cubic">800</scrolltime>
				<autoscroll delay="2000" repeat="5000" time="2000">Skin.HasSetting(AutoScroll)</autoscroll>
				<focusedlayout height="$PARAM[item_height]" width="$PARAM[width]">
					<control type="label">
						<left>10</left>
						<height>$PARAM[item_height]</height>
						<width>$PARAM[width]</width>
						<aligny>center</aligny>
						<label>$PARAM[item_label]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<font>$PARAM[font]</font>
						<textcolor>$PARAM[textcolor]</textcolor>
					</control>
				</focusedlayout>
				<itemlayout height="$PARAM[item_height]" width="$PARAM[width]">
					<control type="label">
						<left>10</left>
						<height>$PARAM[item_height]</height>
						<width>$PARAM[width]</width>
						<aligny>center</aligny>
						<label>$PARAM[item_label]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<font>$PARAM[font]</font>
						<textcolor>$PARAM[textcolor]</textcolor>
					</control>
				</itemlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]">$PARAM[path]</content>
			</control>
		</definition>
	</include>
	<include name="PicsInfoLine">
		<control type="grouplist">
			<visible>!String.IsEmpty($PARAM[value])</visible>
			<height>45</height>
			<orientation>horizontal</orientation>
			<width>570</width>
			<itemgap>10</itemgap>
			<control type="label">
				<width>auto</width>
				<height>40</height>
				<aligny>center</aligny>
				<label>$PARAM[label]:</label>
				<textcolor>$VAR[SkinColorVar]</textcolor>
			</control>
			<control type="label">
				<width>auto</width>
				<height>40</height>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[value]]</label>
			</control>
		</control>
	</include>
	<include name="DefaultSimpleListLayout">
		<param name="align">left</param>
		<param name="height">70</param>
		<param name="font">font13</param>
		<param name="fontcolor">grey</param>
		<definition>
			<itemlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="label">
					<left>20</left>
					<top>0</top>
					<right>20</right>
					<bottom>0</bottom>
					<align>$PARAM[align]</align>
					<font>$PARAM[font]</font>
					<aligny>center</aligny>
					<textcolor>$PARAM[fontcolor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="image">
					<left>0</left>
					<top>0</top>
					<right>0</right>
					<bottom>0</bottom>
					<texture colordiffuse="$VAR[SkinColorVar]">lists/focus.png</texture>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<right>0</right>
					<bottom>0</bottom>
					<texture colordiffuse="$VAR[GradientColorVar]">lists/focus-gradient.png</texture>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
					<visible>Skin.HasSetting(EnableGradientColor)</visible>
				</control>
				<control type="label">
					<left>20</left>
					<top>0</top>
					<right>20</right>
					<bottom>0</bottom>
					<align>$PARAM[align]</align>
					<font>$PARAM[font]</font>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
			</focusedlayout>
		</definition>
	</include>
	<include name="DefaultSimpleListLayout2">
		<param name="align">left</param>
		<param name="height">70</param>
		<param name="font">font13</param>
		<param name="fontcolor">grey</param>
		<definition>
			<itemlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="label">
					<left>20</left>
					<top>0</top>
					<right>20</right>
					<bottom>0</bottom>
					<align>$PARAM[align]</align>
					<font>$PARAM[font]</font>
					<aligny>center</aligny>
					<textcolor>$PARAM[fontcolor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="image">
					<left>0</left>
					<top>0</top>
					<right>0</right>
					<bottom>0</bottom>
					<texture colordiffuse="$VAR[SkinColorVar]">lists/focus.png</texture>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="label">
					<left>20</left>
					<top>0</top>
					<right>20</right>
					<bottom>0</bottom>
					<align>$PARAM[align]</align>
					<font>$PARAM[font]</font>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
			</focusedlayout>
		</definition>
	</include>
	<include name="InfoFlag">
		<control type="group">
			<width>180</width>
			<visible>$PARAM[visible]</visible>
			<control type="image">
				<top>-3</top>
				<left>0</left>
				<width>40</width>
				<height>40</height>
				<texture colordiffuse="white">$PARAM[icon]</texture>
			</control>
			<control type="label">
				<left>50</left>
				<width>180</width>
				<height>35</height>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$PARAM[label]</label>
			</control>
		</control>
	</include>
	<include name="MediaFlag">
		<param name="width">104</param>
		<param name="height">40</param>
		<param name="label_width">50</param>
		<param name="label_left">52</param>
		<param name="visible">true</param>
		<param name="visible2">true</param>
		<param name="colordiffuse">$VAR[MediaFlagsColorVar]</param>
		<param name="has_background">true</param>
		<param name="fallback" />
		<definition>
			<control type="group">
				<width>$PARAM[width]</width>
				<visible>$PARAM[visible] + $PARAM[visible2]</visible>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<fadetime>0</fadetime>
					<aspectratio align="right" aligny="center">keep</aspectratio>
					<texture colordiffuse="$PARAM[colordiffuse]" fallback="$PARAM[fallback]">$PARAM[texture]</texture>
					<bordertexture colordiffuse="80FFFFFF">dialogs/back.png</bordertexture>
					<bordersize>1</bordersize>
					<visible>$PARAM[has_background]</visible>
				</control>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<fadetime>0</fadetime>
					<aspectratio align="right" aligny="center">keep</aspectratio>
					<texture colordiffuse="$PARAM[colordiffuse]" fallback="$PARAM[fallback]">$PARAM[texture]</texture>
					<bordersize>1</bordersize>
					<visible>!$PARAM[has_background]</visible>
				</control>
				<control type="label">
					<left>$PARAM[label_left]</left>
					<width>$PARAM[label_width]</width>
					<height>$PARAM[height]</height>
					<align>center</align>
					<label>$PARAM[label]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$PARAM[colordiffuse]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlags">
		<param name="infolabel_prefix" />
		<param name="resolution_var">$VAR[3DFlagVar]</param>
		<param name="audiocodec_var">$VAR[AudioCodecFlagVar]</param>
		<param name="visible">true</param>
		<param name="align">right</param>
		<definition>
			<control type="label" id="4395">
				<visible>false</visible>
				<label>$VAR[MediaSourceFlagVar]</label>
			</control>
			<control type="list" id="56000">
				<orientation>horizontal</orientation>
				<right>10</right>
				<bottom>11</bottom>
				<height>86</height>
				<align>$PARAM[align]</align>
				<itemgap>5</itemgap>
				<width>1738</width>
				<usecontrolcoords>true</usecontrolcoords>
				<autoscroll time="1500">true</autoscroll>
				<animation effect="slide" end="1580,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,1)">conditional</animation>
				<animation effect="slide" end="1422,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,2)">conditional</animation>
				<animation effect="slide" end="1264,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,3)">conditional</animation>
				<animation effect="slide" end="1106,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,4)">conditional</animation>
				<animation effect="slide" end="948,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,5)">conditional</animation>
				<animation effect="slide" end="790,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,6)">conditional</animation>
				<animation effect="slide" end="632,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,7)">conditional</animation>
				<animation effect="slide" end="474,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,8)">conditional</animation>
				<animation effect="slide" end="316,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,9)">conditional</animation>
				<animation effect="slide" end="158,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,10)">conditional</animation>
				<visible>String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,set) + Window.IsVisible(Home) + Skin.HasSetting(MinimizeMainMenu)</visible>
				<visible>!Skin.HasSetting(show_moviessetflag)</visible>
				<focusedlayout height="86" width="158">
					<control type="image">
						<left>5</left>
						<top>0</top>
						<width>153</width>
						<height>86</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true" fallback="DefaultVideoCover.png">$VAR[InfoWidgetThumbVar]</texture>
						<bordertexture colordiffuse="$VAR[MediaFlagsColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
				</focusedlayout>
				<itemlayout height="86" width="158">
					<control type="image">
						<left>5</left>
						<top>0</top>
						<width>153</width>
						<height>86</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true" fallback="DefaultVideoCover.png">$VAR[InfoWidgetThumbVar]</texture>
						<bordertexture colordiffuse="$VAR[MediaFlagsColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
				</itemlayout>
				<content sortby="year" sortorder="ascending">$INFO[$PARAM[infolabel_prefix]ListItem.FolderPath]</content>
			</control>
			<control type="list" id="56000">
				<orientation>horizontal</orientation>
				<right>10</right>
				<bottom>11</bottom>
				<height>86</height>
				<align>$PARAM[align]</align>
				<itemgap>5</itemgap>
				<width>1264</width>
				<usecontrolcoords>true</usecontrolcoords>
				<autoscroll time="1500">true</autoscroll>
				<animation effect="slide" end="1106,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,1)">conditional</animation>
				<animation effect="slide" end="948,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,2)">conditional</animation>
				<animation effect="slide" end="790,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,3)">conditional</animation>
				<animation effect="slide" end="632,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,4)">conditional</animation>
				<animation effect="slide" end="474,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,5)">conditional</animation>
				<animation effect="slide" end="316,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,6)">conditional</animation>
				<animation effect="slide" end="158,0" time="0" condition="Integer.IsEqual(Container(56000).NumItems,7)">conditional</animation>
				<visible>String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,set) + Window.IsVisible(Home) + !Skin.HasSetting(MinimizeMainMenu)</visible>
				<visible>!Skin.HasSetting(show_moviessetflag)</visible>
				<focusedlayout height="86" width="158">
					<control type="image">
						<left>5</left>
						<top>0</top>
						<width>153</width>
						<height>86</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true" fallback="DefaultVideoCover.png">$VAR[WidgetThumbViewVar]</texture>
						<bordertexture colordiffuse="$VAR[MediaFlagsColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
				</focusedlayout>
				<itemlayout height="86" width="158">
					<control type="image">
						<left>5</left>
						<top>0</top>
						<width>153</width>
						<height>86</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<texture background="true" fallback="DefaultVideoCover.png">$VAR[WidgetThumbViewVar]</texture>
						<bordertexture colordiffuse="$VAR[MediaFlagsColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
				</itemlayout>
				<content sortby="year" sortorder="ascending">$INFO[$PARAM[infolabel_prefix]ListItem.FolderPath]</content>
			</control>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<right>20</right>
				<height>50</height>
				<align>$PARAM[align]</align>
				<itemgap>3</itemgap>
				<width>1800</width>
				<usecontrolcoords>true</usecontrolcoords>
				<scrolltime tween="sine" easing="out">200</scrolltime>
				<autoscroll>true</autoscroll>
				<visible>$PARAM[visible] + !Control.IsVisible(40165)</visible>
				<control type="group">
					<width>104</width>
					<visible>[String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !Control.HasFocus(5094)] | [String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !Control.HasFocus(5084)] | String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,movie) | Control.HasFocus(6600) | Control.HasFocus(66001)</visible>
					<visible>!Window.IsVisible(movieinformation) + !Window.IsVisible(1132)</visible>
					<visible>!Skin.HasSetting(show_mediastudioflag)</visible>
					<include content="MediaFlag">
						<param name="texture" value="$INFO[Skin.String(studiologos.path)]$INFO[$PARAM[infolabel_prefix]ListItem.Studio,,.png]" />
						<param name="colordiffuse" value="$VAR[MediaFlagsColorVar]" />
						<param name="has_background" value="false" />
						<param name="height" value="50" />
						<param name="visible" value="[String.IsEqual(Skin.String(studiologos.path),resource://resource.images.studios.white/) + System.HasAddon(resource.images.studios.white)] | [String.IsEqual(Skin.String(studiologos.path),resource://resource.images.studios.estuarymod/) + System.HasAddon(resource.images.studios.estuarymod)]" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="$INFO[Skin.String(studiologos.path)]$INFO[$PARAM[infolabel_prefix]ListItem.Studio,,.png]" />
						<param name="colordiffuse" value="" />
						<param name="has_background" value="false" />
						<param name="height" value="50" />
						<param name="visible" value="String.IsEqual(Skin.String(studiologos.path),resource://resource.images.studios.coloured/) + System.HasAddon(resource.images.studios.coloured)" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="$INFO[Skin.String(studiologos.path)]$INFO[$PARAM[infolabel_prefix]ListItem.Studio,,.jpg]" />
						<param name="colordiffuse" value="" />
						<param name="has_background" value="false" />
						<param name="height" value="50" />
						<param name="visible" value="String.IsEqual(Skin.String(studiologos.path),resource://resource.images.studios.squarehd/) + System.HasAddon(resource.images.studios.squarehd)" />
					</include>
				</control>
				<control type="group">
					<width>125</width>
					<visible>!String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,movie) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)</visible>
					<visible>!Skin.HasSetting(show_mediarecordlabelflag) + System.HasAddon(resource.images.recordlabels.white)</visible>
					<include content="MediaFlag">
						<param name="texture" value="$INFO[Skin.String(recordlabels.path)]$INFO[$PARAM[infolabel_prefix]ListItem.Property(Album_Label),,.png]" />
						<param name="colordiffuse" value="$VAR[MediaFlagsColorVar]" />
						<param name="has_background" value="false" />
						<param name="height" value="50" />
					</include>
				</control>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[MediaSourceFlagVar]" />
					<param name="width" value="58" />
					<param name="visible" value="!Control.HasFocus(11100) + !String.IsEmpty(Control.GetLabel(4395))" />
					<param name="visible2" value="!Skin.HasSetting(show_mediasourceflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[resolution_var]" />
					<param name="width" value="58" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoResolution)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediaresolutionflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.VideoCodec,flags/videocodec/,.png]" />
					<param name="width" value="104" />
					<param name="fallback" value="flags/videocodec/fallback.png" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoCodec)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediavideocodecflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.HdrType,flags/videoresolution/,.png]" />
					<param name="width" value="58" />
					<param name="visible" value="[String.Contains($PARAM[infolabel_prefix]ListItem.HdrType,hdr) | String.IsEqual($PARAM[infolabel_prefix]ListItem.HdrType,hlg)] + !String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,.hdrplus.) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/videoresolution/hdrplus.png" />
					<param name="width" value="92" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,.hdrplus.) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.HdrType,flags/videoresolution/,.png]" />
					<param name="width" value="92" />
					<param name="visible" value="String.IsEqual($PARAM[infolabel_prefix]ListItem.HdrType,dolbyvision) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.VideoAspect,flags/aspectratio/,.png]" />
					<param name="fallback" value="flags/aspectratio/fallback.png" />
					<param name="width" value="86" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoAspect)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediaaspectratioflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[audiocodec_var]" />
					<param name="width" value="104" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioCodec)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediaaudiocodecflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioChannels,flags/audiochannel/,.png]" />
					<param name="width" value="104" />
					<param name="fallback" value="flags/audiochannel/fallback.png" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioChannels)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediaaudiochannelsflag)" />
				</include>
				<include content="MediaFlag">
					<param name="width" value="5" />
					<param name="visible" value="![Skin.HasSetting(show_mediadurationflag) + Skin.HasSetting(show_mediaendtimeflag)]" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/time.png" />
					<param name="width" value="141" />
					<param name="label_width" value="98" />
					<param name="label_left" value="41" />
					<param name="label" value="$VAR[DurationVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Duration) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediadurationflag)" />
				</include>
				<control type="group">
					<width>130</width>
					<visible>[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) | !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)] + !$PARAM[infolabel_prefix]ListItem.IsFolder + !$PARAM[infolabel_prefix]ListItem.IsCollection + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !Control.HasFocus(5500) + !Control.HasFocus(6400) + !Control.HasFocus(6500) + !Control.HasFocus(6600) + !Control.HasFocus(66001) + !Control.HasFocus(12500) + !Control.HasFocus(16200) + !Control.HasFocus(16600) + !$EXP[subCategories] + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !String.StartsWith(Container.FolderPath,plugin://) + ![String.IsEqual($PARAM[infolabel_prefix]ListItem.dbtype,genre) + [String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList) | String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)]]</visible>
					<visible>!String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,AM) + !String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,PM) + !String.Contains($PARAM[infolabel_prefix]ListItem.EndTime,AM) + !String.Contains($PARAM[infolabel_prefix]ListItem.EndTime,PM)</visible>
					<visible>!Skin.HasSetting(show_mediaendtimeflag)</visible>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime.png" />
						<param name="width" value="130" />
						<param name="label_width" value="87" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTimeResume]" />
						<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume)" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime.png" />
						<param name="width" value="130" />
						<param name="label_width" value="87" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTime]" />
						<param name="visible" value="String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)" />
					</include>
				</control>
				<control type="group">
					<width>178</width>
					<visible>[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) | !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)] + !$PARAM[infolabel_prefix]ListItem.IsFolder + !$PARAM[infolabel_prefix]ListItem.IsCollection + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !Control.HasFocus(5500) + !Control.HasFocus(6400) + !Control.HasFocus(6500) + !Control.HasFocus(6600) + !Control.HasFocus(66001) + !Control.HasFocus(12500) + !Control.HasFocus(16200) + !Control.HasFocus(16600) + !$EXP[subCategories] + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !String.StartsWith(Container.FolderPath,plugin://) + ![String.IsEqual($PARAM[infolabel_prefix]ListItem.dbtype,genre) + [String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList) | String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)]]</visible>
					<visible>String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,AM) | String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,PM) | String.Contains($PARAM[infolabel_prefix]ListItem.EndTime,AM) | String.Contains($PARAM[infolabel_prefix]ListItem.EndTime,PM)</visible>
					<visible>!Skin.HasSetting(show_mediaendtimeflag)</visible>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime_long.png" />
						<param name="width" value="178" />
						<param name="label_width" value="135" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTimeResume]" />
						<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume)" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime_long.png" />
						<param name="width" value="178" />
						<param name="label_width" value="135" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTime]" />
						<param name="visible" value="String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)" />
					</include>
				</control>
				<include content="MediaFlag">
					<param name="width" value="5" />
					<param name="visible" value="!Skin.HasSetting(show_dateairedflag) + !Skin.HasSetting(show_dateaddedflag) + [!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Premiered) | !String.IsEmpty($PARAM[infolabel_prefix]ListItem.DateAdded)]" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/premiered.png" />
					<param name="width" value="200" />
					<param name="label_width" value="155" />
					<param name="label_left" value="45" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Premiered]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Premiered) + !Skin.HasSetting(show_dateairedflag) + !Control.IsVisible(12000) + !String.IsEqual(ListItem.Premiered,ListItem.Year)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/premiered_short.png" />
					<param name="width" value="120" />
					<param name="label_width" value="77" />
					<param name="label_left" value="41" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Premiered]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Premiered) + !Skin.HasSetting(show_dateairedflag) + !Control.IsVisible(12000) + String.IsEqual(ListItem.Premiered,ListItem.Year)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/added.png" />
					<param name="width" value="200" />
					<param name="label_width" value="155" />
					<param name="label_left" value="45" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.DateAdded]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.DateAdded) + !Skin.HasSetting(show_dateaddedflag) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBType,set) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBType,tvshow) + !Control.IsVisible(12000)" />
				</include>
				<include content="MediaFlag">
					<param name="width" value="5" />
					<param name="visible" value="!Skin.HasSetting(show_mpaaflag) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="96" />
					<param name="label_width" value="46" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + !String.Contains(ListItem.mpaa,PG-13) + !String.Contains(Container(60).ListItem.mpaa,PG-13) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) + !String.Contains(ListItem.mpaa,NC-17) + !String.Contains(Container(60).ListItem.mpaa,NC-17) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="144" />
					<param name="label_width" value="94" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + String.Contains(ListItem.mpaa,PG-13) | String.Contains(Container(60).ListItem.mpaa,PG-13) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) | String.Contains(ListItem.mpaa,NC-17) | String.Contains(Container(60).ListItem.mpaa,NC-17) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)" />
				</include>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsAudioSubs">
		<param name="infolabel_prefix"/>
		<definition>
			<control type="group">
				<width>104</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.2)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/language.png" />
					<param name="width" value="104" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)]" />
				</include>
			</control>
			<control type="group">
				<width>164</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.2)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/language.2.png" />
					<param name="width" value="164" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)]" />
				</include>
				<control type="label">
					<width>58</width>
					<left>104</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.2)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
			</control>
			<control type="group">
				<width>224</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.2)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/language.3.png" />
					<param name="width" value="224" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.1)]" />
				</include>
				<control type="label">
					<width>56</width>
					<left>106</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.2)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
				<control type="label">
					<width>56</width>
					<left>164</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(AudioLanguage.3)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
			</control>
			<control type="group">
				<width>5</width>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1))</visible>
				<include content="MediaFlag">
					<param name="width" value="0" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.2)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/st_language.png" />
					<param name="width" value="104" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)]" />
				</include>
			</control>
			<control type="group">
				<width>164</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.2)) + String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/st_language.2.png" />
					<param name="width" value="164" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)]" />
				</include>
				<control type="label">
					<width>56</width>
					<left>106</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.2)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
			</control>
			<control type="group">
				<width>224</width>
				<height>40</height>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.2)) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.3))</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/st_language.3.png" />
					<param name="width" value="224" />
					<param name="label_width" value="56" />
					<param name="label_left" value="48" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.1)]" />
				</include>
				<control type="label">
					<width>56</width>
					<left>106</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.2)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
				<control type="label">
					<width>56</width>
					<left>164</left>
					<height>40</height>
					<align>center</align>
					<label>$INFO[$PARAM[infolabel_prefix]ListItem.Property(SubtitleLanguage.3)]</label>
					<font>Font-Flag-Small3</font>
					<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsRatings">
		<param name="infolabel_prefix"/>
		<definition>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(imdb)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/imdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating(imdb)]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(tmdb)) + Skin.HasSetting(cinfodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/tmdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating(tmdb)]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(themoviedb)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/tmdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating(themoviedb)]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(tvdb)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/tvdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating(tvdb)]" />
				</include>
			</control>
			<control type="group">
				<width>112</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty(Window(Home).Property(rotten)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/rotten.png" />
					<param name="width" value="112" />
					<param name="label_width" value="58" />
					<param name="label_left" value="52" />
					<param name="label" value="$INFO[Window(Home).Property(rotten),,%]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty(Window(Home).Property(metacritic)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/metacritic.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[Window(Home).Property(metacritic)]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!Container.Content(albums) + !Container.Content(songs) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(trakt)) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/trakt.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating(trakt)]" />
				</include>
			</control>
			<control type="group">
				<width>104</width>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating) + [Container.Content(albums) | Container.Content(songs)] + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/rating.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Rating]" />
				</include>
			</control>
			<control type="group">
				<width>82</width>
				<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.UserRating) + Skin.HasSetting(infodialog_rating)</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/myrating.png" />
					<param name="width" value="82" />
					<param name="label_width" value="41" />
					<param name="label_left" value="39" />
					<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.UserRating]" />
				</include>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsInfoDialogLeft">
		<param name="infolabel_prefix"/>
		<param name="resolution_var">$VAR[3DFlagVar]</param>
		<param name="audiocodec_var">$VAR[AudioCodecFlagVar]</param>
		<param name="show_ratings">true</param>
		<param name="visible">true</param>
		<param name="align">left</param>
		<definition>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<left>50</left>
				<top>20</top>
				<height>70</height>
				<align>$PARAM[align]</align>
				<itemgap>3</itemgap>
				<width>1200</width>
				<usecontrolcoords>true</usecontrolcoords>
				<visible>$PARAM[visible]</visible>
				<include content="MediaFlag">
					<param name="texture" value="flags/hdtv.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,hdtv) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,pdtv) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,hdtvrip) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,tvrip)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/vhs.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,vhs) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,vhsrip)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/hddvd.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,hddvd)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/webdl.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,web-dl) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,webdl)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/dvd.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,dvd)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/bluray.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,bluray) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,blu-ray) | String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,bdrip)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/iso.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,.iso)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[resolution_var]" />
					<param name="width" value="58" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoResolution)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.VideoCodec,flags/videocodec/,.png]" />
					<param name="fallback" value="flags/videocodec/fallback.png" />
					<param name="width" value="104" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoCodec)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.HdrType,flags/videoresolution/,.png]" />
					<param name="width" value="58" />
					<param name="visible" value="[String.Contains($PARAM[infolabel_prefix]ListItem.HdrType,hdr) | String.IsEqual($PARAM[infolabel_prefix]ListItem.HdrType,hlg)] + !String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,.hdrplus.) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/videoresolution/hdrplus.png" />
					<param name="width" value="92" />
					<param name="visible" value="String.Contains($PARAM[infolabel_prefix]ListItem.Filenameandpath,.hdrplus.) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.HdrType,flags/videoresolution/,.png]" />
					<param name="width" value="92" />
					<param name="visible" value="String.IsEqual($PARAM[infolabel_prefix]ListItem.HdrType,dolbyvision) + !Skin.HasSetting(show_mediacolordepthflag)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.VideoAspect,flags/aspectratio/,.png]" />
					<param name="fallback" value="flags/aspectratio/fallback.png" />
					<param name="width" value="86" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoAspect)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[audiocodec_var]" />
					<param name="fallback" value="flags/audiocodec/fallback.png" />
					<param name="width" value="104" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioCodec)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioChannels,flags/audiochannel/,.png]" />
					<param name="fallback" value="flags/audiochannel/fallback.png" />
					<param name="width" value="104" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioChannels)" />
				</include>
				<include content="MediaFlag">
					<param name="width" value="5" />
					<param name="visible" value="!Container.Content(tvshows) + !Container.Content(albums) + !Container.Content(songs)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/time.png" />
					<param name="width" value="141" />
					<param name="label_width" value="98" />
					<param name="label_left" value="41" />
					<param name="label" value="$INFO[ListItem.Duration]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Duration) + String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song)" />
				</include>
				<include content="MediaFlagsRatings" condition="$PARAM[show_ratings]">
					<param name="infolabel_prefix"/>
				</include>
				<include content="MediaFlag">
					<param name="width" value="5" />
					<param name="visible" value="!Container.Content(tvshows) + !Container.Content(albums) + !Container.Content(songs)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="96" />
					<param name="label_width" value="46" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + !String.Contains(ListItem.mpaa,PG-13) + !String.Contains(Container(60).ListItem.mpaa,PG-13) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) + !String.Contains(ListItem.mpaa,NC-17) + !String.Contains(Container(60).ListItem.mpaa,NC-17) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="144" />
					<param name="label_width" value="94" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + [String.Contains(ListItem.mpaa,PG-13) | String.Contains(Container(60).ListItem.mpaa,PG-13) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) | String.Contains(ListItem.mpaa,NC-17) | String.Contains(Container(60).ListItem.mpaa,NC-17) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)]" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$VAR[VideoPlayerAudioCodecFlagVar]" />
					<param name="width" value="104" />
					<param name="fallback" value="flags/audiocodec/fallback.png" />
					<param name="visible" value="Window.IsVisible(1141)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/cadre2.png" />
					<param name="width" value="164" />
					<param name="label_width" value="158" />
					<param name="label_left" value="3" />
					<param name="label" value="$INFO[MusicPlayer.SampleRate,, kHz]" />
					<param name="visible" value="!String.IsEmpty(MusicPlayer.Samplerate) + $EXP[isLossless] + Window.IsVisible(1141)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/cadre2.png" />
					<param name="width" value="164" />
					<param name="label_width" value="158" />
					<param name="label_left" value="3" />
					<param name="label" value="$INFO[MusicPlayer.BitRate,, kbps]" />
					<param name="visible" value="!String.IsEmpty(MusicPlayer.Bitrate) + !$EXP[isLossless] + Window.IsVisible(1141)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/cadre2.png" />
					<param name="width" value="164" />
					<param name="label_width" value="158" />
					<param name="label_left" value="3" />
					<param name="label" value="$INFO[MusicPlayer.BitsPerSample,, bits]" />
					<param name="visible" value="!String.IsEmpty(MusicPlayer.BitsPerSample) + Window.IsVisible(1141)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[MusicPlayer.UserRating,flags/starrating/,.png]" />
					<param name="width" value="163" />
					<param name="visible" value="!String.IsEmpty(MusicPlayer.UserRating) + Window.IsVisible(1141)" />
				</include>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsInfoDialogRight">
		<param name="infolabel_prefix" />
		<param name="pvr">false</param>
		<param name="resolution_var">$VAR[3DFlagVar]</param>
		<param name="audiocodec_var">$VAR[AudioCodecFlagVar]</param>
		<param name="visible">true</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<right>50</right>
				<top>20</top>
				<height>70</height>
				<align>$PARAM[align]</align>
				<itemgap>3</itemgap>
				<width>1900</width>
				<usecontrolcoords>true</usecontrolcoords>
				<visible>$PARAM[visible]</visible>
				<include content="MediaFlag" condition="$PARAM[pvr]">
					<param name="texture" value="flags/tmdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$VAR[PVRMetadataRatingTmdbVar]" />
					<param name="visible" value="[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(tmdb)) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.ratings.tmdb)) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.ratings.themoviedb))]" />
				</include>
				<include content="MediaFlag" condition="$PARAM[pvr]">
					<param name="texture" value="flags/imdb.png" />
					<param name="width" value="104" />
					<param name="label_width" value="58" />
					<param name="label_left" value="44" />
					<param name="label" value="$VAR[PVRMetadataRatingImdbVar]" />
					<param name="visible" value="[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Rating(imdb)) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.ratings.imdb))]" />
				</include>
				<include content="MediaFlag" condition="$PARAM[pvr] + !Skin.HasSetting(show_mpaaflag)">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="96" />
					<param name="label_width" value="46" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.mpaa))" />
					<param name="visible2" value="!String.Contains(ListItem.mpaa,PG-13) + !String.Contains(Container(60).ListItem.mpaa,PG-13) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) + !String.Contains(ListItem.mpaa,NC-17) + !String.Contains(Container(60).ListItem.mpaa,NC-17) + !String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)" />
				</include>
				<include content="MediaFlag" condition="$PARAM[pvr] + !Skin.HasSetting(show_mpaaflag)">
					<param name="texture" value="$VAR[MPAAImageVar]" />
					<param name="width" value="144" />
					<param name="label_width" value="94" />
					<param name="label_left" value="48" />
					<param name="label" value="$VAR[MPAAFlagVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.mpaa) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.mpaa))" />
					<param name="visible2" value="String.Contains(ListItem.mpaa,PG-13) | String.Contains(Container(60).ListItem.mpaa,PG-13) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),PG-13) | String.Contains(ListItem.mpaa,NC-17) | String.Contains(Container(60).ListItem.mpaa,NC-17) | String.Contains(Window(Home).Property(PVR.Artwork.ListItem.mpaa),NC-17)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="flags/time.png" />
					<param name="width" value="141" />
					<param name="label_width" value="98" />
					<param name="label_left" value="41" />
					<param name="label" value="$VAR[DurationVar]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Duration) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
					<param name="visible2" value="!Skin.HasSetting(show_mediadurationflag)" />
				</include>
				<control type="group">
					<width>130</width>
					<visible>[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) | !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)] + !$PARAM[infolabel_prefix]ListItem.IsFolder + !$PARAM[infolabel_prefix]ListItem.IsCollection + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !Control.HasFocus(5500) + !Control.HasFocus(6400) + !Control.HasFocus(6500) + !Control.HasFocus(6600) + !Control.HasFocus(66001) + !Control.HasFocus(12500) + !Control.HasFocus(16200) + !Control.HasFocus(16600) + !$EXP[subCategories] + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !String.StartsWith(Container.FolderPath,plugin://) + ![String.IsEqual($PARAM[infolabel_prefix]ListItem.dbtype,genre) + [String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList) | String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)]]</visible>
					<visible>!String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,AM) + !String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,PM)</visible>
					<visible>!Skin.HasSetting(show_mediaendtimeflag)</visible>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime.png" />
						<param name="width" value="130" />
						<param name="label_width" value="87" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTimeResume]" />
						<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume)" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime.png" />
						<param name="width" value="130" />
						<param name="label_width" value="87" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTime]" />
						<param name="visible" value="String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)" />
					</include>
				</control>
				<control type="group">
					<width>178</width>
					<visible>[!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) | !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)] + !$PARAM[infolabel_prefix]ListItem.IsFolder + !$PARAM[infolabel_prefix]ListItem.IsCollection + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) + !Control.HasFocus(5500) + !Control.HasFocus(6400) + !Control.HasFocus(6500) + !Control.HasFocus(6600) + !Control.HasFocus(66001) + !Control.HasFocus(12500) + !Control.HasFocus(16200) + !Control.HasFocus(16600) + !$EXP[subCategories] + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,season) + !String.StartsWith(Container.FolderPath,plugin://) + ![String.IsEqual($PARAM[infolabel_prefix]ListItem.dbtype,genre) + [String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList) | String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)]]</visible>
					<visible>String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,AM) | String.Contains($PARAM[infolabel_prefix]ListItem.EndTimeResume,PM)</visible>
					<visible>!Skin.HasSetting(show_mediaendtimeflag)</visible>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime_long.png" />
						<param name="width" value="178" />
						<param name="label_width" value="135" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTimeResume]" />
						<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume)" />
					</include>
					<include content="MediaFlag">
						<param name="texture" value="flags/finishtime_long.png" />
						<param name="width" value="178" />
						<param name="label_width" value="135" />
						<param name="label_left" value="43" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.EndTime]" />
						<param name="visible" value="String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTimeResume) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.EndTime)" />
					</include>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagPVR">
		<control type="group">
			<width>61</width>
			<visible>!String.IsEmpty(Window(Home).Property(PVR.Artwork.ListItem.is_db))</visible>
			<include content="MediaFlag">
				<param name="texture" value="flags/cadre_small.png" />
				<param name="width" value="61"/>
			</include>
			<control type="image">
				<left>12</left>
				<top>2</top>
				<width>36</width>
				<height>36</height>
				<aspectratio>scale</aspectratio>
				<texture colordiffuse="$VAR[SkinColorVar]">icons/extendedinfo/OverlayLocal.png</texture>
			</control>
		</control>
		<include content="MediaFlag">
			<param name="texture" value="flags/cadre_small.png" />
			<param name="width" value="61" />
			<param name="colordiffuse" value="FFFF0000" />
			<param name="label_width" value="57" />
			<param name="label_left" value="2" />
			<param name="label" value="$LOCALIZE[31667]" />
			<param name="visible" value="PVR.IsRecording" />
		</include>
		<control type="group">
			<width>120</width>
			<visible>System.GetBool(pvrplayback.signalquality) + $EXP[PvrHasNumberedDevices]</visible>
			<include content="MediaFlag">
				<param name="texture" value="flags/pvr.png" />
				<param name="width" value="120"/>
				<param name="label_width" value="54" />
				<param name="label_left" value="6" />
				<param name="label" value="$LOCALIZE[31664]" />
			</include>
			<control type="label">
				<left>64</left>
				<width>50</width>
				<height>40</height>
				<align>center</align>
				<label>$VAR[PVRDeviceNumberVar]</label>
				<font>Font-Flag-Small3</font>
				<textcolor>$VAR[MediaFlagsColorVar]</textcolor>
			</control>
		</control>
		<control type="group">
			<width>120</width>
			<visible>System.GetBool(pvrplayback.signalquality) + [Integer.IsGreater(PVR.ActStreamProgrSignal,0) | !Skin.HasSetting(disable_pvr_zerovalues)]</visible>
			<include content="MediaFlag">
				<param name="texture" value="flags/pvr.png" />
				<param name="width" value="120"/>
				<param name="label_width" value="54" />
				<param name="label_left" value="6" />
				<param name="label" value="$LOCALIZE[31665]" />
			</include>
			<control type="progress">
				<left>64</left>
				<width>50</width>
				<top>6</top>
				<height>28</height>
				<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]">colors/white.png</midtexture>
				<info>PVR.ActStreamProgrSignal</info>
			</control>
		</control>
		<control type="group">
			<width>120</width>
			<visible>System.GetBool(pvrplayback.signalquality) + [Integer.IsGreater(PVR.ActStreamProgrSNR,0) | !Skin.HasSetting(disable_pvr_zerovalues)]</visible>
			<include content="MediaFlag">
				<param name="texture" value="flags/pvr.png" />
				<param name="width" value="120"/>
				<param name="label_width" value="54" />
				<param name="label_left" value="6" />
				<param name="label" value="$LOCALIZE[31666]" />
			</include>
			<control type="progress">
				<left>64</left>
				<width>50</width>
				<top>6</top>
				<height>28</height>
				<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]">colors/white.png</midtexture>
				<info>PVR.ActStreamProgrSNR</info>
			</control>
		</control>
		<include content="MediaFlag">
			<param name="texture" value="flags/encrypt.png" />
			<param name="width" value="62"/>
			<param name="visible" value="Pvr.ActStreamIsEncrypted" />
		</include>
		<include content="MediaFlag">
			<param name="texture" value="$VAR[ParentalRatingImageVar]" />
			<param name="width" value="96" />
			<param name="label_width" value="46" />
			<param name="label_left" value="48" />
			<param name="label" value="$VAR[ParentalRatingFlagVar]" />
			<param name="visible" value="!String.IsEmpty(VideoPlayer.ParentalRating) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
			<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + !String.Contains(VideoPlayer.ParentalRating,PG-13) + !String.Contains(VideoPlayer.ParentalRating,NC-17)" />
		</include>
		<include content="MediaFlag">
			<param name="texture" value="$VAR[ParentalRatingImageVar]" />
			<param name="width" value="144" />
			<param name="label_width" value="94" />
			<param name="label_left" value="48" />
			<param name="label" value="$VAR[ParentalRatingFlagVar]" />
			<param name="visible" value="!String.IsEmpty(VideoPlayer.ParentalRating) + !String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,song) + !Control.HasFocus(6600)  + !Control.HasFocus(66001)" />
			<param name="visible2" value="!Skin.HasSetting(show_mpaaflag) + String.Contains(VideoPlayer.ParentalRating,PG-13) | String.Contains(VideoPlayer.ParentalRating,NC-17)" />
		</include>
	</include>
	<include name="MediaFlagPvrOsd">
		<param name="visible">true</param>
		<param name="bottom">140</param>
		<definition>
			<control type="grouplist">
				<left>1300</left>
				<bottom>$PARAM[bottom]</bottom>
				<right>30</right>
				<height>50</height>
				<align>right</align>
				<orientation>horizontal</orientation>
				<itemgap>3</itemgap>
				<orientation>horizontal</orientation>
				<visible>$PARAM[visible]</visible>
				<include condition="$PARAM[visible]" content="MediaFlagPVR" />
			</control>
		</definition>
	</include>
	<include name="WeatherIcon">
		<control type="group">
			<width>268</width>
			<visible>!String.IsEmpty($PARAM[label])</visible>
			<control type="image">
				<left>50</left>
				<width>60</width>
				<height>60</height>
				<texture colordiffuse="D0FFFFFF">$PARAM[texture]</texture>
			</control>
			<control type="textbox">
				<top>68</top>
				<width>160</width>
				<height>63</height>
				<font>font27_narrow</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[label]]</label>
			</control>
		</control>
	</include>
	<include name="FileManagerPanel">
		<param name="width"></param>
		<param name="right"></param>
		<definition>
			<control type="fixedlist" id="$PARAM[list_id]">
				<left>0</left>
				<top>list_y_offset</top>
				<bottom>list_y_offset</bottom>
				<right>$PARAM[right]</right>
				<width>$PARAM[width]</width>
				<focusposition>5</focusposition>
				<movement>3</movement>
				<onleft>$PARAM[onleft_id]</onleft>
				<onright>$PARAM[onright_id]</onright>
				<onup>$PARAM[list_id]</onup>
				<ondown>$PARAM[list_id]</ondown>
				<pagecontrol>$PARAM[scrollbar_id]</pagecontrol>
				<scrolltime>200</scrolltime>
				<focusedlayout height="list_item_height">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<right>0</right>
						<bottom>0</bottom>
						<texture colordiffuse="$VAR[SkinColorVar]">lists/focus.png</texture>
						<animation effect="fade" start="100" end="0" time="0" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<right>0</right>
						<bottom>0</bottom>
						<texture colordiffuse="$VAR[GradientColorVar]">lists/focus-gradient.png</texture>
						<animation effect="fade" start="100" end="0" time="0" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<left>15</left>
						<top>0</top>
						<width>32</width>
						<bottom>0</bottom>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>$VAR[ListWatchedIconVar]</texture>
					</control>
					<control type="label">
						<left>65</left>
						<top>0</top>
						<bottom>0</bottom>
						<right>20</right>
						<aligny>center</aligny>
						<scroll>true</scroll>
						<label>$INFO[ListItem.Label]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<textoffsetx>30</textoffsetx>
						<top>0</top>
						<bottom>0</bottom>
						<right>0</right>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					</control>
				</focusedlayout>
				<itemlayout height="list_item_height">
					<control type="image">
						<left>15</left>
						<top>0</top>
						<width>32</width>
						<bottom>0</bottom>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>$VAR[ListWatchedIconVar]</texture>
					</control>
					<control type="label">
						<left>65</left>
						<top>0</top>
						<bottom>0</bottom>
						<right>20</right>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<textoffsetx>30</textoffsetx>
						<top>0</top>
						<bottom>0</bottom>
						<right>0</right>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label2]</label>
						<textcolor>grey</textcolor>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					</control>
				</itemlayout>
			</control>
		</definition>
	</include>
	<include name="AddonLauncherPanel">
		<param name="fallback_image">DefaultFolder.png</param>
		<definition>
			<control type="group" id="$PARAM[group_id]">
				<include content="Visible_Right_Delayed">
					<param name="id" value="$PARAM[id]"/>
				</include>
				<visible>String.IsEqual(Container(9000).ListItem.Property(id),$PARAM[id])</visible>
				<control type="group">
					<visible>Integer.IsGreater(Container($PARAM[group_id]50).NumItems,0) | Container($PARAM[group_id]50).IsUpdating</visible>
					<control type="panel" id="$PARAM[group_id]50">
						<left>540</left>
						<top>0</top>
						<right>50</right>
						<height>100%</height>
						<onleft>9000</onleft>
						<onright>$PARAM[group_id]30</onright>
						<onup>$PARAM[group_id]50</onup>
						<ondown>$PARAM[group_id]50</ondown>
						<preloaditems>2</preloaditems>
						<pagecontrol>$PARAM[group_id]30</pagecontrol>
						<scrolltime tween="cubic" easing="out">500</scrolltime>
						<itemlayout height="401" width="320">
							<control type="group">
								<top>150</top>
								<include content="InfoWallMusicLayout">
									<param name="fallback_image" value="DefaultAddon.png" />
								</include>
							</control>
						</itemlayout>
						<focusedlayout height="401" width="320">
							<control type="group">
								<top>150</top>
								<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
									<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
									<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
								</animation>
								<include content="InfoWallMusicLayout">
									<param name="fallback_image" value="DefaultAddon.png" />
									<param name="focused" value="true" />
								</include>
							</control>
						</focusedlayout>
						<content sortby="lastused" sortorder="descending" target="$PARAM[container_target]">$PARAM[container_path]</content>
					</control>
					<control type="scrollbar" id="$PARAM[group_id]30">
						<right>0</right>
						<top>0</top>
						<width>12</width>
						<height>100%</height>
						<orientation>vertical</orientation>
						<texturesliderbackground />
						<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[group_id]30)">conditional</animation>
						<onleft>$PARAM[group_id]50</onleft>
						<onright/>
					</control>
				</control>
				<control type="group">
					<left>462</left>
					<include content="ImageWidget">
						<param name="text_label" value="$LOCALIZE[31153]" />
						<param name="button_label" value="$LOCALIZE[31144]" />
						<param name="button_onclick" value="$PARAM[imagewidget_onclick]"/>
						<param name="button_id" value="$PARAM[group_id]333"/>
						<param name="visible_2" value="false"/>
						<param name="visible" value="![Integer.IsGreater(Container($PARAM[group_id]50).NumItems,0) | Container($PARAM[group_id]50).IsUpdating]"/>
						<param name="button2_onclick" value="Skin.SetBool(HomeMenuNoTVShowButton)"/>
					</include>
				</control>
			</control>
		</definition>
	</include>
	<include name="LeftAlignedInfo">
		<param name="id">33333</param>
		<definition>
			<control type="grouplist">
				<left>20</left>
				<top>5</top>
				<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				<width>1400</width>
				<height>80</height>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<control type="label" id="$PARAM[id]">
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<left>85</left>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<height>30</height>
					<width>1400</width>
				</control>
				<control type="label">
					<width>1400</width>
					<label>$PARAM[main_label]</label>
					<font>font30_title</font>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<height>35</height>
					<scroll>true</scroll>
					<animation effect="slide" start="0,0" end="0,15" time="0" condition="String.IsEmpty(Control.GetLabel($PARAM[id]))">Conditional</animation>
				</control>
			</control>
		</definition>
	</include>
	<include name="InfoDialogTopBarInfo">
		<param name="id">33333</param>
		<param name="posy">20</param>
		<param name="maintextcolor">white</param>
		<param name="subtextcolor">white</param>
		<param name="left">10</param>
		<param name="right">10</param>
		<definition>
			<control type="grouplist">
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<top>$PARAM[posy]</top>
				<animation effect="fade" start="0" end="100" time="300" delay="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				<height>150</height>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<control type="label">
					<width>100%</width>
					<label>$PARAM[main_label]</label>
					<font>font52_title</font>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<height>65</height>
					<align>center</align>
					<scroll>true</scroll>
					<animation effect="slide" start="0,0" end="0,25" time="0" condition="String.IsEmpty(Control.GetLabel($PARAM[id]))">Conditional</animation>
					<textcolor>$PARAM[maintextcolor]</textcolor>
				</control>
				<control type="label" id="$PARAM[id]">
					<label>[B]$PARAM[sub_label][/B]</label>
					<left>85</left>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<align>center</align>
					<height>100</height>
					<width>100%</width>
					<textcolor>$PARAM[subtextcolor]</textcolor>
					<scroll>true</scroll>
				</control>
			</control>
		</definition>
	</include>
	<include name="UpDownArrows">
		<param name="up_posy">134</param>
		<param name="down_posy">910</param>
		<param name="posx">936</param>
		<param name="visible">true</param>
		<definition>
			<control type="button" id="$PARAM[container_id]588">
				<left>$PARAM[posx]</left>
				<top>$PARAM[down_posy]</top>
				<width>48</width>
				<height>24</height>
				<texturefocus colordiffuse="$VAR[SkinColorVar]">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[SkinColorVar]">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageDown</onclick>
				<visible>Container($PARAM[container_id]).HasNext + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]589">
				<left>$PARAM[posx]</left>
				<top>$PARAM[up_posy]</top>
				<width>48</width>
				<height>24</height>
				<texturefocus colordiffuse="$VAR[SkinColorVar]" flipy="true">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[SkinColorVar]" flipy="true">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageUp</onclick>
				<visible>Container($PARAM[container_id]).HasPrevious + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<include name="LeftRightArrows">
		<param name="left_posx">445</param>
		<param name="right_posx">1843</param>
		<param name="posy">936</param>
		<param name="visible">!System.HasActiveModalDialog</param>
		<definition>
			<control type="image">
				<left>$PARAM[left_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texture flipx="true" colordiffuse="$VAR[SkinColorVar]">overlays/arrowright.png</texture>
				<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
				<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
				<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasPrevious</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="image">
				<left>$PARAM[right_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texture colordiffuse="$VAR[SkinColorVar]">overlays/arrowright.png</texture>
				<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
				<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
				<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasNext</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[list_id]500">
				<left>$PARAM[left_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texturefocus />
				<texturenofocus />
				<onclick>Control.Move($PARAM[list_id],-1)</onclick>
				<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasPrevious + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]500)]</visible>
			</control>
			<control type="button" id="$PARAM[list_id]501">
				<left>$PARAM[right_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texturefocus />
				<texturenofocus />
				<onclick>Control.Move($PARAM[list_id],1)</onclick>
				<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasNext + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]501)]</visible>
			</control>
		</definition>
	</include>
	<include name="DialogBackgroundCommons">
		<control type="image">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<animation effect="fade" time="300">VisibleChange</animation>
			<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<texture colordiffuse="C2FFFFFF">colors/black.png</texture>
			<visible>$PARAM[darken_bg]</visible>
		</control>
		<control type="button">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<texturefocus />
			<texturenofocus />
			<onclick>Action(close)</onclick>
		</control>
		<control type="group">
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<bottom>0</bottom>
				<texture colordiffuse="dialog_tint">colors/white.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<height>70</height>
				<texture colordiffuse="$VAR[SkinColorVar]" border="2">colors/white70.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<height>70</height>
				<texture colordiffuse="$VAR[GradientColorVar]" border="2">lists/focus-gradient.png</texture>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
			</control>
			<control type="label" id="$PARAM[header_id]">
				<left>20</left>
				<top>0</top>
				<right>80</right>
				<height>70</height>
				<font>font32_title</font>
				<label>$PARAM[header_label]</label>
				<aligny>center</aligny>
				<shadowcolor>black</shadowcolor>
				<scroll>true</scroll>
			</control>
			<control type="button" id="22002">
				<description>button overlay to avoid closing in dialog area</description>
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<bottom>0</bottom>
				<texturefocus />
				<texturenofocus />
			</control>
			<control type="group">
				<right>10</right>
				<top>11</top>
				<width>48</width>
				<height>48</height>
				<control type="radiobutton">
					<radiowidth>48</radiowidth>
					<radioheight>48</radioheight>
					<texturefocus />
					<texturenofocus />
					<label/>
					<textureradioofffocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioofffocus>
					<textureradiooffnofocus colordiffuse="CCFFFFFF">icons/logo.png</textureradiooffnofocus>
					<textureradioonfocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioonfocus>
					<textureradioonnofocus colordiffuse="CCFFFFFF">icons/logo.png</textureradioonnofocus>
					<onclick>Action(close)</onclick>
					<visible>!Skin.HasSetting(touchmode) + !Skin.HasSetting(MenuLogoLE) + !Skin.HasSetting(MenuLogoCE)</visible>
				</control>
				<control type="radiobutton">
					<radiowidth>48</radiowidth>
					<radioheight>48</radioheight>
					<texturefocus />
					<texturenofocus />
					<label/>
					<textureradioofffocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioofffocus>
					<textureradiooffnofocus colordiffuse="CCFFFFFF">icons/le-logo-white.png</textureradiooffnofocus>
					<textureradioonfocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioonfocus>
					<textureradioonnofocus colordiffuse="CCFFFFFF">icons/le-logo-white.png</textureradioonnofocus>
					<onclick>Action(close)</onclick>
					<visible>!Skin.HasSetting(touchmode) + Skin.HasSetting(MenuLogoLE)</visible>
				</control>
				<control type="radiobutton">
					<radiowidth>48</radiowidth>
					<radioheight>48</radioheight>
					<texturefocus />
					<texturenofocus />
					<label/>
					<textureradioofffocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioofffocus>
					<textureradiooffnofocus colordiffuse="CCFFFFFF">icons/ce-logo-white.png</textureradiooffnofocus>
					<textureradioonfocus colordiffuse="CCFFFFFF">dialogs/close.png</textureradioonfocus>
					<textureradioonnofocus colordiffuse="CCFFFFFF">icons/ce-logo-white.png</textureradioonnofocus>
					<onclick>Action(close)</onclick>
					<visible>!Skin.HasSetting(touchmode) + Skin.HasSetting(MenuLogoCE)</visible>
				</control>
			</control>
			<control type="button">
				<right>10</right>
				<top>11</top>
				<width>48</width>
				<height>48</height>
				<texturefocus>dialogs/close.png</texturefocus>
				<texturenofocus>dialogs/close.png</texturenofocus>
				<onclick>Action(close)</onclick>
				<visible>Skin.HasSetting(touchmode)</visible>
			</control>
		</control>
	</include>
	<include name="TopBar">
		<param name="sublabel">$INFO[Container.SortMethod,$LOCALIZE[31591]: , | ]$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</param>
		<param name="visible">true</param>
		<param name="width">1200</param>
		<definition>
			<control type="group">
				<animation effect="slide" end="0,-112" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<depth>DepthBars</depth>
				<animation effect="fade" start="0" end="100" time="300" condition="[Window.Previous(fullscreenvideo) | Window.Previous(startup)] + !Window.IsVisible(1109)">WindowOpen</animation>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>110%</width>
					<height>160</height>
					<texture colordiffuse="$VAR[Bars_Opacity]">frame/osdfade.png</texture>
					<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
					<visible>$PARAM[visible]</visible>
				</control>
				<control type="group">
					<left>25</left>
					<description>Left side of top bar</description>
					<width>$PARAM[width]</width>
					<top>6</top>
					<height>35</height>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<animation effect="slide" end="70,0" time="200" reversible="true" condition="Control.IsVisible(799)">Conditional</animation>
					<visible>Skin.HasSetting(show_breadcrumbs)</visible>
					<visible>[Control.IsVisible(50) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(505) | Control.IsVisible(506) | Control.IsVisible(507) | [Control.IsVisible(501) + String.IsEqual(Skin.AspectRatio,21:9) + !Control.HasFocus(531)]]</visible>
					<visible>!Container.Content(addons) + [Window.IsVisible(videos) | Window.IsVisible(music) | Window.IsVisible(pictures) | Window.IsVisible(favouritesbrowser)]</visible>
					<control type="grouplist">
						<orientation>horizontal</orientation>
						<usecontrolcoords>true</usecontrolcoords>
						<visible>Skin.HasSetting(show_breadcrumbs) + !Skin.HasSetting(show_breadcrumbs_countonly)</visible>
						<control type="label">
							<label>$PARAM[breadcrumbs_label]</label>
							<include content="BreadcrumbsLabel">
								<param name="textcolor" value="$VAR[SkinColorVar]"/>
							</include>
							<visible>$PARAM[visible]</visible>
						</control>
						<control type="label">
							<label>$INFO[Container.ShowTitle, / ,]</label>
							<include>BreadcrumbsLabel</include>
							<visible>!String.IsEmpty(Container.ShowTitle) + !String.IsEqual(Container.ShowTitle,Container.FolderName)</visible>
						</control>
						<control type="label">
							<label>$INFO[Container.FolderName, / , : ]</label>
							<include content="BreadcrumbsLabel">
								<param name="textcolor" value="$VAR[SkinColorVar]"/>
							</include>
							<visible>![Container.Content() + Window.IsActive(videos)]</visible>
							<visible>![Window.IsActive(tvchannels) | Window.IsActive(tvtimers) | Window.IsActive(tvrecordings) | Window.IsActive(tvsearch)]</visible>
						</control>
						<control type="label">
							<label>$INFO[Container.PluginCategory,, : ]</label>
							<include>BreadcrumbsLabel</include>
							<visible>!String.IsEmpty(Container.PluginCategory)</visible>
						</control>
						<control type="label">
							<label>$INFO[Control.GetLabel(10), : ,]</label>
							<include>BreadcrumbsLabel</include>
							<visible>!String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100]) + Window.IsActive(videos)</visible>
						</control>
						<control type="label">
							<label>($LOCALIZE[31052])</label>
							<include>BreadcrumbsLabel</include>
							<visible>Container.Filtered</visible>
						</control>
						<control type="label">
							<label>$INFO[Container.CurrentItem, , / ]$INFO[Container.NumItems]</label>
							<include>BreadcrumbsLabel</include>
						</control>
						<control type="label">
							<visible>[Control.IsVisible(506) | Control.IsVisible(507)] + !Skin.HasSetting(show_breadcrumbs_countonly)</visible>
							<label>$INFO[ListItem.Label, - ,]</label>
							<include>BreadcrumbsLabel</include>
						</control>
					</control>
					<control type="grouplist">
						<orientation>horizontal</orientation>
						<usecontrolcoords>true</usecontrolcoords>
						<visible>Skin.HasSetting(show_breadcrumbs) + Skin.HasSetting(show_breadcrumbs_countonly) + !Control.IsVisible(506) + !Control.IsVisible(507)</visible>
						<control type="label">
							<font>font12</font>
							<width>540</width>
							<align>right</align>
							<textcolor>$VAR[SkinColorVar]</textcolor>
							<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
							<label>$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</label>
						</control>
					</control>
				</control>
				<control type="button">
					<top>0</top>
					<width>200</width>
					<height>100</height>
					<label/>
					<onclick>Action(Back)</onclick>
					<visible>!Window.IsActive(home)</visible>
					<texturefocus />
					<texturenofocus />
				</control>
				<control type="grouplist">
					<top>0</top>
					<align>right</align>
					<right>20</right>
					<height>200</height>
					<orientation>horizontal</orientation>
					<width>1270</width>
					<itemgap>10</itemgap>
					<visible>!Window.IsVisible(extendedprogressdialog) + !Window.IsActive(fullscreenvideo)</visible>
					<animation effect="fade" time="150">VisibleChange</animation>
					<control type="group">
						<width>600</width>
						<visible>Player.HasMedia + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
						<visible>![Window.IsVisible(videos) + !Container.Content(addons)] + ![Window.IsVisible(music) + !Container.Content(addons)] + ![Window.IsVisible(pictures) + !Container.Content(addons)]</visible>
						<animation effect="fade" time="200">VisibleChange</animation>
						<control type="grouplist">
							<left>-75</left>
							<orientation>horizontal</orientation>
							<height>38</height>
							<top>14</top>
							<align>right</align>
							<width>660</width>
							<itemgap>5</itemgap>
							<usecontrolcoords>true</usecontrolcoords>
							<control type="multiimage">
								<description>animated Equalizer Icon</description>
								<top>7</top>
								<imagepath colordiffuse="$VAR[SkinColorVar]">icons/equalizer</imagepath>
								<width>40</width>
								<height>23</height>
								<fadetime>50</fadetime>
								<timeperimage>50</timeperimage>
								<randomize>true</randomize>
								<visible>Player.HasAudio</visible>
								<visible>!Player.Paused + !Player.Caching</visible>
							</control>
							<control type="image">
								<top>7</top>
								<width>1</width>
								<height>23</height>
								<texture />
								<visible>Player.HasAudio + !Player.Paused</visible>
							</control>
							<control type="image">
								<top>4</top>
								<width>32</width>
								<height>32</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="$VAR[SkinColorVar]">$VAR[NowPlayingIconVar]</texture>
								<visible>![Player.HasAudio + !Player.Paused]</visible>
							</control>
							<control type="label">
								<label>$INFO[Player.Title]</label>
								<font>font27</font>
								<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
								<height>35</height>
								<width min="1" max="555">auto</width>
								<scroll>true</scroll>
							</control>
						</control>
						<control type="label" id="7700">
							<label>$VAR[NowPlayingSublabelVar]</label>
							<left>5</left>
							<top>48</top>
							<font>font12</font>
							<textcolor>grey</textcolor>
							<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
							<height>25</height>
							<width>580</width>
							<align>right</align>
							<scroll>true</scroll>
						</control>
					</control>
					<control type="label">
						<visible>![Window.IsVisible(videos) + !Container.Content(addons)] + ![Window.IsVisible(music) + !Container.Content(addons)] + ![Window.IsVisible(pictures) + !Container.Content(addons)] + ![Window.IsVisible(favouritesbrowser) + !Container.Content(addons)] + ![Window.IsVisible(shutdownmenu) + Skin.HasSetting(powermenu_list)]</visible>
						<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
						<animation effect="slide" end="0,-10" time="0" condition="String.IsEqual(Skin.Font,Arial)">Conditional</animation>
						<font>font_clock</font>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<height>200</height>
						<width>auto</width>
						<align>right</align>
						<label>[B]$INFO[System.Time][/B]</label>
					</control>
				</control>
				<control type="grouplist">
					<right>10</right>
					<top>70</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<visible>![Window.IsVisible(videos) + !Container.Content(addons)] + ![Window.IsVisible(music) + !Container.Content(addons)] + ![Window.IsVisible(pictures) + !Container.Content(addons)] + ![Window.IsVisible(favouritesbrowser) + !Container.Content(addons)] + ![Window.IsVisible(shutdownmenu) + Skin.HasSetting(powermenu_list)]</visible>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<textoffsetx>-8</textoffsetx>
						<label>$INFO[System.AlarmPos]</label>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="image">
						<top>16</top>
						<width>40</width>
						<height>22</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>icons/power.png</texture>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<align>right</align>
						<aligny>center</aligny>
						<label>$INFO[System.Date]</label>
						<visible>Skin.HasSetting(show_date)</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>$INFO[Window(Weather).Property(Current.Temperature),| ,]$INFO[System.TemperatureUnits]</label>
						<visible>Skin.HasSetting(show_weatherinfo) + Skin.HasSetting(show_date) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits]</label>
						<visible>Skin.HasSetting(show_weatherinfo) + !Skin.HasSetting(show_date) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="image">
						<top>1</top>
						<width>50</width>
						<height>50</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>$INFO[Weather.FanartCode,special://skin/extras/weather/,.png]</texture>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>| </label>
						<visible>Skin.HasSetting(show_inet) + !String.IsEmpty(System.InternetState)</visible>
					</control>
					<control type="image">
						<top>15</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_ok.png</texture>
						<visible>Skin.HasSetting(show_inet) + System.InternetState</visible>
					</control>
					<control type="image">
						<top>15</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_nok.png</texture>
						<visible>Skin.HasSetting(show_inet) + !System.InternetState + !String.IsEmpty(System.InternetState)</visible>
					</control>
					<include content="BatteryIndicator" condition="Skin.HasSetting(show_battery)">
						<param name="width">120</param>
						<param name="top">12</param>
					</include>
					<control type="image">
						<top>8</top>
						<left>-20</left>
						<width>74</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
						<animation effect="slide" end="-3,-58" time="0" condition="Window.IsVisible(videos) | Window.IsVisible(music) | Window.IsVisible(pictures)">Conditional</animation>
						<visible>![Window.IsVisible(shutdownmenu) + Skin.HasSetting(powermenu_list)]</visible>
					</control>
				</control>
				<control type="label" id="23000">
					<top>0</top>
					<left>0</left>
					<label>$INFO[ListItem.SortLetter]</label>
					<font>font_MainMenu</font>
					<width>100%</width>
					<height>80</height>
					<align>center</align>
					<visible>!System.HasActiveModalDialog</visible>
					<visible>Container.Scrolling</visible>
					<visible>!Container.Content(seasons)</visible>
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[563])</visible>
					<animation effect="fade" start="0" end="100" time="200" reversible="true">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				</control>
			</control>
			<include>TouchBackButton</include>
		</definition>
	</include>
	<include name="BatteryIndicator">
		<param name="top">12</param>
		<param name="left">10</param>
		<param name="width">120</param>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<left>$PARAM[left]</left>
				<height>28</height>
				<visible>Skin.HasSetting(show_battery)</visible>
				<control type="image">
					<width>100</width>
					<height>28</height>
					<texture>flags/battery_load.png</texture>
				</control>
				<control type="progress">
					<top>8</top>
					<left>10</left>
					<width>27</width>
					<height>12</height>
					<texturebg border="3" colordiffuse="$VAR[BackgroundColorVar]">colors/white50.png</texturebg>
					<midtexture colordiffuse="$VAR[BatteryLevelVar]">colors/white.png</midtexture>
					<info>System.BatteryLevel</info>
				</control>
				<control type="label">
					<top>-1</top>
					<left>45</left>
					<width>50</width>
					<font>font09</font>
					<align>center</align>
					<label>$INFO[System.BatteryLevel]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="BreadcrumbsLabel">
		<param name="font">font12_bold</param>
		<param name="textcolor">white</param>
		<definition>
			<font>$PARAM[font]</font>
			<textcolor>$PARAM[textcolor]</textcolor>
			<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
			<height>30</height>
			<width min="1" max="900">auto</width>
		</definition>
	</include>
	<include name="ColoredBackgroundImages">
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[BackgroundColorVar]">special://skin/extras/backgrounds/primary.jpg</texture>
			<visible>![[Player.HasVideo | Slideshow.IsActive] + Skin.HasSetting(opacity_100)]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">special://skin/extras/patterns/pattern13.png</texture>
			<visible>!Window.IsVisible(visualisation)</visible>
			<visible>$EXP[ChristmasTheme]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">special://skin/extras/patterns/pattern14.png</texture>
			<visible>!Window.IsVisible(visualisation)</visible>
			<visible>$EXP[HalloweenTheme]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">special://skin/extras/patterns/pattern17.png</texture>
			<visible>!Window.IsVisible(visualisation)</visible>
			<visible>$EXP[PreEasterTheme]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">special://skin/extras/patterns/pattern15.png</texture>
			<visible>!Window.IsVisible(visualisation)</visible>
			<visible>$EXP[EasterTheme]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">special://skin/extras/patterns/pattern16.png</texture>
			<visible>!Window.IsVisible(visualisation)</visible>
			<visible>$EXP[ValentineTheme]</visible>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="$VAR[PatternColorVar]">$INFO[Skin.String(background_overlay),special://skin/extras/patterns/pattern,.png]</texture>
			<visible>!Window.IsVisible(visualisation) + !Window.IsVisible(pvrradiordsinfo)</visible>
			<visible>!$EXP[ChristmasTheme] + !$EXP[HalloweenTheme] + !$EXP[PreEasterTheme] + !$EXP[EasterTheme] + !$EXP[ValentineTheme]</visible>
		</control>
	</include>
	<include name="DefaultBackground">
		<definition>
			<control type="videowindow">
				<depth>DepthBackground</depth>
				<include>FullScreenDimensions</include>
				<animation effect="slide" end="3840,0" time="0" condition="Skin.HasSetting(background_showvideo)">Conditional</animation>
				<visible>Player.HasVideo + !Slideshow.IsActive + !String.IsEqual(Window(Home).Property(TrailerPlaying),439)</visible>
			</control>
			<control type="group">
				<include>FullScreenDimensions</include>
				<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
				<control type="group">
					<animation effect="fade" start="100" end="bg_alpha" time="0" condition="!Control.IsVisible(31111)">Conditional</animation>
					<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(fullscreenvideo) | Window.Previous(FullscreenGame) | Window.Previous(startup)">WindowOpen</animation>
					<include>ColoredBackgroundImages</include>
				</control>
				<control type="group" id="31111">
					<visible>Skin.HasSetting(show_fanart) + !Window.IsVisible(home) + !$EXP[infodialog_active]</visible>
					<visible>![Player.HasVideo + !Skin.HasSetting(background_showvideo)] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
					<depth>DepthBackground</depth>
					<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
					<animation effect="fade" time="400">VisibleChange</animation>
					<control type="image" id="32112">
						<include>FullScreenDimensions</include>
						<aspectratio aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="$VAR[Background_Opacity]">$VAR[MediaFanartVar]</texture>
						<visible>!Control.IsVisible(502) + !Control.IsVisible(510)</visible>
					</control>
					<control type="image">
						<left>-3</left>
						<top>0</top>
						<right>1193</right>
						<height>100%</height>
						<aspectratio aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<include>OpenClose_Left</include>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="$VAR[Background_Opacity]">$VAR[PosterVar]</texture>
						<visible>Control.IsVisible(502)</visible>
					</control>
					<control type="image">
						<include>FullScreenDimensions</include>
						<aspectratio aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<include>OpenClose_Left</include>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="$VAR[Background_Opacity]">$VAR[AddonsFanartVar]</texture>
						<visible>Window.IsActive(addoninformation) | Window.IsActive(addonbrowser) | Window.IsActive(1100)</visible>
					</control>
				</control>
			</control>
			<control type="visualisation">
				<include>FullScreenDimensions</include>
				<visible>!Slideshow.IsActive</visible>
				<visible>Player.HasAudio + Visualisation.Enabled</visible>
				<visible>!Skin.HasSetting(background_showvisualisation) + !String.Contains(Player.Filenameandpath,theme.mp3)</visible>
			</control>
		</definition>
	</include>
	<include name="BottomBar">
		<param name="info_visible">False</param>
		<definition>
			<control type="group">
				<animation effect="slide" end="0,112" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<depth>DepthBars</depth>
				<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(visualisation) | Window.Next(screencalibration)">WindowClose</animation>
				<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(fullscreenvideo) | Window.Previous(startup) | Window.Previous(visualisation)">WindowOpen</animation>
				<bottom>0</bottom>
				<control type="image">
					<left>0</left>
					<bottom>0</bottom>
					<width>110%</width>
					<height>135</height>
					<texture flipy="true" colordiffuse="$VAR[Bars_Opacity]">frame/osdfade.png</texture>
				</control>
				<control type="group">
					<visible>$PARAM[info_visible]</visible>
					<visible>!System.HasActiveModalDialog</visible>
					<visible>!Skin.HasSetting(touchmode)</visible>
					<animation effect="fade" time="400">VisibleChange</animation>
					<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
					<control type="button">
						<bottom>10</bottom>
						<left>12</left>
						<width>36</width>
						<height>36</height>
						<animation effect="rotate" end="-90" center="auto" time="200" reversible="true" condition="[Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(510)] + !Window.IsActive(tvguide) + !Window.IsActive(tvchannels)">Conditional</animation>
						<texturefocus colordiffuse="$VAR[SkinColorVar]">frame/menu-nofo.png</texturefocus>
						<texturenofocus>frame/menu-nofo.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(9000)</onclick>
						<visible>!Control.IsVisible(6160)</visible>
						<visible>!Skin.HasSetting(KioskMode)</visible>
					</control>
					<control type="button">
						<bottom>12</bottom>
						<left>200</left>
						<width>32</width>
						<height>32</height>
						<texturefocus colordiffuse="$VAR[SkinColorVar]">frame/menu-alphabet-right.png</texturefocus>
						<texturenofocus>frame/menu-alphabet-right.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(8000)</onclick>
						<visible>!Control.IsVisible(6160) + !Window.IsVisible(script-globalsearch.xml)</visible>
						<visible>[Control.HasFocus(531) | Control.HasFocus(5199) | Control.HasFocus(50600) | Control.HasFocus(502600)] + ![Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(510)]</visible>
						<visible>$EXP[isJump2Letter]</visible>
						<animation effect="slide" end="-186,0" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					</control>
					<control type="button">
						<bottom>12</bottom>
						<left>200</left>
						<width>37</width>
						<height>32</height>
						<texturefocus colordiffuse="$VAR[SkinColorVar]">frame/menu-alphabet-down.png</texturefocus>
						<texturenofocus>frame/menu-alphabet-down.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(8000)</onclick>
						<visible>!Control.IsVisible(6160)</visible>
						<visible>[Control.HasFocus(531) | Control.HasFocus(5199)] + [Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(510)]</visible>
						<visible>$EXP[isJump2Letter]</visible>
						<animation effect="slide" end="-184,0" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					</control>
					<control type="button" id="6160">
						<bottom>10</bottom>
						<left>12</left>
						<width>36</width>
						<height>36</height>
						<texturefocus colordiffuse="$VAR[SkinColorVar]">frame/menu-nofo.png</texturefocus>
						<texturenofocus>frame/menu-nofo.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(9000)</onclick>
						<visible>Window.IsActive(tvguide) | Window.IsActive(tvchannels)</visible>
						<visible>!Skin.HasSetting(KioskMode)</visible>
					</control>
					<control type="button">
						<bottom>12</bottom>
						<left>55</left>
						<width>200</width>
						<height>36</height>
						<aligny>center</aligny>
						<font>font25_title</font>
						<label>$LOCALIZE[33063]</label>
						<onclick>SetFocus(9000)</onclick>
						<texturefocus />
						<texturenofocus />
						<visible>!Skin.HasSetting(KioskMode)</visible>
					</control>
					<control type="button" id="40165">
						<bottom>12</bottom>
						<left>240</left>
						<width>350</width>
						<height>36</height>
						<aligny>center</aligny>
						<font>font25_title</font>
						<label>$LOCALIZE[31365]</label>
						<onclick>SetFocus(8000)</onclick>
						<texturefocus />
						<texturenofocus />
						<visible>Control.HasFocus(531) | Control.HasFocus(5199) | Control.HasFocus(50600) | Control.HasFocus(502600)</visible>
						<animation effect="fade" time="200">VisibleChange</animation>
						<visible>$EXP[isJump2Letter] + !Window.IsVisible(script-globalsearch.xml)</visible>
						<animation effect="slide" end="-186,0" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					</control>
				</control>
				<include>TouchButtons</include>
			</control>
		</definition>
	</include>
	<include name="BottomBarTwoListInfo">
		<control type="group">
			<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<align>right</align>
				<bottom>0</bottom>
				<height>65</height>
				<itemgap>10</itemgap>
				<right>24</right>
				<width>1200</width>
				<control type="label">
					<width>auto</width>
					<height>48</height>
					<aligny>center</aligny>
					<align>right</align>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<label>$INFO[Container($PARAM[right_container_id]).CurrentItem,, / ]$INFO[Container($PARAM[right_container_id]).NumItems]</label>
				</control>
				<control type="image">
					<width>54</width>
					<height>44</height>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[SkinColorVar]">frame/item-count.png</texture>
				</control>
			</control>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<bottom>0</bottom>
				<height>65</height>
				<left>24</left>
				<width>1200</width>
				<itemgap>10</itemgap>
				<control type="image">
					<width>54</width>
					<height>44</height>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[SkinColorVar]">frame/item-count.png</texture>
				</control>
				<control type="label">
					<width>auto</width>
					<height>48</height>
					<aligny>center</aligny>
					<align>right</align>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<label>$INFO[Container($PARAM[left_container_id]).CurrentItem,, / ]$INFO[Container($PARAM[left_container_id]).NumItems]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="FullScreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>100%</width>
		<height>100%</height>
	</include>
	<include name="FocusableProgressBar">
		<param name="width">100%</param>
		<param name="onunfocus_id">200</param>
		<definition>
			<control type="progress">
				<animation effect="fade" end="0" time="200">WindowClose</animation>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>15</height>
				<info>Player.ProgressCache</info>
				<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
				<midtexture>colors/white50.png</midtexture>
				<animation effect="fade" start="100" end="80" time="0" condition="true">Conditional</animation>
			</control>
			<control type="progress" id="23">
				<animation effect="fade" end="0" time="200">WindowClose</animation>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>15</height>
				<info>Player.Progress</info>
				<texturebg border="3" colordiffuse="80FFFFFF">colors/white50.png</texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]">colors/white.png</midtexture>
			</control>
			<control type="button" id="87">
				<include>HiddenObject</include>
				<onup>$PARAM[onunfocus_id]</onup>
				<onunfocus condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onunfocus>
				<ondown>$PARAM[onunfocus_id]</ondown>
				<onright condition="!Player.Forwarding32x">PlayerControl(Forward)</onright>
				<onleft condition="!Player.Rewinding32x">PlayerControl(Rewind)</onleft>
				<visible>Player.SeekEnabled</visible>
				<onclick condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onclick>
			</control>
			<control type="slider">
				<top>-5</top>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>25</height>
				<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_leftright.png</texturesliderbar>
				<textureslidernib>osd/progress/nub_leftright.png</textureslidernib>
				<textureslidernibfocus colordiffuse="$VAR[SkinColorVar]">osd/progress/nub_leftright.png</textureslidernibfocus>
				<info>Player.Progress</info>
				<action>seek</action>
				<visible>!Control.HasFocus(87) + Player.SeekEnabled</visible>
			</control>
			<control type="slider">
				<top>-5</top>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>25</height>
				<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_leftright.png</texturesliderbar>
				<textureslidernib colordiffuse="$VAR[SkinColorVar]">osd/progress/nub_leftright.png</textureslidernib>
				<textureslidernibfocus colordiffuse="$VAR[SkinColorVar]">osd/progress/nub_leftright.png</textureslidernibfocus>
				<info>Player.Progress</info>
				<action>seek</action>
				<visible>Control.HasFocus(87) + Player.SeekEnabled</visible>
			</control>
		</definition>
	</include>
	<include name="ContentPanel">
		<param name="width">500</param>
		<param name="left">-40</param>
		<param name="right"></param>
		<param name="top">-10%</param>
		<param name="height">120%</param>
		<param name="flipx">false</param>
		<param name="visible">true</param>
		<param name="colordiffuse">EDFFFFFF</param>
		<definition>
			<control type="image">
				<texture flipx="$PARAM[flipx]" colordiffuse="$PARAM[colordiffuse]">lists/panel.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<width>$PARAM[width]</width>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<top>$PARAM[top]</top>
				<height>$PARAM[height]</height>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<include name="TouchButtons">
		<control type="grouplist" id="700">
			<orientation>horizontal</orientation>
			<visible>Skin.HasSetting(touchmode)</visible>
			<visible>!Window.IsActive(home) + !Window.IsActive(filemanager)</visible>
			<animation effect="fade" start="0" end="100" time="400" condition="Window.Previous(home)">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(home)">WindowClose</animation>
			<itemgap>0</itemgap>
			<left>-8</left>
			<width>450</width>
			<height>110</height>
			<bottom>-4</bottom>
			<onup/>
			<ondown>9000</ondown>
			<onright>2000</onright>
			<align>justify</align>
			<usecontrolcoords>true</usecontrolcoords>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="SetFocus(9000)" />
				<param name="icon" value="icons/settings.png" />
				<param name="label" value="$LOCALIZE[10004]" />
				<param name="visible" value="Window.IsMedia" />
			</include>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="ActivateWindow(shutdownmenu)" />
				<param name="icon" value="icons/power.png" />
				<param name="label" value="$LOCALIZE[33060]" />
				<param name="visible" value="!Window.IsMedia" />
			</include>
			<control type="group">
				<width>120</width>
				<control type="button" id="26000">
					<top>0</top>
					<width>120</width>
					<height>120</height>
					<label/>
					<onclick>ActivateWindow(1103)</onclick>
					<texturefocus colordiffuse="$VAR[SkinColorVar]">buttons/roundbutton-fo.png</texturefocus>
					<texturenofocus />
				</control>
				<control type="image">
					<left>34</left>
					<top>34</top>
					<width>52</width>
					<height>52</height>
					<texture colordiffuse="grey">$VAR[VolumeIconVar]</texture>
					<visible>!Control.HasFocus(26000)</visible>
				</control>
				<control type="image">
					<left>34</left>
					<top>34</top>
					<width>52</width>
					<height>52</height>
					<texture>$VAR[VolumeIconVar]</texture>
					<visible>Control.HasFocus(26000)</visible>
				</control>
			</control>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="ActivateWindow(favouritesbrowser)" />
				<param name="icon" value="icons/favourites.png" />
				<param name="label" value="$LOCALIZE[10134]" />
			</include>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="FullScreen" />
				<param name="icon" value="icons/now-playing/fullscreen.png" />
				<param name="label" value="$LOCALIZE[10134]" />
				<param name="visible" value="Player.HasMedia" />
			</include>
		</control>
	</include>
	<include name="TouchBackButton">
		<control type="radiobutton" id="799">
			<left>-10</left>
			<top>-35</top>
			<width>120</width>
			<height>120</height>
			<align>center</align>
			<aligny>center</aligny>
			<onclick>Action(Back)</onclick>
			<animation effect="fade" start="0" end="100" time="400" condition="Window.Previous(home)">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(home)">WindowClose</animation>
			<texturefocus />
			<texturenofocus />
			<radioposx>30</radioposx>
			<radiowidth>60</radiowidth>
			<radioheight>60</radioheight>
			<textureradioonfocus>icons/back.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="grey">icons/back.png</textureradioonnofocus>
			<textureradioofffocus>icons/back.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="grey">icons/back.png</textureradiooffnofocus>
			<visible>Skin.HasSetting(touchmode) + !Window.IsActive(home)</visible>
		</control>
	</include>
	<include name="SettingsPanel">
		<itemlayout height="260" width="380">
			<control type="image">
				<left>-5</left>
				<width>390</width>
				<height>270</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image">
				<centerleft>50%</centerleft>
				<top>30</top>
				<width>240</width>
				<height>160</height>
				<texture>$INFO[ListItem.Icon]</texture>
				<align>center</align>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="label">
				<left>15</left>
				<top>190</top>
				<width>350</width>
				<height>400</height>
				<font>font25_narrow</font>
				<label>$INFO[ListItem.Label,[B],[/B]]</label>
				<align>center</align>
			</control>
		</itemlayout>
		<focusedlayout height="260" width="380">
			<control type="group">
				<depth>DepthContentPopout</depth>
				<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
					<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
					<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
				</animation>
				<control type="image">
					<left>-5</left>
					<width>390</width>
					<height>270</height>
					<texture>dialogs/dialog-bg-nobo.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
				</control>
				<control type="image">
					<top>-6</top>
					<left>-11</left>
					<width>402</width>
					<height>282</height>
					<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
				</control>
				<control type="image">
					<top>-6</top>
					<left>-11</left>
					<width>402</width>
					<height>282</height>
					<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
					<bordersize>20</bordersize>
					<visible>Skin.HasSetting(EnableGradientColor)</visible>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<top>30</top>
					<width>240</width>
					<height>160</height>
					<texture>$INFO[ListItem.Icon]</texture>
					<align>center</align>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="label">
					<left>15</left>
					<top>190</top>
					<width>350</width>
					<height>400</height>
					<font>font25_narrow</font>
					<label>$INFO[ListItem.Label,[B],[/B]]</label>
					<align>center</align>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="NextAiredPosterWidget">
		<definition>
			<control type="group" id="$PARAM[list_id]666">
				<left>20</left>
				<right>20</right>
				<centertop>50%</centertop>
				<height>300</height>
				<visible>$PARAM[visible]</visible>
				<control type="group">
					<visible>Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)</visible>
					<control type="textbox">
						<width>100%</width>
						<height>300</height>
						<label>$LOCALIZE[31463]</label>
						<align>center</align>
						<aligny>center</aligny>
						<font>font36_title</font>
					</control>
				</control>
			</control>
			<control type="panel" id="$PARAM[list_id]">
				<left>0</left>
				<top>135</top>
				<right>0</right>
				<height>493</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<onleft>9000</onleft>
				<onright/>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="310" height="486">
					<control type="group">
						<left>-2</left>
						<top>10</top>
						<include content="NextAiredPosterLayout">
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="486">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>-2</left>
						<top>10</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="NextAiredPosterLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
			</control>
		</definition>
	</include>
	<include name="NextAiredPosterLayout">
		<param name="focused">false</param>
		<param name="Container.Label"></param>
		<definition>
			<control type="image">
				<left>9</left>
				<top>-16</top>
				<width>302</width>
				<height>412</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
			</control>
			<control type="image">
				<left>9</left>
				<top>-16</top>
				<width>302</width>
				<height>412</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
			</control>
			<control type="image">
				<left>15</left>
				<top>-10</top>
				<width>290</width>
				<height>400</height>
				<texture background="true">$INFO[ListItem.Property(poster)]</texture>
				<aspectratio>stretch</aspectratio>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
			</control>
			<control type="image">
				<left>13</left>
				<top>-12</top>
				<width>294</width>
				<height>404</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(show_borders)</visible>
			</control>
			<control type="image">
				<left>15</left>
				<top>-10</top>
				<width>290</width>
				<height>400</height>
				<texture background="true">$INFO[ListItem.Property(poster)]</texture>
				<aspectratio>stretch</aspectratio>
				<bordersize>20</bordersize>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(show_borders)</visible>
			</control>
			<control type="image">
				<left>15</left>
				<top>-10</top>
				<width>290</width>
				<height>400</height>
				<texture background="true">$INFO[ListItem.Property(poster)]</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!$PARAM[focused]</visible>
				<visible>!Skin.HasSetting(show_borders)</visible>
			</control>
		</definition>
	</include>
	<include name="BusySpinner">
		<param name="outerSize">80</param>
		<param name="innerSize">50</param>
		<param name="outerSpeed">1000</param>
		<param name="innerSpeed">1000</param>
		<param name="outerMovement">-360</param>
		<param name="innerMovement">360</param>
		<param name="delay">0</param>
		<param name="innervisibility">true</param>
		<definition>
			<control type="group">
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>$PARAM[outerSize]</width>
					<height>$PARAM[outerSize]</height>
					<aspectratio>keep</aspectratio>
					<animation effect="rotate" end="$PARAM[outerMovement]" center="auto" time="$PARAM[outerSpeed]" delay="$PARAM[delay]" loop="true" reversible="false" condition="true">Conditional</animation>
					<texture colordiffuse="$VAR[SkinColorVar]">$VAR[SpinnerTypePictureVar]</texture>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>$PARAM[innerSize]</width>
					<height>$PARAM[innerSize]</height>
					<aspectratio>keep</aspectratio>
					<animation effect="rotate" end="$PARAM[innerMovement]" center="auto" time="$PARAM[innerSpeed]" delay="$PARAM[delay]" loop="true" reversible="false" condition="true">Conditional</animation>
					<texture colordiffuse="$VAR[SkinColorVar]">$VAR[SpinnerTypePictureVar]</texture>
					<visible>$PARAM[innerVisibility]</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="ItemHeight">
		<definition>
			<height>$PARAM[height]</height>
		</definition>
	</include>
	<include name="ItemWidth">
		<definition>
			<width>$PARAM[width]</width>
		</definition>
	</include>
	<include name="ItemLeft">
		<definition>
			<left>$PARAM[left]</left>
		</definition>
	</include>
	<include name="ItemRight">
		<definition>
			<right>$PARAM[right]</right>
		</definition>
	</include>
	<include name="ItemTop">
		<definition>
			<top>$PARAM[top]</top>
		</definition>
	</include>
	<include name="ItemBottom">
		<definition>
			<bottom>$PARAM[bottom]</bottom>
		</definition>
	</include>
	<include name="ItemMovement">
		<definition>
			<movement>$PARAM[movement]</movement>
		</definition>
	</include>
	<include name="ContextMenuPosition">
		<definition>
			<top>$PARAM[top]</top>
			<height>$PARAM[height]</height>
		</definition>
		<height max="$PARAM[height]">auto</height>
	</include>
	<include name="FocusPosition">
		<definition>
			<focusposition>$PARAM[focusposition]</focusposition>
		</definition>
	</include>
	<include name="SeekBarProgress">
		<control type="group">
			<visible>Player.SeekEnabled</visible>
			<control type="button" id="87">
				<include>HiddenObject</include>
				<onup>200</onup>
				<onunfocus condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onunfocus>
				<ondown>200</ondown>
				<onright condition="!Player.Paused">StepForward</onright>
				<onright condition="Player.Paused">PlayerControl(FrameAdvance(1))</onright>
				<onleft>StepBack</onleft>
				<onclick condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onclick>
			</control>
			<control type="group">
				<visible>![Player.Seeking | HasPerformedSeek(3)]</visible>
				<include>Visible_Fade</include>
				<control type="group">
					<visible>Control.HasFocus(87)</visible>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright.png</param>
							<param name="focuscolor">$VAR[SkinColorVar]</param>
						</include>
						<info>Player.Progress</info>
						<action>seek</action>
						<visible>!VideoPlayer.Content(LiveTV) + !Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright_fa.png</param>
							<param name="nib_height">24</param>
							<param name="nib_top">-7</param>
							<param name="focuscolor">$VAR[SkinColorVar]</param>
						</include>
						<info>Player.Progress</info>
						<action>seek</action>
						<visible>!VideoPlayer.Content(LiveTV) + Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright.png</param>
							<param name="focuscolor">$VAR[SkinColorVar]</param>
						</include>
						<info>PVR.TimeshiftProgressPlayPos</info>
						<action>pvr.seek</action>
						<visible>VideoPlayer.Content(LiveTV) + !Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright_fa.png</param>
							<param name="nib_height">24</param>
							<param name="nib_top">-7</param>
							<param name="focuscolor">$VAR[SkinColorVar]</param>
						</include>
						<info>PVR.TimeshiftProgressPlayPos</info>
						<action>pvr.seek</action>
						<visible>VideoPlayer.Content(LiveTV) + Player.FrameAdvance</visible>
					</control>
				</control>
				<control type="group">
					<visible>!Control.HasFocus(87)</visible>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright.png</param>
						</include>
						<info>Player.Progress</info>
						<action>seek</action>
						<visible>!VideoPlayer.Content(LiveTV) + !Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright_fa.png</param>
							<param name="nib_height">24</param>
							<param name="nib_top">-7</param>
						</include>
						<info>Player.Progress</info>
						<action>seek</action>
						<visible>!VideoPlayer.Content(LiveTV) + Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright.png</param>
						</include>
						<info>PVR.TimeshiftProgressPlayPos</info>
						<action>pvr.seek</action>
						<visible>VideoPlayer.Content(LiveTV) + !Player.FrameAdvance</visible>
					</control>
					<control type="slider">
						<include content="OSDSliderNib">
							<param name="nib_texture">osd/progress/nub_leftright_fa.png</param>
							<param name="nib_height">24</param>
							<param name="nib_top">-7</param>
						</include>
						<info>PVR.TimeshiftProgressPlayPos</info>
						<action>pvr.seek</action>
						<visible>VideoPlayer.Content(LiveTV) + Player.FrameAdvance</visible>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="SeekBar">
		<param name="left">30</param>
		<param name="top">100</param>
		<param name="bg_visibility">true</param>
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<right>30</right>
				<control type="image">
					<left>-20</left>
					<right>-20</right>
					<top>-50</top>
					<height>132</height>
					<texture colordiffuse="$VAR[SeekBarOpacityVar]">dialogs/dialog-bg-nobo.png</texture>
					<visible>$PARAM[bg_visibility] + !Pvr.IsTimeShift</visible>
				</control>
				<control type="image">
					<left>-20</left>
					<right>-20</right>
					<top>-100</top>
					<height>182</height>
					<texture colordiffuse="$VAR[SeekBarOpacityVar]">dialogs/dialog-bg-nobo.png</texture>
					<visible>$PARAM[bg_visibility] + Pvr.IsTimeShift</visible>
				</control>
				<control type="group" id="6000">
					<top>-5</top>
					<visible>PVR.IsTimeShift + !Player.ChannelPreviewActive</visible>
					<animation effect="fade" time="300">VisibleChange</animation>
					<control type="label">
						<bottom>158</bottom>
						<height>30</height>
						<font>font12</font>
						<align>right</align>
						<label>$INFO[PVR.TimeshiftProgressEndTime]</label>
					</control>
					<control type="label">
						<bottom>158</bottom>
						<height>30</height>
						<font>font12</font>
						<label>$INFO[PVR.TimeshiftProgressStartTime]</label>
					</control>
					<control type="label">
						<bottom>158</bottom>
						<height>30</height>
						<font>font12</font>
						<align>center</align>
						<label>$LOCALIZE[31026]$INFO[PVR.TimeshiftCur, : ,]$INFO[PVR.TimeshiftOffset, (-,)]</label>
					</control>
					<control type="progress">
						<top>-52</top>
						<height>8</height>
						<info>PVR.timeshiftprogress</info>
						<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
						<midtexture>colors/white50.png</midtexture>
						<visible>VideoPlayer.Content(livetv)</visible>
					</control>
				</control>
				<control type="progress">
					<height>8</height>
					<info>PVR.EpgEventProgress</info>
					<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
					<midtexture colordiffuse="$VAR[SkinColorVar]">colors/white.png</midtexture>
					<visible>VideoPlayer.HasEpg</visible>
				</control>
				<control type="progress">
					<height>8</height>
					<info>Player.ProgressCache</info>
					<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
					<midtexture>colors/white50.png</midtexture>
					<visible>!VideoPlayer.Content(livetv)</visible>
				</control>
				<control type="progress">
					<height>8</height>
					<info>Player.Progress</info>
					<texturebg border="3" colordiffuse="60FFFFFF">colors/white50.png</texturebg>
					<midtexture colordiffuse="$VAR[SkinColorVar]">colors/white.png</midtexture>
					<visible>!VideoPlayer.HasEpg + !Player.ChannelPreviewActive</visible>
				</control>
				<control type="ranges">
					<top>2</top>
					<height>6</height>
					<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
					<lefttexture>colors/white.png</lefttexture>
					<midtexture colordiffuse="FFFF0000">colors/red50.png</midtexture>
					<righttexture>colors/red.png</righttexture>
					<info>Player.Cuts</info>
				</control>
				<control type="ranges">
					<top>4</top>
					<height>4</height>
					<texturebg border="3" colordiffuse="00FFFFFF">colors/white.png</texturebg>
					<righttexture>colors/white.png</righttexture>
					<info>Player.Chapters</info>
				</control>
				<control type="ranges">
					<top>4</top>
					<height>4</height>
					<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
					<lefttexture>colors/white.png</lefttexture>
					<midtexture colordiffuse="FFFF0000">colors/white.png</midtexture>
					<righttexture>colors/white.png</righttexture>
					<info>Player.Editlist</info>
				</control>
				<control type="ranges">
					<top>4</top>
					<height>4</height>
					<texturebg border="3" colordiffuse="00FFFFFF">colors/white.png</texturebg>
					<righttexture>colors/white.png</righttexture>
					<info>Player.SceneMarkers</info>
				</control>
				<control type="slider" id="401">
					<left>5</left>
					<top>-5</top>
					<height>20</height>
					<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_bar.png</texturesliderbar>
					<textureslidernib colordiffuse="$VAR[SkinColorVar]">osd/progress/nub_bar.png</textureslidernib>
					<textureslidernibfocus colordiffuse="$VAR[SkinColorVar]">colors/white.png</textureslidernibfocus>
					<visible>Player.SeekEnabled + !VideoPlayer.HasEpg + !Player.ChannelPreviewActive + !Player.FrameAdvance</visible>
				</control>
				<control type="slider" id="402">
					<left>5</left>
					<top>-5</top>
					<right>30</right>
					<height>20</height>
					<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_bar.png</texturesliderbar>
					<textureslidernib colordiffuse="$VAR[SkinColorVar]">osd/progress/nub_bar.png</textureslidernib>
					<textureslidernibfocus colordiffuse="$VAR[SkinColorVar]">colors/white.png</textureslidernibfocus>
					<visible>Player.SeekEnabled + VideoPlayer.HasEpg + !Player.ChannelPreviewActive + !Player.FrameAdvance</visible>
				</control>
				<include content="SeekBarProgress" condition="![Window.IsVisible(videoosd) | Window.IsVisible(musicosd)]"/>
				<control type="group">
					<bottom>100</bottom>
					<height>30</height>
					<control type="label">
						<label>$VAR[SeekLabel]</label>
						<font>font12</font>
						<visible>![Integer.IsGreater(Playlist.Length,1) + Integer.IsGreater(Playlist.Position,0)] | Player.HasVideo</visible>
					</control>
					<control type="label">
						<right>30</right>
						<label>$VAR[SeekLabel] - [COLOR white]$INFO[Playlist.Position, $LOCALIZE[554] ]$INFO[Playlist.Length,/][/COLOR]</label>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<font>font12</font>
						<visible>Integer.IsGreater(Playlist.Length,1) + Integer.IsGreater(Playlist.Position,0) + !Player.HasVideo</visible>
					</control>
					<control type="label">
						<right>30</right>
						<label>$VAR[SeekTimeLabelVar]</label>
						<font>font12</font>
						<align>center</align>
						<visible>!Player.ChannelPreviewActive + ![Window.IsVisible(visualisation) + Player.IsInternetStream] | VideoPlayer.HasEpg</visible>
					</control>
					<control type="group">
						<visible>Skin.HasSetting(SmallOSDVideo) + !Window.IsVisible(visualisation)</visible>
						<control type="label">
							<label>$VAR[OsdMediaTimeVar]$INFO[Player.SeekTime, : ]$INFO[Player.Duration, / ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>[String.IsEqual(Skin.String(OsdMediaTime),0) | String.IsEmpty(Skin.String(OsdMediaTime))] + !VideoPlayer.HasEpg</visible>
						</control>
						<control type="label">
							<label>$VAR[OsdMediaTimeVar]$INFO[Player.TimeRemaining, : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>String.IsEqual(Skin.String(OsdMediaTime),1) + !VideoPlayer.HasEpg</visible>
						</control>
						<control type="label">
							<label>$VAR[OsdMediaTimeVar]$INFO[PVR.EpgEventSeekTime, : ]$INFO[PVR.EpgEventDuration, / ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>[String.IsEqual(Skin.String(OsdMediaTime),0) | String.IsEmpty(Skin.String(OsdMediaTime))] + VideoPlayer.HasEpg</visible>
						</control>
						<control type="label">
							<label>$VAR[OsdMediaTimeVar]$INFO[PVR.EpgEventRemainingTime, : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>String.IsEqual(Skin.String(OsdMediaTime),1) + VideoPlayer.HasEpg</visible>
						</control>
					</control>
					<control type="group">
						<visible>Window.IsVisible(visualisation)</visible>
						<control type="label">
							<label>$VAR[OsdMusicMediaTimeVar]$INFO[Player.SeekTime, : ]$INFO[Player.Duration, / ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>!String.IsEmpty(Player.Duration) + [String.IsEqual(Skin.String(OsdMusicMediaTime),0) | String.IsEmpty(Skin.String(OsdMusicMediaTime))]</visible>
						</control>
						<control type="label">
							<label>$INFO[Player.SeekTime,$LOCALIZE[31660] : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>String.IsEmpty(Player.Duration) + [String.IsEqual(Skin.String(OsdMusicMediaTime),0) | String.IsEmpty(Skin.String(OsdMusicMediaTime))]</visible>
						</control>
						<control type="label">
							<label>$VAR[OsdMusicMediaTimeVar]$INFO[Player.TimeRemaining, : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>!String.IsEmpty(Player.TimeRemaining) + String.IsEqual(Skin.String(OsdMusicMediaTime),1)</visible>
						</control>
						<control type="label">
							<label>$INFO[Player.SeekTime,$LOCALIZE[31660] : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>String.IsEmpty(Player.TimeRemaining) + String.IsEqual(Skin.String(OsdMusicMediaTime),1)</visible>
						</control>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(SmallOSDVideo) + !Window.IsVisible(visualisation)</visible>
						<control type="label">
							<label>$INFO[Player.TimeRemaining,$LOCALIZE[31134] : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>!VideoPlayer.HasEpg</visible>
						</control>
						<control type="label">
							<label>$INFO[PVR.EpgEventRemainingTime,$LOCALIZE[31134] : ]</label>
							<font>font12</font>
							<align>right</align>
							<visible>VideoPlayer.HasEpg</visible>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="OSDWithInfo">
		<control type="group">
			<visible>!Player.HasGame + !Window.IsVisible(1135) + ![Window.IsVisible(visualisation) + Skin.HasSetting(dim_screen)]</visible>
			<bottom>0</bottom>
			<height>310</height>
			<control type="group">
				<animation effect="slide" end="0,-120" time="50" tween="sine" easing="out" condition="Window.IsVisible(playerprocessinfo)">Conditional</animation>
				<animation effect="slide" end="0,100" time="50" tween="sine" easing="out" condition="Window.IsActive(fullscreeninfo)">Conditional</animation>
				<animation effect="slide" end="0,-180" time="50" tween="sine" easing="out" condition="Window.IsVisible(videobookmarks) | Window.IsVisible(1122) | Window.IsVisible(1138) | Window.IsVisible(1139) | [Window.IsActive(fullscreeninfo) + !String.IsEmpty(VideoPlayer.Plot)]">Conditional</animation>
				<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
				<control type="image">
					<left>0</left>
					<height>550</height>
					<width>100%</width>
					<bottom>-245</bottom>
					<texture>dialogs/dialog-bg-nobo.png</texture>
					<fadetime>100</fadetime>
				</control>
				<control type="image">
					<bottom>294</bottom>
					<left>440</left>
					<width>810</width>
					<height>150</height>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<texture background="true">$VAR[BannerPlayerArtVar]</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<visible>!Skin.HasSetting(show_artistbanner) + Window.IsVisible(visualisation)</visible>
				</control>
				<control type="image">
					<right>30</right>
					<bottom>305</bottom>
					<width>500</width>
					<height>281</height>
					<texture background="true">$VAR[PlayerInfoClearArtVar]</texture>
					<aspectratio align="center" aligny="bottom">keep</aspectratio>
					<visible>!Window.IsVisible(playerprocessinfo)</visible>
					<visible>!Player.Seeking</visible>
					<visible>!Player.HasPerformedSeek(3)</visible>
					<visible>[Player.HasAudio + !Skin.HasSetting(enable_artistclearart)] | [Player.HasVideo + !Skin.HasSetting(enable_playerclearart)]</visible>
					<fadetime>100</fadetime>
				</control>
			</control>
			<control type="textbox">
				<left>460</left>
				<top>123</top>
				<right>30</right>
				<height>190</height>
				<align>justify</align>
				<font>fontplot</font>
				<label>$INFO[VideoPlayer.Tagline,[B],[/B][CR]]$INFO[VideoPlayer.Plot]</label>
				<autoscroll delay="9000" time="5000" repeat="8000">true</autoscroll>
				<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
				<visible>Window.IsActive(fullscreeninfo) + !Window.IsVisible(videobookmarks) + !Window.IsVisible(1122) + !Window.IsVisible(1138) + !Window.IsVisible(1139) + !String.IsEmpty(VideoPlayer.Plot)</visible>
			</control>
			<include content="SeekBar">
				<param name="left">460</param>
				<param name="top">220</param>
				<param name="bg_visibility">false</param>
			</include>
			<control type="group">
				<visible>![VideoPlayer.HasMenu + System.HasMediadvd]</visible>
				<control type="group">
					<description>RotatingCD/DVD/BluRay for all media</description>
					<left>50</left>
					<width>360</width>
					<height>360</height>
					<include content="ItemBottom" condition="!Window.IsVisible(visualisation) + !Skin.HasSetting(show_discart)">
						<param name="bottom" value="435" />
					</include>
					<include content="ItemBottom" condition="Window.IsVisible(visualisation) + !Skin.HasSetting(show_disc) + Player.HasAudio">
						<param name="bottom" value="245" />
					</include>
					<include content="ItemBottom" condition="Window.IsVisible(visualisation) + Skin.HasSetting(show_disc) + Player.HasAudio">
						<param name="bottom" value="65" />
					</include>
					<control type="group">
						<visible>!Window.IsVisible(playerprocessinfo)</visible>
						<visible>!Player.Seeking</visible>
					    <visible>!Player.HasPerformedSeek(3)</visible>
						<visible>[Window.IsVisible(visualisation) + !Skin.HasSetting(show_disc)] | [!Window.IsVisible(visualisation) + !Skin.HasSetting(show_discart)]</visible>
						<visible>Skin.HasSetting(show_replacement) | !String.IsEmpty(Player.Art(discart)) | !String.IsEmpty(Player.Art(album.discart)) | !String.IsEmpty(Window(Home).Property(PVR.Artwork.discart))</visible>
						<animation type="WindowOpen">
                            <effect type="fade" start="0" end="100" time="600" delay="600"/>
                            <effect type="slide" end="0,0" start="0,220" tween="sine" easing="out" time="1200" delay="600"/>
                        </animation>
						<animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="Player.Playing + [Player.HasVideo + !Skin.HasSetting(show_discart)] | [Player.HasAudio + !Skin.HasSetting(show_disc)]">Conditional</animation>
						<control type="image" id="4393">
							<aligny>top</aligny>
							<aspectratio align="left">keep</aspectratio>
							<texture background="true" diffuse="overlays/cdart_mask.png">$VAR[PlayerInfoDiscArtVar]</texture>
						</control>
						<control type="label">
							<left>70</left>
							<bottom>247</bottom>
							<width>218</width>
							<height>73</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>font10</font>
							<label>$VAR[MusicPlayerDiscTitleVar]</label>
							<textcolor>$VAR[SkinColorVar]</textcolor>
							<wrapmultiline>true</wrapmultiline>
							<visible>String.IsEqual(Control.GetLabel(4393),osd/cd.png)</visible>
						</control>
						<control type="label">
							<left>70</left>
							<bottom>41</bottom>
							<width>218</width>
							<height>73</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>font10</font>
							<label>$VAR[MusicPlayerDiscAlbumVar]</label>
							<textcolor>black</textcolor>
							<wrapmultiline>true</wrapmultiline>
							<visible>String.IsEqual(Control.GetLabel(4393),osd/cd.png)</visible>
						</control>
					</control>
				</control>
				<control type="group">
					<depth>DepthOSD+</depth>
					<left>30</left>
					<visible>!Window.IsVisible(visualisation) + !Pvr.IsPlayingRadio</visible>
					<control type="image">
						<width>400</width>
						<height>620</height>
						<bottom>25</bottom>
						<aspectratio aligny="bottom">keep</aspectratio>
						<texture background="true" fallback="DefaultVideoCover.png">$VAR[NowPlayingPosterVar]</texture>
					</control>
					<include condition="!Player.IsInternetStream + [Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)]">VideoPlayerRatingCircle</include>
				</control>
				<control type="group">
					<description>audio disc cover</description>
					<depth>DepthOSD+</depth>
					<left>30</left>
					<bottom>25</bottom>
					<width>400</width>
					<height>400</height>
					<visible>Window.IsVisible(visualisation) + !Pvr.IsPlayingRadio + !Player.IsInternetStream</visible>
					<control type="image" id="4397">
						<aspectratio aligny="bottom" align="center">keep</aspectratio>
						<texture background="true" fallback="dialogs/defaultcdcover.png">$VAR[MusicPlayerCover]</texture>
					</control>
					<control type="label">
						<left>40</left>
						<right>30</right>
						<align>center</align>
						<aligny>top</aligny>
						<top>225</top>
						<font>font10</font>
						<textcolor>grey</textcolor>
						<wrapmultiline>true</wrapmultiline>
						<label>$VAR[MusicPlayerDiscAlbumVar]</label>
						<visible>String.IsEqual(Control.GetLabel(4397),dialogs/defaultcdcover.png)</visible>
					</control>
				</control>
				<control type="group">
					<visible>[VideoPlayer.Content(LiveTV) + Pvr.IsPlayingRadio] | [Window.IsVisible(visualisation) + Player.IsInternetStream]</visible>
					<control type="image" id="4392">
						<description>Cover Live TV, RDS Radio, Stream (Addon)</description>
						<depth>DepthOSD+</depth>
						<left>28</left>
						<bottom>23</bottom>
						<width>404</width>
						<height>404</height>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture background="true" fallback="DefaultAudio.png">$VAR[RadioPlayerCover]</texture>
						<bordertexture border="2" colordiffuse="$VAR[BorderColorVar]">colors/white.png</bordertexture>
						<bordersize>2</bordersize>
						<visible>Skin.HasSetting(show_borders) + Skin.HasSetting(stationlogo_border)</visible>
					</control>
					<control type="image">
						<depth>DepthOSD</depth>
						<left>28</left>
						<bottom>23</bottom>
						<width>404</width>
						<height>404</height>
						<texture colordiffuse="$VAR[PvrIconBGVar]">colors/white.png</texture>
						<visible>Skin.HasSetting(EnablePvrIconBG) + PVR.IsPlayingRadio</visible>
					</control>
					<control type="image" id="4392">
						<depth>DepthOSD+</depth>
						<left>30</left>
						<bottom>25</bottom>
						<width>400</width>
						<height>400</height>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture background="true" fallback="DefaultAudio.png">$VAR[RadioPlayerCover]</texture>
						<visible>![Skin.HasSetting(show_borders) + Skin.HasSetting(stationlogo_border)]</visible>
					</control>
				</control>
				<include content="BusyPvrArtworkSpinner">
					<param name="top" value="80" />
					<param name="left" value="190" />
				</include>
				<control type="group">
					<height>151</height>
					<right>30</right>
					<bottom>157</bottom>
					<visible>Window.IsVisible(visualisation) + !Pvr.IsPlayingRadio</visible>
					<control type="image">
						<top>8</top>
						<right>0</right>
						<width>151</width>
						<height>151</height>
						<aspectratio aligny="bottom">keep</aspectratio>
						<texture background="true" border="2" fallback="DefaultAudio.png">$VAR[CoverPlayerArtVar]</texture>
						<bordertexture>dialogs/back.png</bordertexture>
						<bordersize>2</bordersize>
						<visible>!String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					</control>
					<control type="image">
						<right>155</right>
						<top>56</top>
						<width>16</width>
						<height>18</height>
						<texture colordiffuse="$VAR[SkinColorVar]">osd/arrow.png</texture>
						<visible>!String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					</control>
					<control type="label">
						<top>7</top>
						<right>177</right>
						<width>526</width>
						<align>right</align>
						<height>38</height>
						<label>[B][UPPERCASE]$LOCALIZE[31290][/UPPERCASE][/B]</label>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<font>font12</font>
						<aligny>center</aligny>
						<scroll>true</scroll>
						<visible>!String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					</control>
					<control type="label">
						<top>44.5</top>
						<right>177</right>
						<width>526</width>
						<align>right</align>
						<height>38</height>
						<label>[COLOR white]$INFO[MusicPlayer.Offset(1).TrackNumber,,. ]$INFO[MusicPlayer.Offset(1).Title][/COLOR]</label>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<font>font12</font>
						<aligny>center</aligny>
						<scroll>true</scroll>
						<visible>!String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					</control>
					<control type="label">
						<top>82</top>
						<right>177</right>
						<width>526</width>
						<align>right</align>
						<height>38</height>
						<label>[COLOR white]$INFO[MusicPlayer.Offset(2).TrackNumber,,. ]$INFO[MusicPlayer.Offset(2).Title][/COLOR]</label>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<font>font12</font>
						<aligny>center</aligny>
						<scroll>true</scroll>
						<visible>!String.IsEmpty(MusicPlayer.Offset(2).Title)</visible>
					</control>
					<control type="label">
						<top>120</top>
						<right>177</right>
						<width>340</width>
						<align>right</align>
						<height>38</height>
						<label>[COLOR white]$INFO[MusicPlayer.Offset(3).TrackNumber,,. ]$INFO[MusicPlayer.Offset(3).Title][/COLOR]</label>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<font>font12</font>
						<aligny>center</aligny>
						<scroll>true</scroll>
						<visible>!String.IsEmpty(MusicPlayer.Offset(3).Title)</visible>
					</control>
				</control>
				<control type="label">
					<left>460</left>
					<bottom>270</bottom>
					<right>30</right>
					<height>30</height>
					<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[MusicPlayer.Title]</label>
					<scroll>true</scroll>
					<font>font37_bold</font>
					<scroll>true</scroll>
					<textcolor>$VAR[SkinColorVar]</textcolor>
					<visible>Window.IsVisible(visualisation) + String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
				</control>
				<control type="label">
					<left>460</left>
					<bottom>270</bottom>
					<right>755</right>
					<height>30</height>
					<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[MusicPlayer.Title]</label>
					<scroll>true</scroll>
					<font>font37_bold</font>
					<scroll>true</scroll>
					<textcolor>$VAR[SkinColorVar]</textcolor>
					<visible>Window.IsVisible(visualisation) + !String.IsEmpty(MusicPlayer.Offset(1).Title)</visible>
					<animation effect="slide" end="0,-180" time="50" tween="sine" easing="out" condition="Window.IsVisible(1138) | [Window.IsActive(fullscreeninfo) + !String.IsEmpty(VideoPlayer.Plot)]">Conditional</animation>
					<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
				</control>
				<control type="group">
					<visible>!Window.IsVisible(playerprocessinfo) + !Window.IsVisible(videobookmarks) + !Window.IsVisible(1122) + !Window.IsVisible(1139)</visible>
					<control type="label">
						<left>460</left>
						<bottom>270</bottom>
						<right>30</right>
						<height>30</height>
						<scroll>true</scroll>
						<font>font37_bold</font>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<label>$VAR[OsdMainLabelVar]</label>
						<animation effect="slide" end="0,-180" time="50" tween="sine" easing="out" condition="Window.IsVisible(1138) | [Window.IsActive(fullscreeninfo) + !String.IsEmpty(VideoPlayer.Plot)]">Conditional</animation>
						<animation effect="slide" end="0,40" time="0" condition="!VideoPlayer.Content(LiveTV) + [[VideoPlayer.Content(files) + !String.StartsWith(Player.Filenameandpath,http)] | String.Contains(Player.Art(thumb),ytimg)] + !Window.IsVisible(1138) + ![Window.IsActive(fullscreeninfo) + !String.IsEmpty(VideoPlayer.Plot)]">Conditional</animation>
						<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
					</control>
					<control type="label">
						<left>460</left>
						<bottom>210</bottom>
						<right>745</right>
						<height>30</height>
						<scroll>true</scroll>
						<font>font12</font>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<animation effect="fade" time="200">VisibleChange</animation>
						<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
						<label>$VAR[OsdGenreLabelVar]</label>
					</control>
					<control type="label">
						<left>1190</left>
						<bottom>210</bottom>
						<right>30</right>
						<height>30</height>
						<align>right</align>
						<scroll>true</scroll>
						<font>font12</font>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<animation effect="fade" time="200">VisibleChange</animation>
						<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
						<label>$VAR[OsdMixedLabelVar]</label>
					</control>
					<control type="group">
						<visible>!Player.ChannelPreviewActive</visible>
						<animation effect="slide" end="0,-45" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
						<control type="grouplist">
							<left>460</left>
							<bottom>145</bottom>
							<right>400</right>
							<height>50</height>
							<align>left</align>
							<orientation>horizontal</orientation>
							<itemgap>3</itemgap>
							<include content="MediaFlag">
								<param name="texture" value="flags/hdtv.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,hdtv) | String.Contains(Player.Filenameandpath,pdtv) | String.Contains(Player.Filenameandpath,hdtvrip) | String.Contains(Player.Filenameandpath,tvrip)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/vhs.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,vhs) | String.Contains(Player.Filenameandpath,vhsrip)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/hddvd.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,hddvd)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/webdl.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/dvd.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,dvd)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/bluray.png" />
								<param name="width" value="58" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$VAR[VideoPlayer3DFlagVar]" />
								<param name="fallback" value="flags/videoresolution/fallback.png" />
								<param name="width" value="58" />
								<param name="visible" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$INFO[VideoPlayer.VideoCodec,flags/videocodec/,.png]" />
								<param name="fallback" value="flags/videocodec/fallback.png" />
								<param name="width" value="104" />
								<param name="visible" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$INFO[VideoPlayer.HdrType,flags/videoresolution/,.png]" />
								<param name="visible" value="[String.Contains(VideoPlayer.HdrType,hdr) | String.Contains(VideoPlayer.HdrType,hlg)] + !String.Contains(Player.Filenameandpath,.hdrplus.) + !Window.IsVisible(visualisation)" />
								<param name="width" value="58" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="flags/videoresolution/hdrplus.png" />
								<param name="visible" value="String.Contains(Player.Filenameandpath,.hdrplus.) + !Window.IsVisible(visualisation)" />
								<param name="width" value="92" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$INFO[VideoPlayer.HdrType,flags/videoresolution/,.png]" />
								<param name="visible" value="String.IsEqual(VideoPlayer.HdrType,dolbyvision) + !Window.IsVisible(visualisation)" />
								<param name="width" value="94" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]" />
								<param name="fallback" value="flags/aspectratio/fallback.png" />
								<param name="width" value="86" />
								<param name="visible" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="155" />
								<param name="label_width" value="100" />
								<param name="label_left" value="7" />
								<param name="label" value="$INFO[Player.Process(VideoFPS)]" />
								<param name="texture" value="flags/fps.png" />
								<param name="visible" value="!String.IsEmpty(Player.Process(VideoFPS)) + Integer.IsGreater(Player.Process(VideoFPS),0)" />
								<param name="visible2" value="!Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$VAR[VideoPlayerAudioCodecFlagVar]" />
								<param name="fallback" value="flags/audiocodec/fallback.png" />
								<param name="width" value="104" />
							</include>
							<include content="MediaFlag">
								<param name="texture" value="$INFO[VideoPlayer.AudioChannels,flags/audiochannel/,.png]" />
								<param name="fallback" value="flags/audiochannel/fallback.png" />
								<param name="width" value="104" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="180" />
								<param name="label_width" value="176" />
								<param name="label_left" value="2" />
								<param name="label" value="$INFO[MusicPlayer.SampleRate,, kHz]" />
								<param name="texture" value="flags/cadre3.png" />
								<param name="visible" value="!String.IsEmpty(MusicPlayer.Samplerate) + $EXP[isLossless] + Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="155" />
								<param name="label_width" value="151" />
								<param name="label_left" value="2" />
								<param name="label" value="$INFO[MusicPlayer.BitRate,, kbps]" />
								<param name="texture" value="flags/cadre.png" />
								<param name="visible" value="!String.IsEmpty(MusicPlayer.Samplerate) + $EXP[isLossless] + Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="120" />
								<param name="label_width" value="116" />
								<param name="label_left" value="2" />
								<param name="label" value="$INFO[MusicPlayer.BitsPerSample,, bits]" />
								<param name="texture" value="flags/cadre4.png" />
								<param name="visible" value="!String.IsEmpty(MusicPlayer.BitsPerSample) + Window.IsVisible(visualisation)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="120" />
								<param name="label_width" value="116" />
								<param name="label_left" value="2" />
								<param name="label" value="RDS" />
								<param name="texture" value="flags/cadre4.png" />
								<param name="visible" value="!String.IsEmpty(RDS.HasRDS)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="163" />
								<param name="texture" value="$INFO[MusicPlayer.UserRating,flags/starrating/,.png]" />
								<param name="visible" value="Window.IsVisible(visualisation) + !String.IsEmpty(MusicPlayer.UserRating)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="5" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="104" />
								<param name="label_width" value="64" />
								<param name="label_left" value="40" />
								<param name="label" value="$INFO[VideoPlayer.AudioLanguage]" />
								<param name="texture" value="flags/language.png" />
								<param name="visible" value="!String.IsEmpty(VideoPlayer.AudioLanguage)" />
							</include>
							<include content="MediaFlag">
								<param name="width" value="104" />
								<param name="label_width" value="64" />
								<param name="label_left" value="40" />
								<param name="label" value="$INFO[VideoPlayer.SubtitlesLanguage]" />
								<param name="texture" value="flags/st_language.png" />
								<param name="visible" value="!String.IsEmpty(VideoPlayer.SubtitlesLanguage) + VideoPlayer.SubtitlesEnabled" />
							</include>
						</control>
						<include content="MediaFlagPvrOsd">
							<param name="bottom" value="145"/>
							<param name="visible" value="VideoPlayer.Content(livetv) + !Player.ChannelPreviewActive"/>
						</include>
					</control>
				</control>
				<!-- Music OSD -->
				<control type="label">
					<left>460</left>
					<bottom>210</bottom>
					<right>30</right>
					<height>30</height>
					<label>$INFO[MusicPlayer.Artist,[COLOR white][B],[/B][/COLOR]]$INFO[MusicPlayer.Album,[B] - [/B][COLOR white],[/COLOR]]$INFO[MusicPlayer.Year, [COLOR white](,)[/COLOR]]</label>
					<font>font12</font>
					<textcolor>$VAR[SkinColorVar]</textcolor>
					<visible>Window.IsVisible(visualisation) + String.IsEmpty(MusicPlayer.Offset(1).Title) + !Pvr.IsPlayingRadio</visible>
				</control>
				<control type="label">
					<left>460</left>
					<bottom>210</bottom>
					<right>755</right>
					<height>30</height>
					<width>36.5%</width>
					<label>$INFO[MusicPlayer.Artist,[COLOR white][B],[/B][/COLOR]]$INFO[MusicPlayer.Album,[B] - [/B][COLOR white],[/COLOR]]$INFO[MusicPlayer.Year, [COLOR white](,)[/COLOR]]</label>
					<font>font12</font>
					<textcolor>$VAR[SkinColorVar]</textcolor>
					<scroll>true</scroll>
					<visible>Window.IsVisible(visualisation) + !String.IsEmpty(MusicPlayer.Offset(1).Title) + !Pvr.IsPlayingRadio</visible>
				</control>
			</control>
		</control>
		<control type="image">
			<depth>DepthOSD+</depth>
			<left>30</left>
			<bottom>25</bottom>
			<width>400</width>
			<height>400</height>
			<aspectratio aligny="bottom">keep</aspectratio>
			<texture background="true">special://skin/extras/home-images/disc.jpg</texture>
			<visible>[VideoPlayer.HasMenu + System.HasMediadvd]</visible>
		</control>
	</include>
	<include name="OSDWithoutInfo">
		<control type="group">
			<visible>!Player.HasGame</visible>
			<bottom>0</bottom>
			<height>190</height>
			<control type="group">
				<animation effect="slide" end="0,-290" time="0" condition="Window.IsVisible(1138)">Conditional</animation>
				<animation effect="slide" end="0,-340" time="50" tween="sine" easing="out" condition="Window.IsVisible(videobookmarks) | Window.IsVisible(1122) | Window.IsVisible(1139)">Conditional</animation>
				<animation effect="slide" end="0,-280" time="50" tween="sine" easing="out" condition="Window.IsVisible(playerprocessinfo)">Conditional</animation>
				<animation effect="slide" end="0,-50" time="50" tween="sine" easing="out" condition="PVR.IsTimeShift + !Player.ChannelPreviewActive">Conditional</animation>
				<control type="image">
					<left>0</left>
					<bottom>-440</bottom>
					<width>100%</width>
					<height>590</height>
					<texture>dialogs/dialog-bg-nobo.png</texture>
				</control>
				<control type="image">
					<right>30</right>
					<bottom>150</bottom>
					<width>400</width>
					<height>225</height>
					<texture background="true">$VAR[PlayerInfoClearArtVar]</texture>
					<aspectratio align="center" aligny="bottom">keep</aspectratio>
					<visible>!Skin.HasSetting(enable_playerclearart)</visible>
				</control>
			</control>
			<include content="SeekBar">
				<param name="left">30</param>
				<param name="bg_visibility">false</param>
			</include>
		</control>
	</include>
    <include name="VideoCodecFlag">
		<param name="groupId"/>
		<param name="imageId"/>
		<param name="visible"/>
		<param name="texture"/>
		<definition>
			<control type="group" id="$PARAM[groupId]">
				<control type="image" id="$PARAM[imageId]">
					<left>30</left>
					<bottom>30</bottom>
					<height>91</height>
					<width>330</width>
					<visible>$PARAM[visible]</visible>
					<texture>$PARAM[texture]</texture>
				</control>
			</control>
		</definition>
	</include>
	<!--include name="AudioCodecFlag">
		<param name="groupId"/>
		<param name="imageId"/>
		<param name="visible"/>
		<param name="texture"/>
		<definition>
			<control type="group" id="$PARAM[groupId]">
				<control type="image" id="$PARAM[imageId]">
					<left>200</left>
					<bottom>30</bottom>
					<height>91</height>
					<width>200</width>
					<visible>$PARAM[visible]</visible>
					<texture>$PARAM[texture]</texture>
				</control>
			</control>
		</definition>
	</include-->
</includes>
