<?xml version="1.0" encoding="utf-8"?>
<window type="dialog" id="1109">
	<visible>[Window.IsActive(fullscreenvideo) + !Player.HasGame + ![!Pvr.IsPlayingTV + Window.IsActive(fullscreeninfo) + !Skin.HasSetting(ExtendedOSDInfo)]] | [Window.IsActive(visualisation) + !Skin.HasSetting(dim_screen)]</visible>
	<visible>Window.IsActive(seekbar) | Window.IsActive(1135) | Window.IsActive(1143) | Window.IsActive(pvrosdchannels) | Window.IsActive(pvrchannelguide)</visible>
	<depth>DepthOSD</depth>
	<include>Animation_TopSlide</include>
	<zorder>0</zorder>
	<controls>
		<control type="group">
			<animation effect="slide" end="0,-200" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
			<animation effect="slide" end="0,140" time="0" condition="Window.IsActive(fullscreenvideo) + Skin.HasSetting(ScopeMode) + String.IsEqual(Skin.String(scope_mode),$LOCALIZE[31476])">Conditional</animation>
			<animation effect="slide" end="0,135" time="0" condition="Window.IsActive(fullscreenvideo) + Skin.HasSetting(ScopeMode) + String.IsEqual(Skin.String(scope_mode),$LOCALIZE[31479])">Conditional</animation>
			<animation effect="slide" end="0,131.5" time="0" condition="Window.IsActive(fullscreenvideo) + Skin.HasSetting(ScopeMode) + String.IsEqual(Skin.String(scope_mode),$LOCALIZE[31475])">Conditional</animation>
			<animation effect="slide" end="0,21" time="0" condition="Window.IsActive(fullscreenvideo) + Skin.HasSetting(ScopeMode) + String.IsEqual(Skin.String(scope_mode),$LOCALIZE[31478])">Conditional</animation>
			<depth>DepthBars</depth>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>110%</width>
				<height>160</height>
				<texture colordiffuse="$VAR[Bars_Opacity]">frame/osdfade.png</texture>
			</control>
			<control type="image">
				<left>30</left>
				<top>20</top>
				<width>400</width>
				<height>125</height>
				<texture background="true">$VAR[PlayerInfoClearLogoVar]</texture>
				<aspectratio aligny="top" align="center">keep</aspectratio>
				<visible>!Window.IsVisible(playerprocessinfo)</visible>
				<visible>!Player.Seeking</visible>
				<visible>!Player.HasPerformedSeek(3)</visible>
				<visible>[!Window.IsVisible(MusicVisualisation.xml) + !Skin.HasSetting(enable_playerclearlogo) + ![[Window.IsActive(DialogPVRChannelsOSD.xml) | Window.IsActive(DialogPVRChannelGuide.xml)] + Skin.HasSetting(use_fullOsdList)]] | [Window.IsVisible(MusicVisualisation.xml) + !Skin.HasSetting(show_artistclearlogo)]</visible>
			</control>
			
			   <!-- Large logos OSD -->
				<control type="group" description="logos">
								<top>-35</top>
								<left>1625</left>
								<width>330</width>
								<height>240</height>
								<visible>Player.HasVideo + Skin.HasSetting(ShowBigLogosOSD)</visible>
                                <visible>!Player.Seeking</visible>
					            <visible>!Player.HasPerformedSeek(3)</visible>
					            <visible>!VideoPlayer.Content(musicvideos)</visible>
								<aspectratio aligny="bottom">keep</aspectratio>
								<animation effect="fade" start="0" end="100" delay="100" time="200">Visible</animation>
				<control type="image">
				    <left>-18</left>
				    <width>330</width>
				    <height>240</height>
					<texture>codecs/1cdbg.png</texture>
					<visible>!String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + ![String.Contains(Player.Process(amlogic.vs10.mode),sdr) + String.IsEqual(Player.Process(video.source.hdr.type.raw),0)] + ![String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + String.IsEqual(Player.Process(video.source.hdr.type.raw),3)]</visible>
				</control>
				<control type="image">
					<texture>codecs/cdbg.png</texture>
					<visible>![!String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + ![String.Contains(Player.Process(amlogic.vs10.mode),sdr) + String.IsEqual(Player.Process(video.source.hdr.type.raw),0)] + ![String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + String.IsEqual(Player.Process(video.source.hdr.type.raw),3)]]</visible>
				</control>

				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),0) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</visible>
					<visible>![!String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + ![String.Contains(Player.Process(amlogic.vs10.mode),sdr) + String.IsEqual(Player.Process(video.source.hdr.type.raw),0)] + ![String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + String.IsEqual(Player.Process(video.source.hdr.type.raw),3)]]</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/SDR.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.Contains(Player.Process(amlogic.vs10.mode),SDR)</visible>
                    <visible>![!String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + ![String.Contains(Player.Process(amlogic.vs10.mode),sdr) + String.IsEqual(Player.Process(video.source.hdr.type.raw),0)] + ![String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision) + String.IsEqual(Player.Process(video.source.hdr.type.raw),3)]]</visible>										
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/SDR.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>!Integer.IsEqual(Player.Process(video.source.hdr.type.raw),0) + String.Contains(Player.Process(amlogic.vs10.mode),sdr)</visible>
					<top>80</top>
					<left>-8</left>
					<control type="image">
						<width>260</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/SDRvs.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>!Integer.IsEqual(Player.Process(video.source.hdr.type.raw),1) + String.Contains(Player.Process(amlogic.vs10.mode),HDR10)</visible>
					<top>80</top>
					<left>-8</left>
					<control type="image">
						<width>260</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HDR10vs.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>!Integer.IsEqual(Player.Process(video.source.hdr.type.raw),3) + String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</visible>
					<top>80</top>
					<left>-8</left>
					<control type="image">
						<width>260</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/Dolby_Visionvs.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),1) + !String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</visible>
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),1) + !String.Contains(Player.Process(amlogic.vs10.mode),SDR)</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HDR10.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),2) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HDR10Plus.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.additional.hdr.type.raw),2) + Integer.IsEqual(System.GetInt(coreelec.amlogic.dolbyvision.mode),2)</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HDR10Plus.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),3) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass) + ![String.IsEqual(Player.Process(video.source.additional.hdr.type.raw),2) + Integer.IsEqual(System.GetInt(coreelec.amlogic.dolbyvision.mode),2)]</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HDR10.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),4) + String.Contains(Player.Process(amlogic.vs10.mode),Bypass)</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/HLG.png</texture>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Player.Process(video.source.hdr.type.raw),3) + String.Contains(Player.Process(amlogic.vs10.mode),Dolby Vision)</visible>
					<top>80</top>
					<left>90</left>
					<control type="image">
						<width>150</width>
						<height>56</height>
						<texture colordiffuse="FFc4ddf0">codecs/Dolby_Vision.png</texture>
					</control>
				</control>
								
								
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,pcm) | String.IsEqual(VideoPlayer.AudioCodec,pcm_bluray) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s16le) | String.IsEqual(VideoPlayer.AudioCodec,pcm_s24le)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/PCM.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dolbydigital) | String.IsEqual(VideoPlayer.AudioCodec,ac3)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/Dolby_Digital.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,eac3) + !String.Contains(Player.Process(audio.is.dolby.atmos), Atmos)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/Dolby_Digital_Plus.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>!String.IsEqual(VideoPlayer.AudioCodec,eac3) + String.Contains(Player.Process(audio.is.dolby.atmos), Atmos)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/Dolby_Atmos.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,truehd) + !String.Contains(Player.Process(audio.is.dolby.atmos), Atmos)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/Dolby_TrueHD.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>!String.IsEqual(VideoPlayer.AudioCodec,truehd) + String.Contains(Player.Process(audio.is.dolby.atmos), Atmos)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/Dolby_Atmos.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,mp3) | String.IsEqual(VideoPlayer.AudioCodec,mp3float)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/MP3.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dca)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/DTS.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) + !String.Contains(Player.Process(audio.dts.x.type), DTS) + !String.Contains(Player.Process(audio.dts.x.type), IMAX)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/DTS-HD-MA.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dtshd_hra)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/DTS-HD-HRA.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) + String.Contains(Player.Process(audio.dts.x.type), DTS)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/DTSX.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,dtshd_ma) + String.Contains(Player.Process(audio.dts.x.type), IMAX)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/IMAX.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,aac)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/AAC.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,flac)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/FLAC.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,aif)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/AIFF.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,alac)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/ALAC.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,ape)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/APE.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,cdda)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/CDDA.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,ogg)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/OGG.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,vorbis)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/VORBIS.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,wavpack)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/WAVP.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,wma) | String.IsEqual(VideoPlayer.AudioCodec,wmav2) | String.IsEqual(VideoPlayer.AudioCodec,wmapro)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/WMA.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,cook)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/COOK.png</texture>
									</control>
								</control>
								<control type="group">
									<visible>String.IsEqual(VideoPlayer.AudioCodec,opus)</visible>
									<top>170</top>
									<left>90</left>
									<control type="image">
										<width>150</width>
										<height>56</height>
										<texture colordiffuse="FFf0e8c4">codecs/OPUS.png</texture>
									</control>
								</control>
                            </control>
			
			
			<control type="group">
				<visible>!Window.IsVisible(Home)</visible>
				<animation effect="fade" time="200">VisibleChange</animation>
				<control type="label">
				<visible>Skin.HasSetting(show_clock) + !Skin.HasSetting(ShowBigLogosOSD)</visible>
					<font>font_clock</font>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<top>0</top>
					<right>30</right>
					<height>200</height>
					<width>600</width>
					<align>right</align>
					<label>[B]$INFO[System.Time][/B]</label>
				</control>
				<control type="label">
				<visible>Skin.HasSetting(show_clock) + Skin.HasSetting(ShowBigLogosOSD)</visible>
				<visible>!Player.Seeking</visible>
 				<visible>!Player.HasPerformedSeek(3)</visible>
					<font>font_clock2</font>
					<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
					<top>136</top>
					<right>240</right>
					<height>200</height>
					<width>600</width>
					<align>right</align>
					<label>[B]$INFO[System.Time][/B]</label>
				</control>
				<control type="grouplist">
				    <visible>Skin.HasSetting(show_clock) + !Skin.HasSetting(ShowBigLogosOSD)</visible>
					<right>24</right>
					<top>74</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<label>$INFO[Player.FinishTime,$LOCALIZE[31080] ]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<right>0</right>
						<height>100</height>
						<width>auto</width>
						<visible>!String.IsEmpty(Player.Duration)</visible>
						<visible>Player.HasMedia + ![Player.HasGame | VideoPlayer.HasEpg]</visible>
					</control>
					<control type="label">
						<label>$INFO[PVR.EpgEventFinishTime,$LOCALIZE[31080] ]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<height>100</height>
						<width>auto</width>
						<visible>VideoPlayer.HasEpg</visible>
 					</control>
					<control type="label">
						<height>36</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>| </label>
						<visible>Skin.HasSetting(show_inet) + !String.IsEmpty(System.InternetState) + [!String.IsEmpty(Player.Duration) | VideoPlayer.HasEpg]</visible>
					</control>
					<control type="image">
						<top>2</top>
						<left>0</left>
						<width>60</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="right">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
					</control>
                  </control>
	               <control type="grouplist">
				    <visible>Skin.HasSetting(show_clock) + Skin.HasSetting(ShowBigLogosOSD)</visible>
				    <visible>!Player.Seeking</visible>
 			    	<visible>!Player.HasPerformedSeek(3)</visible>
					<right>244</right>
					<top>109</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<label>$INFO[Player.FinishTime,$LOCALIZE[31080] ]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<right>0</right>
						<height>100</height>
						<width>auto</width>
						<visible>!String.IsEmpty(Player.Duration)</visible>
						<visible>Player.HasMedia + ![Player.HasGame | VideoPlayer.HasEpg]</visible>
					</control>
					<control type="label">
						<label>$INFO[PVR.EpgEventFinishTime,$LOCALIZE[31080] ]</label>
						<shadowcolor>$VAR[ShadowColorVar]</shadowcolor>
						<height>100</height>
						<width>auto</width>
						<visible>VideoPlayer.HasEpg</visible>
 					</control>
					<control type="label">
						<height>36</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>| </label>
						<visible>Skin.HasSetting(show_inet) + !String.IsEmpty(System.InternetState) + [!String.IsEmpty(Player.Duration) | VideoPlayer.HasEpg]</visible>
					</control>
					<control type="image">
						<top>2</top>
						<left>0</left>
						<width>60</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="right">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
					</control>					
                  </control>
                 <control type="grouplist">
                 	<visible>Skin.HasSetting(show_clock) + !Skin.HasSetting(ShowBigLogosOSD)</visible>
					<top>0</top>
					<right>30</right>
					<control type="image">
						<top>11</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_ok.png</texture>
						<visible>Skin.HasSetting(show_inet) + System.InternetState</visible>
					</control>
					<control type="image">
						<top>11</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_nok.png</texture>
						<visible>Skin.HasSetting(show_inet) + !System.InternetState + !String.IsEmpty(System.InternetState)</visible>
					</control>
					<include content="BatteryIndicator" condition="Skin.HasSetting(show_battery)">
						<param name="left">18</param>
						<param name="top">8</param>
						<param name="width">106</param>
					</include>
				</control>
          <control type="grouplist">
                 	<visible>Skin.HasSetting(show_clock) + Skin.HasSetting(ShowBigLogosOSD)</visible>
					<top>0</top>
					<right>254</right>
					<control type="image">
						<top>11</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_ok.png</texture>
						<visible>Skin.HasSetting(show_inet) + System.InternetState</visible>
					</control>
					<control type="image">
						<top>11</top>
						<width>30</width>
						<height>24</height>
						<aspectratio aligny="center">keep</aspectratio>
						<texture>icons/inet_nok.png</texture>
						<visible>Skin.HasSetting(show_inet) + !System.InternetState + !String.IsEmpty(System.InternetState)</visible>
					</control>
					<include content="BatteryIndicator" condition="Skin.HasSetting(show_battery)">
						<param name="left">18</param>
						<param name="top">8</param>
						<param name="width">106</param>
					</include>
				</control>
			</control>
		</control>
	</controls>
</window>
