<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_500_Wall">
		<control type="group">
			<include>MediaMenuAnimations</include>
			<include>OpenClose_Right</include>
			<left>21</left>
			<visible>Control.IsVisible(500)</visible>
			<include>Visible_Right</include>
			<animation condition="Control.HasFocus(500) | Control.HasFocus(532) | ControlGroup(9000).HasFocus">
				<effect type="fade" start="0" end="100" time="300" tween="cubic" easing="in"/>
				<effect type="slide" start="0,937" end="0,0" time="500" tween="cubic" easing="out" />
			</animation>
			<control type="panel" id="500">
				<height>100%</height>
				<onleft>532</onleft>
				<onright>532</onright>
				<onup condition="Integer.IsGreater(Container.NumPages,1)">500</onup>
				<onup condition="!Integer.IsGreater(Container.NumPages,1)">9000</onup>
				<ondown>500</ondown>
				<viewtype label="31102">icon</viewtype>
				<preloaditems>2</preloaditems>
				<pagecontrol>532</pagecontrol>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<!-- <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(artists) | Container.Content(albums) | Container.Content(musicvideos) | Container.Content(images) | Container.Content(videos) | Container.Content(games)</visible> -->
				<visible>
					[Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | 

					[Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | 

					[Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | 

					[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 

					[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 

					[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 

					[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 
					
					[Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | 

					[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 

					[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31102]) | String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]]
				</visible>
				<itemlayout height="387" width="268" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<top>105</top>
						<include>FlixMovieLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="387" width="268" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>105</top>
						<include content="FlixMovieLayout">
							<param name="focused" value="true" />
						</include>
						<include>WallTimer</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="301" width="300" condition="Container.Content(episodes) | Container.Content(videos) | [Container.Content(musicvideos) + !Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<top>110</top>
						<include content="FlixEpisodeLayout">
							<param name="label" value="$INFO[ListItem.Label]" />
							<param name="thumb_label" value="$INFO[ListItem.Label2]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="301" width="300" condition="Container.Content(episodes) | Container.Content(videos) | [Container.Content(musicvideos) + !Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>110</top>
						<include content="FlixEpisodeLayout">
							<param name="focused" value="true" />
							<param name="thumb_label" value="$INFO[ListItem.Label2]" />
						</include>
					</control>
				</focusedlayout> -->
				<itemlayout height="425" width="442" condition="Container.Content(images)">
					<control type="group">
						<left>40</left>
						<top>150</top>
						<include>FlixPictureLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="425" width="442" condition="Container.Content(images)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>40</left>
						<top>150</top>
						<include content="FlixPictureLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="401" width="300" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<top>150</top>
						<include content="FlixSquareLayout">
							<param name="fallback_image" value="DefaultMusicSongs.png" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="300" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<include content="FlixSquareLayout">
							<param name="fallback_image" value="DefaultMusicSongs.png" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
				<!-- <itemlayout height="401" width="300" condition="Container.Content(addons)">
					<control type="group">
						<top>150</top>
						<include content="FlixSquareLayout">
							<param name="fallback_image" value="DefaultAddon.png" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="300" condition="Container.Content(addons)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<include content="FlixSquareLayout">
							<param name="fallback_image" value="DefaultAddon.png" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
			</control>
			<control type="image">
				<left>-50</left>
				<bottom>0</bottom>
				<width>110%</width>
				<height>123</height>
				<texture flipy="true">frame/InfoBar.png</texture>
				<visible>!$EXP[sidebar_visible]</visible>
				<animation effect="fade" start="0" end="100" time="500">VisibleChange</animation>
			</control>
		</control>
	</include>
</includes>
