<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="FlixPictureLayout">
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<top>-10</top>
				<width>376</width>
				<height>380</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image">
				<top>-14</top>
				<left>-4</left>
				<width>384</width>
				<height>388</height>
				<texture colordiffuse="button_focus">colors/grey.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
			</control>
			<control type="image">
				<left>20</left>
				<top>10</top>
				<width>336</width>
				<height>300</height>
				<texture border="2" background="true">$VAR[FlixThumbVar]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="label">
				<left>20</left>
				<top>318</top>
				<width>338</width>
				<textoffsetx>20</textoffsetx>
				<height>20</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</definition>
	</include>

	<include name="FlixSquareLayout">
		<param name="fallback_icon">DefaultFolder.png</param>
		<param name="main_label">$INFO[ListItem.Artist]</param>
		<param name="sub_label">$INFO[ListItem.Title]</param>
		<param name="single_label">$INFO[ListItem.Label]</param>
		<param name="focused">false</param>
		<definition>
			<control type="group">
				<width>279</width>
				<height>279</height>
				<control type="group">
					<control type="image">
						<!-- <left>2</left> -->
						<texture colordiffuse="$VAR[FocusColorTheme]">masks/addons-glow.png</texture>
						<bordersize>-26</bordersize>
						<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + ControlGroup(400).HasFocus]</visible>
						<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
					</control>
					<include content="GlowPulse">
						<param name="pos_x" value="139.5"/>
						<param name="pos_y" value="139.5"/>
					</include>
				</control>
				<control type="image">
					<!-- <texture colordiffuse="b30a0b0b">masks/addons.png</texture> -->
					<texture colordiffuse="dialog_bg">masks/addons.png</texture>
					<!-- <bordersize>2</bordersize> -->
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + ControlGroup(400).HasFocus]</visible>
				</control>
				<control type="image">
					<texture colordiffuse="dialog_bg">masks/addons.png</texture>
					<bordersize>1</bordersize>
					<bordertexture colordiffuse="FF181818" border="10" infill="false">masks/addons-border.png</bordertexture>
					<visible>![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
					<visible>![$PARAM[focused] + ControlGroup(400).HasFocus]</visible>
					<!-- <visible>![$PARAM[focused] + Control.HasFocus(14100)]</visible> -->
				</control>
				<control type="image">
					<texture colordiffuse="artwork_dim" diffuse="masks/addons.png" fallback="$PARAM[fallback_icon]" background="true">$VAR[FlixThumbVar]</texture>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<centerleft>50%</centerleft>
					<top>285</top>
					<width>240</width>
					<height>75</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$PARAM[single_label]</label>
					<scroll>$PARAM[focused] + Control.HasFocus($PARAM[list_id])</scroll>
					<font>font25</font>
					<textcolor>unfocused_text</textcolor>
					<visible>!String.IsEqual(ListItem.DBType,album)</visible>
				</control>
				<control type="group">
					<visible>String.IsEqual(ListItem.DBType,album)</visible>
					<control type="label">
						<left>29</left>
						<top>256</top>
						<width>224</width>
						<label>$PARAM[sub_label]</label>
						<font>font10</font>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>$PARAM[focused]</scroll>
						<align>center</align>
					</control>
					<control type="label">
						<left>29</left>
						<top>284</top>
						<width>224</width>
						<label>$PARAM[main_label]</label>
						<font>font12</font>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>$PARAM[focused]</scroll>
						<align>center</align>
					</control>
				</control>
				<control type="group">
					<left>133</left>
					<top>2</top>
					<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating)">RatingCircle</include>
				</control>
			</control>
		</definition>
	</include>

	<include name="FlixMovieLayout">
		<param name="focused">false</param>
		<definition>
			<control type="group">
			<visible>String.IsEmpty(ListItem.Art(fanart))</visible>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<width>236</width>
					<height>354</height>
					<texture colordiffuse="$VAR[FocusColorTheme]">masks/poster.png</texture>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))] | [[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))]</visible>
					<visible>!Container($PARAM[list_id]).IsUpdating</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[FocusedTextColorVar]</textcolor>
					<autoscroll time="2000" delay="1000" repeat="2000">$PARAM[focused] + Control.HasFocus($PARAM[list_id])</autoscroll>
					<visible>!ListItem.IsParentFolder + [$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
				</control>
				<control type="textbox">
					<left>27</left>
					<top>237</top>
					<width>222</width>
					<height>120</height>
					<font>font25</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>unfocused_text</textcolor>
					<visible>!ListItem.IsParentFolder + [!$PARAM[focused] | [!Control.HasFocus($PARAM[list_id]) + ![Control.IsVisible(54) | Control.IsVisible(500)]]]</visible>
				</control>
				<control type="image">
					<left>1</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture diffuse="masks/addons.png" fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + $PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<left>2.5</left>
					<top>-7</top>
					<width>270</width>
					<height>270</height>
					<texture diffuse="masks/addons.png" colordiffuse="unfocused_text" fallback="DefaultMovies.png" background="true">$VAR[IconWallThumbVar]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>20</bordersize>
					<visible>!ListItem.IsParentFolder + ![$PARAM[focused] + Control.HasFocus($PARAM[list_id])]</visible>
				</control>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
				<control type="image">
					<top>-7</top>
					<left>5</left>
					<width>267</width>
					<height>388</height>
					<!-- <top>-19</top>
					<left>-7</left>
					<width>290</width>
					<height>411</height> -->
					<texture colordiffuse="$VAR[FocusColorTheme]">masks/poster-glow.png</texture>
					<bordersize>-10</bordersize>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] + String.IsEmpty(Skin.String(TrailerPlaying))] | [[$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + String.IsEmpty(Skin.String(TrailerPlaying))]</visible>
					<!-- <visible>!Container($PARAM[list_id]).IsUpdating</visible> -->
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
					<include content="GlowPulse">
						<param name="pos_x" value="133.5"/>
						<param name="pos_y" value="193.5"/>
					</include>
				</control>
				<control type="image">
					<left>20</left>
					<top>11</top>
					<width>236</width>
					<height>354</height>
					<texture colordiffuse="artwork_dim" diffuse="masks/poster.png" background="true">$VAR[FlixPosterVar]</texture>
					<bordersize>1</bordersize>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordertexture colordiffuse="$VAR[BorderColorVar]" border="20" infill="false">masks/poster-border.png</bordertexture>
					<!-- <animation condition="Container($PARAM[list_id]).IsUpdating + String.IsEmpty(Skin.String(TrailerPlaying))" effect="fade" time="700" start="50" end="100" pulse="true">Conditional</animation> -->
				</control>
				<control type="image">
					<left>21</left>
					<top>270</top>
					<width>94</width>
					<height>94</height>
					<texture>overlays/overlaybg.png</texture>
					<visible>Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0) | [!String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]</visible>
					<animation condition="
						[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + 
						[
								[String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] | 
								[[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode)] + !Integer.IsGreater(ListItem.Playcount,0) + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] |
								[!String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(ListItem.DBType,tvshow) + !String.IsEqual(ListItem.DBType,season) + !String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]
						]
						" effect="fade" time="0" start="100" end="0">Conditional</animation>
					</control>
				<control type="image">
					<left>21</left>
					<top>317</top>
					<width>234</width>
					<height>47</height>
					<texture colordiffuse="B3FFFFFF">overlays/overlayfade8.png</texture>
					<visible>!String.IsEmpty(ListItem.Art(poster))</visible>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + [!String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)] + !String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<control type="label">
					<left>-35</left>
					<top>329</top>
					<width>280</width>
					<label>[LIGHT]$INFO[ListItem.Property(WatchedProgress)]% watched[/LIGHT]</label>
					<font>font18_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | $PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + [$EXP[isMovie] | $EXP[isEpisode]] + [!String.IsEmpty(Container($PARAM[id]).ListItem.Property(WatchedProgress)) + !Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedProgress),0)]</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
			</control>
			<control type="group">
				<visible>$EXP[isTVShow] | $EXP[isSeason]</visible>
				<top>320</top>
				<control type="label">
					<left>77</left>
					<top>9</top>
					<width>169</width>
					<label>[LIGHT]$INFO[ListItem.Property(UnwatchedEpisodes),, remaining][/LIGHT]</label>
					<font>font18_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]]</visible>
					<visible>
						Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + 
						!String.IsEqual(ListItem.Property(WatchedEpisodes),ListItem.Property(TotalEpisodes)) + 
						!String.IsEqual(ListItem.Property(UnWatchedEpisodes),-1)
					</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control>
				<!-- <control type="image">
					<left>218</left>
					<top>11.2</top>
					<width>24</width>
					<height>24</height>
					<texture colordiffuse="artwork_dim">lists/played-total.png</texture>
					<visible>[$PARAM[focused] + Control.HasFocus($PARAM[list_id])] | [$PARAM[focused] + [Control.IsVisible(54) | Control.IsVisible(500)]] + !Integer.IsEqual(ListItem.Property(UnwatchedEpisodes),0)</visible>
					<include condition="$PARAM[focused]">Animation_FocusTextureFade</include>
				</control> -->
			</control>
			<control type="image">
				<left>31</left>
				<top>331</top>
				<width>23</width>
				<height>23</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
			</control>
			<!-- <control type="group">
				<left>188</left>
				<top>-8</top>
				<include content="RatingCircle" condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating)">
					<param name="left">-71.7</param>
					<param name="top">20</param>
					<param name="width">139</param>
					<param name="height">139</param>
					<param name="label-left">13</param>
					<param name="label-top">25</param>
					<param name="cornerdiffuse">overlays/overlaybg3.png</param>
				</include>
			</control> -->
		</definition>
	</include>

	<include name="View_54_Flix">
		<control type="group">
			<include>OpenClose_Right</include>
			<include>MediaMenuAnimations</include>
			<left>0</left>
			<top>530</top>
			<visible>Control.IsVisible(54)</visible>
			<control type="label">
				<left>50</left>
				<top>70</top>
				<width>1815</width>
				<label>$VAR[TrailerReadyVar]$VAR[ClockCrumbs]$VAR[BreadcrumbsVideoVar]$VAR[FlixCategory]$VAR[FlixCrumbsVar]</label>
				<font>font27</font>
				<textcolor>$VAR[MenuSelectorColor]</textcolor>
				<shadowcolor>text_shadow</shadowcolor>
				<align>left</align>
			</control>
			<control type="fixedlist" id="54">
				<left>0</left>
				<right>0</right>
				<height>100%</height>
				<onleft>54</onleft>
				<orientation>horizontal</orientation>
				<movement>6</movement>
				<onup>9000</onup>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),0)">5199</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),1)">Container.SetViewMode(500)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),2) + String.IsEmpty(Skin.String(TrailerPlaying))">Skin.SetString(TrailerPlaying, true)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),2) + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))">$VAR[AutoplayTrailerSource]</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),2) + Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),2) + Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</ondown>
				<ondown condition="[$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.MovieTV),3)">info</ondown>
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.Other),0)">5199</ondown>
				<!-- <ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.Other),1)">Container.SetViewMode(500)</ondown> -->
				<ondown condition="![$EXP[isMovie] | $EXP[isTVShow]] + String.IsEqual(Skin.String(OnDownSetting.Other),2)">info</ondown>
				<viewtype label="31101">icon</viewtype>
				<preloaditems>2</preloaditems>
				<pagecontrol>5199</pagecontrol>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<onback condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onback>
				<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
				<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
				<!-- <visible>Container.Content(artists) | Container.Content(albums) | Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | Container.Content(musicvideos) | Container.Content(images) | Container.Content(videos) | Container.Content(games)</visible> -->
				<visible>
					[Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | 
					
					[Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | 
					
					[Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | 
					
					[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | 
					
					[Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | 
					
					[Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | 
					
					[Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes.outside),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes.outside))]] | 
					
					[Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | 
					
					[Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | 
					
					[Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | 
					
					[Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31101]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]]
				</visible>
				<itemlayout width="263" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]">
					<control type="group">
						<left>33</left>
						<top>120</top>
						<include>FlixMovieLayout</include>
					</control>
				</itemlayout>
				<focusedlayout width="263" condition="Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | [Container.Content(episodes) + !String.StartsWith(Container.PluginCategory,Season)] | [Container.Content(musicvideos) + Skin.HasSetting(show_musicvideoposter)]" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>33</left>
						<top>120</top>
						<include content="FlixMovieLayout">
							<param name="focused" value="true" />
						</include>
						<include>VideoTrailerControl</include>
					</control>
				</focusedlayout>
				<!-- <itemlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<top>150</top>
						<left>40</left>
						<include>FlixSquareLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="410" width="310" condition="Container.Content(artists) | Container.Content(albums)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>150</top>
						<left>40</left>
						<include content="FlixSquareLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout> -->
				<itemlayout height="401" width="378" condition="Container.Content(images)">
					<control type="group">
						<left>0</left>
						<top>150</top>
						<include>FlixPictureLayout</include>
					</control>
				</itemlayout>
				<focusedlayout height="401" width="378" condition="Container.Content(images)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>150</top>
						<include content="FlixPictureLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>

</includes>