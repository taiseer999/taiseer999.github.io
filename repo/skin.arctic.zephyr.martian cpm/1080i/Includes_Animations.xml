<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Animation.Common">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="300" tween="sine" easing="out"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="!$EXP[HideViewContent]">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="$EXP[HideViewContent]">
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="350"/>
        </animation>
        <animation type="Conditional" reversible="true" condition="Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus() 
        | Window.IsVisible(1103) | Window.IsVisible(1125) | Window.IsVisible(1102) | Window.IsVisible(1107) | Window.IsVisible(1106) | Window.IsVisible(1101)">
            <effect type="zoom" end="95" start="100" time="250" center="auto" tween="quadratic" easing="in"/>
        </animation>
    </include>
    
    <include name="Animation.FadeHomeRow">
        <visible>!$EXP[HideViewContent]</visible>
        <animation effect="fade" start="0" end="100" time="350" tween="sine" easing="out" reversible="false">WindowOpen</animation>
        <animation effect="fade" start="100" end="0" tween="cubic" easing="out" time="350" reversible="false">WindowClose</animation>
        <animation effect="fade" start="0" end="100" time="350" tween="sine" easing="out" reversible="false">Visible</animation>
        <animation effect="fade" start="100" end="0" tween="cubic" easing="out" time="350" reversible="false">Hidden</animation>
    </include>
    
    <include name="Animation.OSD.Wide.Short">
        <animation effect="fade" start="33" end="100" time="350" delay="150">Visible</animation>
        <animation effect="fade" start="100" end="33" time="0">Hidden</animation>
    </include>

    <include name="Animation.Vertical.Widgets.Container">
        <animation effect="fade" start="100" end="80" time="400" condition="[Control.HasFocus(300) | Control.HasFocus(302)]">Conditional</animation>
    </include>

    <include name="Animation.Vertical.Widgets.Label">
        <include condition="![Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)]">fadehorizontal</include>
        <include condition="[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)]">fadevertical</include>
    </include>

    <include name="Animation.Vertical.Widgets.Title">
        <animation effect="fade" start="0" end="100" time="250" tween="cubic" easing="inout">Visible</animation>
        <animation effect="fade" start="0" end="100" time="250" tween="cubic" easing="inout">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="50">Hidden</animation>
        <animation effect="fade" end="0" start="100" time="50">WindowClose</animation>
    </include>

    <include name="Animation.Vertical.Widgets.Title.Loading">
        <animation effect="fade" start="0" end="100" time="250" tween="cubic" easing="inout">Visible</animation>
        <animation effect="fade" start="0" end="100" time="250" tween="cubic" easing="inout">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="300">Hidden</animation>
        <animation effect="fade" end="0" start="100" time="300">WindowClose</animation>
    </include>

    <include name="Animation.SidePoster">
        <animation type="WindowOpen">
            <effect type="slide" start="-1920" end="0" delay="0" time="400" tween="quadratic" easing="out"/>
            <effect type="fade" end="100" start="0" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="WindowClose">
            <effect type="slide" start="0" end="-1920" time="300" tween="quadratic" easing="in"/>
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Visible">
            <effect type="slide" start="-1920" end="0" delay="0" time="400" tween="quadratic" easing="out"/>
            <effect type="fade" end="100" start="0" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Hidden">
            <effect type="slide" start="0" end="-1920" time="300" tween="quadratic" easing="in"/>
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Conditional" condition="String.IsEqual(Window.Property(ShowDisc),1)">
            <effect type="slide" start="0,0" end="0,130" delay="0" time="200" tween="quadratic" easing="out"/>
        </animation>
    </include>

    <include name="Animation.RightSide">
        <animation type="WindowOpen">
            <effect type="slide" start="1920" end="0" delay="0" time="400" tween="quadratic" easing="out"/>
            <effect type="fade" end="100" start="0" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="WindowClose">
            <effect type="slide" start="0" end="1920" time="300" tween="quadratic" easing="in"/>
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Visible">
            <effect type="slide" start="1920" end="0" delay="0" time="400" tween="quadratic" easing="out"/>
            <effect type="fade" end="100" start="0" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Hidden">
            <effect type="slide" start="0" end="1920" time="300" tween="quadratic" easing="in"/>
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
        </animation>
    </include>
    
    <include name="Animation.RightSide.Vertical.Menu">
        <animation effect="slide" start="0,0" end="-300,0" time="0" condition="[Skin.HasSetting(homemenu.only.icons) + [$EXP[HomeIsVerticalMultiWidgets] | $EXP[HomeIsVerticalMultiWidgetsNetflix]]] + Skin.HasSetting(home.showicons)">Conditional</animation>
        <visible>!$EXP[HideViewContent]</visible>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in"/>
            <effect type="slide" start="1920" end="0" time="350" center="auto" tween="sine" easing="out"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
            <effect type="slide" end="1920" start="0" time="300" center="auto" tween="quadratic" easing="in"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in"/>
            <effect type="slide" start="1920" end="0" time="350" center="auto" tween="sine" easing="out"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
            <effect type="slide" end="1920" start="0" time="300" center="auto" tween="quadratic" easing="in"/>
        </animation>
        <animation type="Conditional" reversible="true" condition="Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()">
            <effect type="zoom" end="95" start="100" time="200" center="auto" tween="quadratic" easing="in"/>
        </animation>
    </include>
    
    <include name="Animation.LeftSide.Vertical.Menu">
        <visible>!$EXP[HideViewContent]</visible>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in"/>
            <effect type="slide" start="-1920" end="0" time="350" center="auto" tween="quadratic" easing="out"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
            <effect type="slide" end="-1920" start="0" time="300" center="auto" tween="quadratic" easing="in"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in"/>
            <effect type="slide" start="-1920" end="0" time="350" center="auto" tween="quadratic" easing="out"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out"/>
            <effect type="slide" end="-1920" start="0" time="300" center="auto" tween="quadratic" easing="in"/>
        </animation>
        <animation type="Conditional" reversible="true" condition="Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()">
            <effect type="zoom" end="95" start="100" time="200" center="auto" tween="quadratic" easing="in"/>
        </animation>
    </include>

    <include name="Animation.Weather">
        <animation type="Visible" reversible="false">
            <effect type="fade" end="100" start="0" time="300" delay="250"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" end="0" start="100" time="300"/>
        </animation>
    </include>

    <include name="Animation.FileNameAndPath">
        <animation type="Conditional" condition="Control.HasFocus(7) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(8) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(13) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(14) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(15) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9001) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9002) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9003) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9004) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9005) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9006) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9007) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9008) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9029) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9030) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9201) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10001) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10002) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10003) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10004) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10005) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10006) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10007) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10008) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10009) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10010) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10001) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10011) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10012) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10013) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10014) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10015) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10016) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10017) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10018) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10019) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10020) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11001) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11002) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11003) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11004) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11005) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11006) + ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="100" start="0" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="!ControlGroup(9000).HasFocus()" reversible="false">
            <effect type="fade" end="0" start="100" time="0"/>
        </animation>
    </include>

    <include name="Animation.ButtonLabel">
        <animation type="Conditional" condition="Control.HasFocus(7) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(8) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(13) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(14) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(15) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9001) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9002) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9003) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9004) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9005) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9006) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9007) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9008) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9029) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9030) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(9201) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10001) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10002) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10003) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10004) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10005) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10006) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10007) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10008) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10009) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10010) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10011) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10012) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10013) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10014) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10015) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10016) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10017) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10018) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10019) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(10020) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11001) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11002) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11003) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11004) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11005) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
        <animation type="Conditional" condition="Control.HasFocus(11006) + !String.IsEmpty(ListItem.FileNameAndPath)" reversible="false">
            <effect type="fade" end="0" start="100" time="400" delay="2000"/>
        </animation>
    </include>

    <include name="Animation.FurnitureIcon">
        <animation effect="fade" start="0" end="100" time="400" delay="400">Visible</animation>
        <animation effect="fade" start="100" end="0" time="300">Hidden</animation>
    </include>

    <include name="ListViewScrollAnim">
        <animation type="Focus" condition="Container.OnNext" reversible="false">
            <effect type="Fade" start="70" end="100" time="200" tween="back" easing="in"/>
            <effect type="slide" start="0,-37" time="200" tween="sine" easing="out"/>
        </animation>
        <animation type="Focus" condition="Container.OnPrevious" reversible="false">
            <effect type="Fade" start="70" end="100" time="200" tween="back" easing="in"/>
            <effect type="slide" start="0,37" time="200" tween="sine" easing="out"/>
        </animation>
    </include>

    <include name="ViewSlideForJumpBar">
        <animation effect="slide" start="0,0" end="-32,0" time="400" tween="quadratic" easing="out" condition="Control.HasFocus(290001)">Conditional</animation>
    </include>

    <include name="Animation.RotatePlay">
        <animation effect="rotatey" end="-360" start="0" center="50,0" time="800" loop="true" delay="30000" condition="!Skin.HasSetting(hideplayrotate)">Conditional</animation>
        <animation effect="zoom" pulse="true" center="50,50" end="85" start="100" time="400" delay="30000" condition="!Skin.HasSetting(hideplayrotate)">Conditional</animation>
    </include>

    <include name="Animation.RotatePlay2">
        <animation effect="rotatey" end="-360" start="0" center="50,0" time="800" loop="true" delay="30000" condition="!Skin.HasSetting(hideplayrotate)">Conditional</animation>
        <animation effect="zoom" start="50,50,100,100" end="50,50,60,90" pulse="true" delay="30000" time="400" condition="!Skin.HasSetting(hideplayrotate)">Conditional</animation>
    </include>

    <include name="Animation.FadeIn">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.FadeIn.Gradient">
        <param name="delay" value="$PARAM[delay]" default="1"/>
        <definition>
        <animation effect="fade" start="100" end="100" delay="$PARAM[delay]" time="1">Visible</animation>
        </definition>
    </include>

    <include name="Animation.FadeInMusic">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
    </include>

    <include name="Animation.FadeInWeatherDelay">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" reversible="false" delay="200">Visible</animation>
    </include>
    
    <include name="Animation.FadeInWeather">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" reversible="false">Visible</animation>
    </include>
    
    <include name="Animation.FadeOutWeather">
        <animation effect="fade" end="0" start="100" time="150" reversible="false">Hidden</animation>
    </include>

    <include name="Animation.FadeInDialogInfo">
        <animation effect="fade" start="0" end="100" time="350" delay="100" tween="cubic" easing="inout">Visible</animation>
    </include>

    <include name="Animation.FadeOutDialogInfo">
        <animation effect="fade" end="0" start="100" time="250">Hidden</animation>
    </include>

    <include name="Animation.FadeInDelayNew">
        <animation effect="fade" start="0" end="100" time="50" delay="200">Visible</animation>
    </include>

    <include name="Animation.ActorZoom">
        <animation center="970,522" condition="!Control.HasFocus(50)" easing="inout" effect="zoom" end="60" start="100" time="300" tween="sine">Conditional</animation>
    </include>

    <include name="Animation.ActorZoomNew">
        <animation center="2330,990" condition="!Control.HasFocus(50)" effect="zoom" end="80" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.MovieZoom">
        <animation condition="Control.HasFocus(9501) | Control.HasFocus(160) | Control.HasFocus(10053) | Control.HasFocus(9503)" effect="slide" end="-600,0" start="0,0" reversible="true" time="300" tween="sine">Conditional</animation>
    </include>

    <include name="Animation.MovieZoomNew">
        <animation center="2712,1182" condition="!Control.HasFocus(9501) + !Control.HasFocus(160) + !Control.HasFocus(10053) + !Control.HasFocus(9503)" effect="zoom" end="78" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.MovieZoomYoutubeNew">
        <animation center="4130,1182" condition="!Control.HasFocus(9501) + !Control.HasFocus(160) + !Control.HasFocus(10053) + !Control.HasFocus(9503)" effect="zoom" end="78" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.MusicZoomNew">
        <animation center="3739,1255" condition="!Control.HasFocus(9501) + !Control.HasFocus(160) + !Control.HasFocus(9502) + !Control.HasFocus(9503) + !Control.HasFocus(1113)" effect="zoom" end="78" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.MusicYoutubeNew">
        <animation center="4749,1255" condition="!Control.HasFocus(9501) + !Control.HasFocus(160) + !Control.HasFocus(9502) + !Control.HasFocus(9503) + !Control.HasFocus(1113)" effect="zoom" end="78" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.PosterSlide">
        <animation condition="[Control.HasFocus(11100) + !String.IsEmpty(ListItem.Art(discart))]" effect="slide" end="0,80" start="0,0" time="300">Conditional</animation>
    </include>

    <include name="Animation.PosterSlideSquare">
        <animation condition="[Control.HasFocus(9002) | String.IsEqual(Window.Property(ShowDisc),1)] + !String.IsEmpty(ListItem.Art(discart))" effect="slide" end="0,80" start="0,0" time="300">Conditional</animation>
    </include>

    <include name="Animation.CDSlideSquare">
        <animation condition="Control.HasFocus(9002) + !String.IsEmpty(ListItem.Art(discart))" reversible="false" effect="slide" start="0,0" end="0,-130" delay="0" time="400" tween="quadratic" easing="out">Conditional</animation>
        <animation type="Hidden">
            <effect type="slide" reversible="false" start="0,-130" end="0,0" delay="0" time="200" tween="quadratic" easing="out"/>
        </animation>
    </include>

    <include name="Animation.ActorZoom.Focus0">
        <focusposition>0</focusposition>
    </include>

    <include name="Animation.ActorZoom.Focus2">
        <focusposition>2</focusposition>
    </include>

    <include name="Animation.DelayFadeIn">
        <animation effect="fade" start="0" end="100" time="650" delay="200" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="200" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.DelayFadeIn300">
        <animation effect="fade" start="0" end="100" time="650" delay="300" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="300" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.DelayFadeIn600">
        <animation effect="fade" start="0" end="100" time="650" delay="600" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="600" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.DelayFadeIn510">
        <animation effect="fade" start="0" end="100" time="650" delay="200" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="200" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.DelayFadeIn3">
        <animation effect="fade" start="0" end="100" time="650" delay="900" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="900" tween="cubic" easing="inout">WindowOpen</animation>
    </include>
    
    <include name="Animation.DelayFadeIn1200">
        <animation effect="fade" start="0" end="100" time="650" delay="1200" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="1200" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.DelayFadeIn2">
        <animation effect="fade" start="0" end="100" time="650" delay="600" tween="cubic" easing="inout" reversible="false">Visible</animation>
        <animation effect="fade" start="0" end="100" time="650" delay="600" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.FadeFromHome">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" condition="Window.Previous(home)">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.Next(home)">WindowClose</animation>
    </include>

    <include name="Animation.ZoomIn">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"/>
            <effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"/>
            <effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out"/>
        </animation>
    </include>

    <include name="Animation.FadeIn.Delay">
        <animation type="Visible">
            <effect type="fade" start="0" end="100" time="350" delay="300" tween="cubic" easing="inout"/>
            <effect type="zoom" start="75" end="100" center="auto" tween="back" time="500" delay="300"/>
        </animation>
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation.SelectBoxHome">
        <animation type="Focus">
            <effect type="zoom" start="95" end="100" time="150" tween="sine" easing="inout" center="auto"/>
            <effect type="fade" start="0" end="100" time="150" tween="sine" easing="in"/>
        </animation>
        <animation type="Unfocus">
            <effect type="zoom" start="100" end="95" time="150" tween="sine" easing="inout" center="auto"/>
            <effect type="fade" start="100" end="0" time="150" tween="sine" easing="out"/>
        </animation>
    </include>

    <include name="Animation.FadeIn.Slide">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
    </include>

    <include name="Animation.SwitchText">
        <visible>!Container().OnNext + !Container().OnPrevious + !String.IsEqual(ListItem.Label,..)</visible>
        <animation condition="!Container().OnNext + !Container().OnPrevious" effect="fade" start="100" end="0" time="400">Hidden</animation>
        <animation condition="!Container().OnNext + !Container().OnPrevious" effect="fade" delay="200" start="0" reversible="false" end="100" time="500">Visible</animation>
    </include>

    <include name="Animation.ViHi">
        <animation effect="fade" start="100" end="0" time="200">Hidden</animation>
        <animation effect="fade" start="0" delay="200" end="100" time="200">Visible</animation>
    </include>

    <include name="Animation.ViHi.Settings">
        <animation effect="fade" start="0" end="100" time="300">Visible</animation>
        <animation effect="fade" start="100" end="0" time="100">Hidden</animation>
    </include>

    <include name="Animation.SlideUp">
        <animation type="Visible">
            <effect type="fade" start="0" end="100" time="250" delay="0" tween="cubic" easing="inout"/>
            <effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="400" delay="0"/>
        </animation>
        <animation type="WindowOpen">
            <effect type="fade" start="0" end="100" time="250" delay="0" tween="cubic" easing="inout"/>
            <effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="400" delay="0"/>
        </animation>
    </include>

    <include name="Animation.FadeOut">
        <animation effect="fade" end="0" start="100" time="150">Hidden</animation>
        <animation effect="fade" end="0" start="100" time="150">WindowClose</animation>
    </include>
    
    <include name="Animation.FadeOut2">
        <animation effect="fade" end="0" start="100" time="150" reversible="false">Hidden</animation>
    </include>

    <include name="Animation.ClearLogo.FadeOut">
        <animation effect="fade" end="0" start="100" time="150" condition="$EXP[HideViewContent] | [Control.IsVisible(514) + !Skin.HasSetting(NotShowClearart514)] | [[Control.IsVisible(512) | Control.IsVisible(511)] + Skin.HasSetting(ShowClearart511)] | [Control.IsVisible(510) + Skin.HasSetting(ShowClearart510)]">Conditional</animation>
    </include>

    <include name="Animation.FurnitureVisible">
        <animation effect="fade" end="0" start="100" condition="$EXP[HideViewContent]" time="250" delay="0" tween="sine" easing="in">Conditional</animation>
        <animation effect="fade" end="100" start="0" condition="!$EXP[HideViewContent]" time="150">Conditional</animation>
        <animation effect="fade" end="100" start="0" time="450" delay="0" tween="sine" easing="in">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="150">WindowClose</animation>
        <animation effect="fade" end="100" start="0" time="450" delay="0" tween="sine" easing="in">Visible</animation>
        <animation effect="fade" end="0" start="100" time="150">Hidden</animation>
    </include>

    <include name="Animation.FurnitureVisibleHomeLabel">
        <animation effect="fade" end="0" start="100" condition="$EXP[HideViewContent] | [Window.IsVisible(Home.xml) + !$EXP[HomeShowHeader] + !$EXP[HomeIsVertical]]" time="450" delay="0" tween="sine" easing="in">Conditional</animation>
        <animation effect="fade" end="100" start="0" condition="![$EXP[HideViewContent] | [Window.IsVisible(Home.xml) + !$EXP[HomeShowHeader] + !$EXP[HomeIsVertical]]]" time="150">Conditional</animation>
        <animation effect="fade" end="100" start="0" time="450" delay="0" tween="sine" easing="in">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="150">WindowClose</animation>
        <animation effect="fade" end="100" start="0" time="450" delay="0" tween="sine" easing="in">Visible</animation>
        <animation effect="fade" end="0" start="100" time="150">Hidden</animation>
    </include>

    <include name="Animation.FurnitureFadeInOut">
        <animation effect="fade" start="0" end="100" time="150">Visible</animation>
        <animation effect="fade" end="0" start="100" time="150">Hidden</animation>
        <animation effect="fade" start="0" end="100" time="150" condition="![Window.Previous(home) + $EXP[HomeIsVertical]] + ![Window.IsVisible(home) + $EXP[HomeIsVertical]]">WindowOpen</animation>
        <animation effect="fade" end="0" start="100" time="150" condition="![Window.Next(home) + $EXP[HomeIsVertical]] + ![Window.IsVisible(home) + $EXP[HomeIsVertical]]">WindowClose</animation>
    </include>

    <include name="Animation.TestIn">
        <visible>!Container().OnNext + !Container().OnPrevious + !ListItem.IsCollection + !$EXP[IsMediaInfoList]</visible>
        <animation type="VisibleChange" reversible="false">
            <effect type="fade" start="0" end="100" time="400" delay="2300"/>
        </animation>
        <animation type="Conditional" condition="true" reversible="false">
            <effect type="fade" start="0" end="100" time="400" delay="2300"/>
        </animation>
    </include>

    <include name="Animation.TestOut">
        <animation type="Conditional" condition="!Container().OnNext + !Container().OnPrevious + !ListItem.IsCollection + !$EXP[IsMediaInfoList]" reversible="false">
            <effect type="fade" start="100" end="0" time="400" delay="2000"/>
        </animation>
    </include>

    <include name="Animation.FadeInDialogWIP">
        <animation effect="fade" start="0" end="100" time="350" delay="300">Visible</animation>
    </include>

    <include name="Animation.FadeInDialogWIP2">
        <animation effect="fade" start="0" end="100" time="250" delay="200">Visible</animation>
    </include>

    <include name="Animation.addoninfo">
        <animation center="2636,116" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9601)" effect="zoom" end="77" tween="sine" easing="inout" start="100" time="300">Conditional</animation>
        <animation condition="Control.HasFocus(9601)" effect="fade" end="0" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.AddonFadeOut">
        <animation condition="Control.HasFocus(50) | Control.HasFocus(9601)" effect="fade" end="0" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.MusicFadeOut">
        <animation condition="ControlGroup(10051).HasFocus | ControlGroup(10052).HasFocus | ControlGroup(10054).HasFocus | Control.HasFocus(9601)" effect="fade" end="0" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.VideoFadeOut">
        <animation condition="[ControlGroup(9600).HasFocus | ControlGroup(10050).HasFocus | ControlGroup(10051).HasFocus | ControlGroup(10052).HasFocus | ControlGroup(10053).HasFocus | ControlGroup(10054).HasFocus | ControlGroup(10056).HasFocus | ControlGroup(10057).HasFocus | ControlGroup(10060).HasFocus | ControlGroup(10062).HasFocus | ControlGroup(10070).HasFocus | ControlGroup(10071).HasFocus | ControlGroup(10072).HasFocus | ControlGroup(10073).HasFocus | Control.HasFocus(160) | Control.HasFocus(9601)]" effect="fade" end="0" start="100" time="300">Conditional</animation>
    </include>

    <include name="Animation.WikiFadeOut">
        <animation condition="Window.IsVisible(script-wikipedia.xml)" effect="fade" end="0" start="100" time="300">Conditional</animation>
    </include>
    
    <include name="Animation.HomeIsModernMultiWidgets">
        <visible>!$EXP[HideViewContent]</visible>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="350"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="350"/>
        </animation>
    </include>

    <include name="Animation.NowPlaying.Widget.Fade">
        <animation type="Conditional" reversible="false" condition="Skin.HasSetting(extended.nowplaying) + !ControlGroup(301).HasFocus() + !Control.HasFocus(4567) + !Control.HasFocus(8888) + Player.HasMedia">
            <effect type="fade" start="100" end="0" tween="sine" reversible="false" easing="out" delay="0" time="350"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="![Skin.HasSetting(extended.nowplaying) + !ControlGroup(301).HasFocus() + !Control.HasFocus(4567) + !Control.HasFocus(8888) + Player.HasMedia]">
            <effect type="fade" start="0" end="100" tween="sine" reversible="false" easing="in" delay="350" time="450"/>
        </animation>
    </include>

    <include name="Animation.Home.Clean">
        <animation effect="slide" start="0" end="0,220" time="150" tween="sine" condition="ControlGroup(301).HasFocus">Conditional</animation>
    </include>
    
    <include name="Animation.AutoTrailer.IsPlaying">
        <animation effect="fade" end="0" start="100" time="250" condition="$EXP[TrailerWindowIsActive]">Conditional</animation>
    </include>
    
    <include name="Animation.AutoTrailer.FadeOut.Background">
        <animation effect="fade" start="100" end="0" time="750" condition="!String.IsEmpty(Window(home).Property(TrailerFade))">Conditional</animation>
    </include>
    
    <include name="Animation.Weather.FadeInOut">
        <animation effect="fade" start="0" end="100" time="400" delay="300">Visible</animation>
        <animation effect="fade" end="0" start="100" time="400">Hidden</animation>
    </include>
    
    <include name="Animation.Slide.Menu">
        <param name="left" default="-668"/>
        <definition>
        <animation type="Visible">
            <effect type="slide" start="$PARAM[left]" end="0" time="250"/>
            <effect type="fade" start="70" end="100" time="250"/>
        </animation>
        <animation type="WindowOpen">
            <effect type="slide" start="$PARAM[left]" end="0" time="250"/>
            <effect type="fade" start="70" end="100" time="250"/>
        </animation>            
        <animation type="Hidden">
            <effect type="slide" end="$PARAM[left]" start="0" time="250"/>
            <effect type="fade" start="100" end="70" time="250"/>
        </animation>
        <animation type="WindowClose">
            <effect type="slide" end="$PARAM[left]" start="0" time="250"/>
            <effect type="fade" start="100" end="70" time="250"/>
        </animation>
        </definition>
    </include>
    
    <include name="Animation.Slide.Vertical.Menu">
        <param name="left" default="-550"/>
        <definition>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" delay="150" />
            <effect type="slide" start="$PARAM[left],0" end="0,0" time="200" tween="sine" easing="out" delay="150" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="100" tween="sine" easing="out" />
            <effect type="slide" start="0,0" end="$PARAM[left],0" time="150" tween="sine" easing="out" />
        </animation>
        </definition>
    </include>

    <include name="Animation.Slide.Vertical.Submenu">
        <param name="left" default="-500"/>
        <definition>
        <animation type="Conditional" condition="Control.HasFocus(302)" reversible="false">
            <effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" delay="150" />
            <effect type="slide" start="$PARAM[left],0" end="0,0" time="200" tween="sine" easing="out" delay="150" />
        </animation>
        <animation type="Conditional" condition="!Control.HasFocus(302)" reversible="false">
            <effect type="fade" start="100" end="0" time="100" tween="sine" easing="out" />
            <effect type="slide" start="0,0" end="$PARAM[left],0" time="150" tween="sine" easing="out" />
        </animation>
        </definition>
    </include>

    <include name="Animation.Clean.Widget.Slide.Out">
        <animation type="WindowClose" condition="!ControlGroup.HasFocus(301)">
            <effect type="fade" start="100" end="0" time="100" />
            <effect type="slide" start="0,0" end="0,250" time="150" />
        </animation>
    </include>
    
    <include name="Animation.Animate.Fanart">
        <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
    </include>
    
    <include name="Animation.Animate.Slideshow">
        <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="$EXP[Visualisation_AnimateFanart]">Conditional</animation>
        <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="$EXP[Visualisation_AnimateFanart]">Conditional</animation>
    </include>
    
    <include name="Animation.Background.OpenClose">
        <animation type="WindowOpen" reversible="false" condition="Window.IsVisible(home) + ![$EXP[HomeIsModern] | $EXP[HomeIsSpotlight] | $EXP[HomeIsClassic] | $EXP[HomeIsCleanMinimal]]">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="WindowOpen" reversible="false" condition="Window.IsVisible(home) + ![$EXP[HomeIsModern] | $EXP[HomeIsSpotlight] | $EXP[HomeIsClassic]] + $EXP[HomeIsCleanMinimal]">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="out"/>
        </animation>
        <animation type="WindowOpen" reversible="false" condition="!Window.IsVisible(home)">
            <effect type="fade" start="0" end="100" time="450" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="300" tween="sine" easing="out"/>
        </animation>
    </include>
</includes>
