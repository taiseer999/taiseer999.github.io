<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Animation_FocusTextureFade">
		<animation effect="fade" start="0" end="100" time="200" tween="sine">Focus</animation>
		<animation effect="fade" start="100" end="0" time="0">UnFocus</animation>
	</include>

	<include name="Animation_DialogPopupOpenClose">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="80" end="100" center="50%,50%" delay="160" tween="back" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="zoom" start="100" end="80" center="50%,50%" easing="in" tween="back" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
		<depth>DepthDialog</depth>
	</include>

	<include name="Animation_DialogPopupVisible">
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="80" end="100" center="50%,50%" delay="160" tween="back" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="80" center="50%,50%" easing="in" tween="back" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
	</include>

	<include name="Visible_Fade">
		<animation effect="fade" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>

	<include name="OpenClose_Fade">
		<animation effect="fade" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	</include>

	<include name="Visible_Right_Delayed">
		<include>Visible_Fade</include>
		<!-- <include content="Vis_FadeSlide_Right_Delayed" condition="!Skin.HasSetting(no_slide_animations)">
			<param name="id" value="$PARAM[id]" />
		</include> -->
	</include>

	<include name="Vis_FadeSlide_Right_Delayed">
		<animation type="Conditional" condition="String.IsEqual(Container(9000).ListItem.Property(id),$PARAM[id])">
			<effect type="fade" start="0" end="100" time="300" tween="sine" delay="300" easing="out" />
			<effect type="slide" start="320" end="0" time="400" delay="300" tween="cubic" easing="out" />
		</animation>
		<animation type="Hidden">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="Visible_Right">
		<include>Visible_Fade</include>
		<!-- <include condition="!Skin.HasSetting(no_slide_animations)">Vis_FadeSlide_Right</include> -->
	</include>

	<include name="Animation_TopSlide">
		<animation type="WindowOpen" reversible="False">
			<effect type="fade" start="0" end="100" time="300"/>
			<effect type="slide" start="0,-200" end="0,0" time="300" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="False">
			<effect type="fade" start="100" end="0" time="300"/>
			<effect type="slide" start="0,0" end="0,-200" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="Animation_BottomSlide">
		<animation type="WindowOpen" reversible="False">
			<effect type="fade" start="0" end="100" time="300"/>
			<effect type="slide" start="0,200" end="0,0" time="300" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="False">
			<effect type="fade" start="100" end="0" time="300"/>
			<effect type="slide" start="0,0" end="0,200" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="Vis_FadeSlide_Right">
		<animation type="Visible" reversible="False">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
			<effect type="slide" start="320" end="0" time="400" tween="cubic" easing="out" />
		</animation>
		<animation type="Hidden" reversible="False">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="Visible_Left">
		<include>Visible_Fade</include>
		<!-- <include condition="!Skin.HasSetting(no_slide_animations)">Vis_FadeSlide_Left</include> -->
	</include>

	<include name="Vis_FadeSlide_Left">
		<animation type="Visible" reversible="False">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
			<effect type="slide" start="-320" end="0" time="400" tween="cubic" easing="out" />
		</animation>
		<animation type="Hidden" reversible="False">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="OpenClose_Left">
		<include>OpenClose_Fade</include>
		<!-- <include condition="!Skin.HasSetting(no_slide_animations)">OpenClose_FadeSlide_Left</include> -->
	</include>

	<include name="OpenClose_FadeSlide_Left">
		<animation type="WindowOpen">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
			<effect type="slide" start="-320" end="0" time="400" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="OpenClose_Right">
		<include>OpenClose_Fade</include>
		<!-- <include condition="!Skin.HasSetting(no_slide_animations)">OpenClose_FadeSlide_Right</include> -->
	</include>

	<include name="OpenClose_FadeSlide_Right">
		<animation type="WindowOpen">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
			<effect type="slide" start="320" end="0" time="400" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="Keyboard_Slide_Up">
		<animation type="WindowOpen">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,1080" end="0,0" time="400" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,1080" time="400" tween="cubic" easing="out" />
		</animation>
	</include>

	<include name="GlowPulse">
		<animation type="Conditional" condition="true" pulse="true">
			<effect type="zoom" time="1733" start="97" end="100" center="$PARAM[pos_x],$PARAM[pos_y]" tween="cubic" easing="in"/>
		</animation>
	</include>
	
	<include name="Animation_Widget_Poster_Slide">
    <animation effect="slide" end="0,-563.5" time="0" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container($PARAM[container]).Position,1)">Conditional</animation>
    <animation effect="slide" end="0,-563.5" time="0" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container($PARAM[container]).Position,2)">Conditional</animation>
    <animation effect="slide" end="0,-563.5" time="0" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container($PARAM[container]).Position,3)">Conditional</animation>
    <animation effect="slide" end="0,-563.5" time="0" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container($PARAM[container]).Position,4)">Conditional</animation>
  </include>

	<include name="CenterList72">
		<animation effect="slide" start="0,0" end="0,504" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,468" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,432" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,392" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,360" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,5)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,324" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,6)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,288" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,7)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,252" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,8)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,216" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,9)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,180" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,10)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,144" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,11)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,108" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,12)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,72" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,13)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,36" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,14)">Conditional</animation>
	</include>

	<include name="CenterList104">
		<animation effect="slide" start="0,0" end="0,416" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,364" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,312" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,260" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,208" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,5)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,156" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,6)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,104" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,7)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,52" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,8)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,0" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,9)">Conditional</animation>
	</include>

	<include name="CenterContext">
		<animation effect="slide" start="0,0" end="0,310" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,1)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,280" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,2)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,250" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,3)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,220" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,4)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,190" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,5)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,160" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,6)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,130" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,7)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,100" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,8)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,70" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,9)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,40" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,10)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,10" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,11)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,10" time="0" condition="Integer.IsGreater(Container($PARAM[id]).NumItems,11)">Conditional</animation>
	</include>

	<include name="ListLandscapeSlideAnimations">
    <animation effect="slide" start="0,0" end="0,67" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,10)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,67" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,9)">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,134" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,8)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,134" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,7)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,201" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,6)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,201" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,5)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,268" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,4)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,268" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,3)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,335" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,2)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,335" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,1)">Conditional</animation>
    <animation effect="slide" start="0,0" end="0,335" time="0" condition="Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)">Conditional</animation>
	</include>

	<include name="ListLandscapeArtworkSlide">
    <animation condition="
			!$EXP[isContent] | 
			[
					[String.IsEmpty(Window(Home).Property(nimbus.metascore)) | Skin.HasSetting(Disable.MetacriticRating)] + 
					[String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter)) | Skin.HasSetting(Disable.RTCRating)] + 
					[String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter)) | Skin.HasSetting(Disable.RTARating)] + 
					[String.IsEmpty(Window(Home).Property(nimbus.imdbRating)) | Skin.HasSetting(Disable.IMDbRating)] + 
					[String.IsEmpty(Window(Home).Property(nimbus.popularRating)) | Skin.HasSetting(Disable.IMDbPopularRating)] + 
					[String.IsEmpty(Window(Home).Property(nimbus.tmdbRating)) | Skin.HasSetting(Disable.TMDbRating)]
			]" 
			reversible="true">
			<effect type="slide" start="0,0" end="0,-38.5" time="500" tween="cubic" easing="inout" />
		</animation>
	</include>

	<include name="MediaMenuAnimations">
		<animation condition="$EXP[sidebar_visible]" reversible="true">
			<effect type="slide" start="0,0" end="515,0" time="500" tween="cubic" easing="inout" />
		</animation>
	</include>

	<include name="TrailerPlayingFade">
		<animation effect="fade" start="100" end="30" time="700" condition="!Control.IsVisible(50) + Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Conditional</animation>
	</include>

	<include name="MainMenuAnimations">
		<animation condition="!ControlGroup(2000).HasFocus" reversible="true">
			<effect type="slide" start="0,0" end="469,0" time="500" tween="cubic" easing="inout" />
		</animation>
	</include>

	<include name="SearchMenuAnimations">
		<animation condition="!ControlGroup(2000).HasFocus" reversible="true">
			<effect type="slide" start="0,0" end="531,0" time="500" tween="cubic" easing="inout" />
		</animation>
	</include>

	<include name="ArtworkAnimations">
		<animation effect="fade" start="0" end="100" time="500">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="500">WindowClose</animation>
		<animation effect="fade" time="400">VisibleChange</animation>
	</include>

	<include name="WidgetNavigationAnimations">
		<animation effect="fade" start="0" end="100" time="500"  tween="cubic" easing="inout" reversible="false">Visible</animation>
		<animation effect="fade" start="0" end="100" time="500"  tween="cubic" easing="inout">WindowOpen</animation>
	</include>

	<include name="WidgetAutoInfoAnimations">
		<animation condition="!Skin.HasSetting(Disable.WidgetAutoInfo) + Control.HasFocus($PARAM[list_id]) + !Container($PARAM[list_id]).IsUpdating + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(widget_autoinfo_timer),Skin.Numeric(WidgetAutoInfoDelay))" reversible="false">
			<effect type="fade" start="100" end="60" time="300" tween="sine" easing="inout" />
			<effect type="fadediffuse" start="FFE9E9E9" end="FF4C4C4C" time="300" />
		</animation>
	</include>

	<include name="WidgetUnfocusedAnimations">
		<animation condition="!Skin.HasSetting(Disable.WidgetDimming) + String.IsEmpty(Skin.String(TrailerPlaying)) + !Control.HasFocus($PARAM[list_id]) + ControlGroup(2000).HasFocus" reversible="true">
			<effect type="fade" start="100" end="80" time="300" tween="sine" easing="inout" />
			<effect type="fadediffuse" start="FFE9E9E9" end="FF777777" time="300" />
		</animation>
	</include>

	<include name="StackedWidgetUnfocusedAnimations">
		<animation condition="!Skin.HasSetting(Disable.WidgetDimming) + String.IsEmpty(Window(Home).Property(StackedWidget)) + ControlGroup(2000).HasFocus" reversible="true">
			<effect type="fade" start="100" end="80" time="300" tween="sine" easing="inout" />
			<effect type="fadediffuse" start="FFE9E9E9" end="FF777777" time="300" />
		</animation>
	</include>

	<include name="StackedWidgetSwitchAnimations">
		<animation condition="Container($PARAM[list_id]).IsUpdating" reversible="true" pulse="true">
			<effect type="fade" start="100" end="80" time="700" tween="sine" easing="inout" />
			<effect type="fadediffuse" start="FFE9E9E9" end="FF777777" time="700" />
		</animation>
	</include>

</includes>
