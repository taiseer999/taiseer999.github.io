<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="WidgetGroupListCommon">
		<orientation>vertical</orientation>
		<height>100%</height>
		<itemgap>-180</itemgap>
		<scrolltime tween="cubic" easing="out">700</scrolltime>
		<usecontrolcoords>true</usecontrolcoords>
	</include>

	<include name="WeatherGroupListCommon">
		<orientation>vertical</orientation>
		<height>4999</height>
		<itemgap>-100</itemgap>
		<usecontrolcoords>true</usecontrolcoords>
	</include>

	<include name="CategoryLabel">
		<param name="visible">true</param>
		<param name="item_treshold">0</param>
		<param name="label_focus">$VAR[HomeFlixCrumbsVar]</param>
		<definition>
			<control type="group" id="$PARAM[list_id]665">
				<animation effect="fade" start="100" end="45" time="300" tween="sine" easing="inout" condition="!Skin.HasSetting(Disable.WidgetDimming) + String.IsEmpty(Skin.String(TrailerPlaying)) + !Control.HasFocus($PARAM[list_id]) + ControlGroup(2000).HasFocus">Conditional</animation>
				<left>57</left>
				<top>80</top>
				<height>50</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<visible>$PARAM[visible]</visible>
				<!-- <control type="label">
					<top>12</top>
					<label>$VAR[LoadingLabelsVar]</label>
					<font>font27</font>
					<textcolor>unfocused_text</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
				</control> -->
				<control type="label">
					<label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus][/LIGHT]</label>
					<font>font32_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
					<animation effect="fade" time="300">Visible</animation>
				</control>
				<control type="label">
					<top>5</top>
					<label>$PARAM[label]</label>
					<font>font27</font>
					<textcolor>unfocused_text</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>!Control.HasFocus($PARAM[list_id])</visible>
				</control>
			</control>
		</definition>
	</include>

	<include name="CategoryLabelWidget">
		<param name="visible">true</param>
		<param name="item_treshold">0</param>
		<param name="label_focus">$VAR[HomeFlixCrumbsVar]</param>
		<definition>
			<control type="group" id="$PARAM[list_id]665">
				<animation effect="fade" start="100" end="45" time="300" tween="sine" easing="inout" condition="!Skin.HasSetting(Disable.WidgetDimming) + String.IsEmpty(Window(Home).Property(StackedWidget)) + !Control.HasFocus($PARAM[list_id]) + ControlGroup(2000).HasFocus">Conditional</animation>
				<!-- <animation effect="slide" end="7,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation> -->
				<left>57</left>
				<top>80</top>
				<height>50</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<visible>$PARAM[visible]</visible>
				<!-- <control type="label">
					<top>12</top>
					<label>$VAR[LoadingLabelsVar]</label>
					<font>font27</font>
					<textcolor>unfocused_text</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
				</control> -->
				<control type="group">
					<visible>Window.IsVisible(Home)</visible>
					<control type="label" id="$PARAM[list_id]666">
						<top>5</top>
						<label>$PARAM[label]</label>
						<font>font27</font>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[list_id]1) + String.IsEmpty(Window(Home).Property(altus.$PARAM[list_id].Label))</visible>
					</control>
					<control type="label" id="$PARAM[list_id]666">
						<top>5</top>
						<label>$PARAM[label] [B]»[/B] $INFO[Window(Home).Property(altus.$PARAM[list_id].Label)]</label>
						<font>font27</font>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[list_id]1) + !String.IsEmpty(Window(Home).Property(altus.$PARAM[list_id].Label))</visible>
					</control>
					<control type="label" id="$PARAM[list_id]667">
						<label>[LIGHT][COLOR unfocused_text]$INFO[Container(9000).ListItem.Label][/COLOR] » [COLOR unfocused_text]$PARAM[label][/COLOR] » [COLOR unfocused_text]$INFO[Window(Home).Property(altus.$PARAM[list_id].Label)][/COLOR]$PARAM[label_focus][/LIGHT]</label>
						<font>font32_title</font>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>Control.HasFocus($PARAM[list_id]1)</visible>
					</control>
					<control type="label" id="$PARAM[list_id]668">
						<!-- <label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus] » [COLOR unfocused_text]$INFO[Window(Home).Property(altus.$PARAM[list_id].Label)][/COLOR][/LIGHT]</label> -->
						<label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus] » [COLOR unfocused_text]$INFO[ListItem.Label][/COLOR][/LIGHT]</label>
						<font>font32_title</font>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>Control.HasFocus($PARAM[list_id])</visible>
						<animation effect="fade" time="300">Visible</animation>
					</control>
				</control>
				<control type="group">
					<visible>Window.IsVisible(1121)</visible>
					<control type="label" id="$PARAM[list_id]666">
						<top>5</top>
						<label>$PARAM[label]</label>
						<font>font27</font>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[list_id]1) + String.IsEmpty(Window(1121).Property(altus.$PARAM[list_id].Label))</visible>
					</control>
					<control type="label" id="$PARAM[list_id]666">
						<top>5</top>
						<label>$PARAM[label] [B]»[/B] $INFO[Window(1121).Property(altus.$PARAM[list_id].Label)]</label>
						<font>font27</font>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[list_id]1) + !String.IsEmpty(Window(1121).Property(altus.$PARAM[list_id].Label))</visible>
					</control>
					<control type="label" id="$PARAM[list_id]667">
						<label>[LIGHT][COLOR unfocused_text]$PARAM[label][/COLOR] » [COLOR unfocused_text]$INFO[Window(1121).Property(altus.$PARAM[list_id].Label)][/COLOR]$PARAM[label_focus][/LIGHT]</label>
						<font>font32_title</font>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>Control.HasFocus($PARAM[list_id]1)</visible>
					</control>
					<control type="label" id="$PARAM[list_id]668">
						<label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$INFO[ListItem.Label][/COLOR]$PARAM[label_focus][/LIGHT]</label>
						<!-- <label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus][/LIGHT]</label> -->
						<font>font32_title</font>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>Control.HasFocus($PARAM[list_id]) + String.IsEmpty(Window(1121).Property(altus.$PARAM[list_id].Label))</visible>
						<!-- <animation effect="fade" time="300">Visible</animation> -->
					</control>
					<control type="label" id="$PARAM[list_id]668">
						<label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus] » [COLOR unfocused_text]$INFO[ListItem.Label][/COLOR][/LIGHT]</label>
						<!-- <label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus] » [COLOR unfocused_text]$INFO[Window(1121).Property(altus.$PARAM[list_id].Label)][/COLOR][/LIGHT]</label> -->
						<font>font32_title</font>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<visible>Control.HasFocus($PARAM[list_id]) + !String.IsEmpty(Window(1121).Property(altus.$PARAM[list_id].Label))</visible>
						<!-- <animation effect="fade" time="300">Visible</animation> -->
					</control>
				</control>
			</control>
		</definition>
	</include>
	
	<include name="WidgetInfo">
		<param name="visible">true</param>
		<param name="left">$PARAM[left]</param>
		<param name="top">$PARAM[top]</param>
		<param name="img_top">$PARAM[img_top]</param>
		<definition>
			<control type="group" id="$PARAM[list_id]669">
				<animation effect="fade" start="100" end="45" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(9000)">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>-297</top>
				<height>470</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<control type="group">
					<top>$PARAM[top]</top>
					<aligny>center</aligny>
					<visible>Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(Disable.WidgetAutoInfo) + !$EXP[dialog_visible] + String.IsEmpty(Skin.String(TrailerPlaying)) + !Container($PARAM[list_id]).IsUpdating + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(widget_autoinfo_timer),Skin.Numeric(WidgetAutoInfoDelay))</visible>
					<include content="WidgetInfoPanel">
						<param name="substitute_label_vis_cond" value="$PARAM[substitute_label_vis_cond]"/>
						<param name="tagline_vis_cond" value="$PARAM[tagline_vis_cond]"/>
						<param name="clearlogo_vis_cond" value="$PARAM[clearlogo_vis_cond]"/>
						<param name="textbox_height_1" value="$PARAM[textbox_height_1]"/>
						<param name="textbox_height_2" value="$PARAM[textbox_height_2]"/>
						<param name="textbox_height_3" value="$PARAM[textbox_height_3]"/>
						<param name="textbox_height_4" value="$PARAM[textbox_height_4]"/>
						<param name="textbox_height_5" value="$PARAM[textbox_height_5]"/>
						<param name="textbox_height_6" value="$PARAM[textbox_height_6]"/>
					</include>
					<control type="image">
						<left>1010</left>
						<top>$PARAM[img_top]</top>
						<width>300</width>
						<height>140</height>
						<aspectratio align="left" aligny="center">keep</aspectratio>
						<texture colordiffuse="$VAR[MenuSelectorColor]">$INFO[$PARAM[infolabel_prefix]ListItem.Studio,resource://resource.images.studios.white/,.png]</texture>
						<visible>Skin.HasSetting(Enable.WidgetStudioLogos) + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Studio)</visible>
					</control>
					<animation effect="fade" time="300">Visible</animation>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetLeftRightArrows">
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]671">
				<animation effect="fade" start="100" end="45" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus(9000)">Conditional</animation>
				<!-- <left>295</left> -->
				<!-- -367 -->
				<top>-297</top>
				<height>470</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<control type="group" id="$PARAM[list_id]672">
					<!-- <top>-25</top> -->
					<aligny>center</aligny>
					<visible>!Container($PARAM[list_id]).IsUpdating</visible>
					<control type="image" id="$PARAM[list_id]673">
						<left>7</left>
						<top>$PARAM[posy]</top>
						<width>70</width>
						<height>70</height>
						<texture flipx="true" colordiffuse="$VAR[FocusColorTheme]">overlays/arrowright1.png</texture>
						<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
						<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
						<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
						<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasPrevious</visible>
						<visible>$PARAM[visible]</visible>
					</control>
					<!-- <control type="image">
						<left>$PARAM[right_posx]</left>
						<top>$PARAM[posy]</top>
						<width>50</width>
						<height>50</height>
						<texture colordiffuse="$VAR[FocusColorTheme]">overlays/arrowright1.png</texture>
						<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
						<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
						<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
						<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasNext</visible>
						<visible>$PARAM[visible]</visible>
					</control> -->
					<!-- <control type="button" id="$PARAM[list_id]672">
						<left>100</left>
						<top>-20</top>
						<width>28</width>
						<height>28</height>
						<texturefocus />
						<texturenofocus />
						<onclick>Control.Move($PARAM[list_id],-1)</onclick>
						<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasPrevious + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]500)]</visible>
					</control>
					<control type="button" id="$PARAM[list_id]673">
						<left>200</left>
						<top>-20</top>
						<width>28</width>
						<height>28</height>
						<texturefocus />
						<texturenofocus />
						<onclick>Control.Move($PARAM[list_id],1)</onclick>
						<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasNext + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]501)]</visible>
					</control> -->
					<animation effect="fade" time="300">Visible</animation>
				</control>
			</control>
		</definition>
	</include>

	

	<include name="WeatherCategoryLabel">
		<param name="visible">true</param>
		<param name="item_treshold">0</param>
		<param name="label_focus">$VAR[HomeFlixCrumbsVar]</param>
		<definition>
			<control type="group" id="$PARAM[list_id]671">
				<animation effect="fade" start="100" end="45" time="300" tween="sine" easing="inout" condition="!Skin.HasSetting(Disable.WidgetDimming) + ![Control.HasFocus($PARAM[list_id]) | Control.HasFocus(9000) | Control.HasFocus(700)]">Conditional</animation>
				<left>50</left>
				<top>80</top>
				<height>40</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<visible>$PARAM[visible]</visible>
				<control type="label">
					<top>12</top>
					<label>[LIGHT]$VAR[HomescreenFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus][/LIGHT]</label>
					<font>font32_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetListPoster">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="340"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>35</left>
				<height>595</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="263" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="PosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="263" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="PosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="295"/>
				<param name="top" value="-85"/>
				<param name="img_top" value="155"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<param name="posy" value="116" />
			</include>
		</definition>
	</include>

	<include name="WidgetListPosterStacked">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="false"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="235"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>2</top>
				<left>37</left>
				<right>0</right>
				<height>595</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="8,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="263" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="PosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="263" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="PosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="295"/>
				<param name="top" value="-85"/>
				<param name="img_top" value="155"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<param name="posy" value="116" />
			</include>
		</definition>
	</include>

	<include name="SmallWidgetListPoster">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="340"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>35</left>
				<height>541</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="230.5" height="393" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="SmallPosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="230.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="SmallPosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="255"/>
				<param name="top" value="-30"/>
				<param name="img_top" value="120"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<param name="posy" value="135" />
			</include>
		</definition>
	</include>

	<include name="SmallWidgetListPosterStacked">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="false"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="340"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>2</top>
				<right>0</right>
				<left>35</left>
				<height>541</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="230.5" height="393" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="SmallPosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="230.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="SmallPosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="255"/>
				<param name="top" value="-30"/>
				<param name="img_top" value="120"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<param name="posy" value="135" />
			</include>
		</definition>
	</include>

	<include name="FeatureWidgetListPoster">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="340"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>35</left>
				<height>875</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="455" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="FeaturePosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="455" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="FeaturePosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="495"/>
				<param name="top" value="-365"/>
				<param name="img_top" value="310"/>
				<param name="substitute_label_vis_cond" value="false"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="tagline_vis_cond" value="!String.IsEmpty(ListItem.Tagline)"/>
				<param name="textbox_height_1" value="500"/>
				<param name="textbox_height_2" value="500"/>
				<param name="textbox_height_3" value="500"/>
				<param name="textbox_height_4" value="500"/>
				<param name="textbox_height_5" value="500"/>
				<param name="textbox_height_6" value="500"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- -17 -->
				<param name="posy" value="-30" />
			</include>
		</definition>
	</include>

	<include name="FeatureWidgetListPosterStacked">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="false"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="235"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>2</top>
				<left>37</left>
				<right>0</right>
				<height>875</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="8,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="455" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="FeaturePosterLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="455" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="FeaturePosterLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<!-- <param name="clearlogo_vis_cond" value="!String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEqual(Skin.String(WidgetClearlogoSetting),1)"/>
				<param name="clearlogo_width" value="700"/>
				<param name="clearlogo_height" value="175"/> -->
				<param name="left" value="495"/>
				<param name="top" value="-365"/>
				<param name="img_top" value="310"/>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="substitute_label_vis_cond" value="false"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="tagline_vis_cond" value="!String.IsEmpty(ListItem.Tagline)"/>
				<param name="textbox_height_1" value="500"/>
				<param name="textbox_height_2" value="500"/>
				<param name="textbox_height_3" value="500"/>
				<param name="textbox_height_4" value="500"/>
				<param name="textbox_height_5" value="500"/>
				<param name="textbox_height_6" value="500"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- -17 -->
				<param name="posy" value="-30" />
			</include>
		</definition>
	</include>

	<include name="WidgetListLandscape">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>37</left>
				<height>570</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="613" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="LandscapeLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="613" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="LandscapeLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>SetLandscapeArtworkProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="640"/>
				<param name="top" value="-60"/>
				<param name="img_top" value="135"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="125" />
			</include>
		</definition>
	</include>

	<include name="WidgetListLandscapeStacked">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="false"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="225"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>2</top>
				<right>0</right>
				<left>37</left>
				<height>570</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="613" >
					<control type="group">
						<!-- <left>35</left> -->
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="LandscapeLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="613" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<!-- <left>35</left> -->
						<top>70</top>
						<include content="LandscapeLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>SetLandscapeArtworkProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="640"/>
				<param name="top" value="-60"/>
				<param name="img_top" value="135"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="125" />
			</include>
		</definition>
	</include>

	<include name="SmallWidgetListLandscape">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>37</left>
				<height>481</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="459.5" height="393" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="SmallLandscapeLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="459.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="SmallLandscapeLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeArtworkProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
				<param name="left" value="485"/>
				<param name="top" value="30"/>
				<param name="img_top" value="100"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="170" />
			</include>
		</definition>
	</include>

	<include name="SmallWidgetListLandscapeStacked">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="false"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>2</top>
				<right>0</right>
				<left>37</left>
				<height>481</height>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="459.5" height="393" >
					<control type="group">
						<left>0</left>
						<top>70</top>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="SmallLandscapeLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="459.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>70</top>
						<include content="SmallLandscapeLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>SetDBTypeProperty</include>
						<include>WidgetAutoInfoTimer</include>
						<include>ClearLandscapeArtworkProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="485"/>
				<param name="top" value="30"/>
				<param name="img_top" value="100"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="170" />
			</include>
		</definition>
	</include>

	<include name="WidgetListSquare">
		<param name="visible">true</param>
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="fallback_icon">DefaultFolder.png</param>
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<left>50</left>
				<right>0</right>
				<height>540</height>
				<onright>$PARAM[list_id]</onright>
				<movement>5</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="10,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="307.3" height="393">
					<control type="group">
						<top>80</top>
						<left>0</left>
						<!-- <include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include> -->
						<include content="SquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="307.3" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>80</top>
						<left>0</left>
						<include content="SquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
					<include>SetDBTypeProperty</include>
					<include>WidgetAutoInfoTimer</include>
					<include>ClearLandscapeProperties</include>
					<include>ClearStackedProperties</include>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
				<include>$PARAM[content_include]</include>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="337"/>
				<param name="top" value="-50"/>
				<param name="img_top" value="135"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="120" />
			</include>
		</definition>
	</include>

	<!-- <include name="WidgetListSquareSmall">
		<param name="visible">true</param>
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="fallback_icon">DefaultFolder.png</param>
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<left>50</left>
				<right>0</right>
				<height>497</height>
				<onright>$PARAM[list_id]</onright>
				<movement>6</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="10,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="262" height="393">
					<control type="group">
						<top>80</top>
						<left>0</left>
						<include content="WidgetAutoInfoAnimations">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include content="SmallSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="262" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>80</top>
						<left>0</left>
						<include content="SmallSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
					<include>SetDBTypeProperty</include>
					<include>WidgetAutoInfoTimer</include>
					<include>ClearLandscapeProperties</include>
					<include>ClearStackedProperties</include>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
				<include>$PARAM[content_include]</include>
			</control>
			<include content="WidgetInfo">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="left" value="297"/>
				<param name="top" value="-10"/>
				<param name="img_top" value="115"/>
				<param name="clearlogo_vis_cond" value="false"/>
				<param name="textbox_height_1" value="135"/>
				<param name="textbox_height_2" value="135"/>
				<param name="textbox_height_3" value="135"/>
				<param name="textbox_height_4" value="200"/>
				<param name="textbox_height_5" value="200"/>
				<param name="textbox_height_6" value="200"/>
			</include>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<param name="posy" value="137" />
			</include>
		</definition>
	</include> -->

	<include name="WidgetListSquareNoInfo">
		<param name="visible">true</param>
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="fallback_icon">DefaultFolder.png</param>
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<left>50</left>
				<right>0</right>
				<height>492</height>
				<onright>$PARAM[list_id]</onright>
				<movement>6</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="262" height="393">
					<control type="group">
						<top>80</top>
						<left>0</left>
						<include content="SmallSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="262" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>80</top>
						<left>0</left>
						<include content="SmallSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
					<include>SetDBTypeProperty</include>
					<include>ClearLandscapeProperties</include>
					<include>ClearStackedProperties</include>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
				<include>$PARAM[content_include]</include>
			</control>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 12 -->
				<param name="posy" value="147" />
			</include>
		</definition>
	</include>

	<include name="WidgetListCategory">
		<!-- <param name="item_limit">30</param> -->
		<!-- <param name="icon_height">230</param> -->
		<param name="icon">$PARAM[icon]</param>
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="240"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>50</left>
				<height>350</height>
				<onright>$PARAM[list_id]</onright>
				<movement>5</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="307.3" height="393">
					<control type="group">
						<left>0</left>
						<top>55</top>
						<include content="WidgetListCategoryLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="307.3" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>55</top>
						<include content="WidgetListCategoryLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
						<include>ClearLandscapeProperties</include>
						<include>ClearStackedProperties</include>
					</control>
				</focusedlayout>
				<content target="$PARAM[widget_target]" sortby="$PARAM[list_id]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="WidgetListCategoryStacked">
		<!-- <param name="item_limit">30</param> -->
		<!-- <param name="icon_height">230</param> -->
		<param name="icon">$PARAM[icon]</param>
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabelWidget">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListWidgetLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="240"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>50</left>
				<!-- 350 -->
				<height>350</height>
				<onright>$PARAM[list_id]</onright>
				<movement>10</movement>
				<include content="WidgetListCommonStacked">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<!-- <visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible> -->
				<itemlayout width="167" height="393">
					<control type="group">
						<left>0</left>
						<top>55</top>
						<animation condition="Window.IsVisible(Home) + Control.HasFocus($PARAM[list_id]1) + !String.IsEqual(Window(Home).Property(altus.$PARAM[list_id].Label),ListItem.Label)" reversible="true">
							<effect type="fade" start="100" end="60" time="300" tween="sine" easing="inout" />
							<effect type="fadediffuse" start="FFE9E9E9" end="FF4C4C4C" time="300" />
						</animation>
						<include content="WidgetListCategoryStackedLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="167" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>55</top>
						<animation condition="Window.IsVisible(Home) + Control.HasFocus($PARAM[list_id]1) + !String.IsEqual(Window(Home).Property(altus.$PARAM[list_id].Label),ListItem.Label)" reversible="true">
							<effect type="fade" start="100" end="60" time="300" tween="sine" easing="inout" />
							<effect type="fadediffuse" start="FFE9E9E9" end="FF4C4C4C" time="300" />
						</animation>
						<include content="WidgetListCategoryStackedLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
						<include>ClearLandscapeProperties</include>
						<include>SetStackedProperties</include>
					</control>
				</focusedlayout>
				<content target="$PARAM[widget_target]" sortby="$PARAM[list_id]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
			<include content="WidgetLeftRightArrows">
				<param name="list_id" value="$PARAM[list_id]" />
				<!-- 191 -->
				<param name="posy" value="240" />
			</include>
		</definition>
	</include>

	<include name="ImageWidget">
		<param name="visible">true</param>
		<param name="visible_1">true</param>
		<param name="visible_2">true</param>
		<param name="visible_3">true</param>
		<param name="button2_label">$LOCALIZE[31116]</param>
		<param name="button3_label">Return to the home screen</param>
		<param name="button2_onclick">true</param>
		<definition>
			<control type="group" id="$PARAM[button_id]889">
				<visible>$PARAM[visible]</visible>
				<control type="grouplist" id="$PARAM[button_id]577">
					<orientation>vertical</orientation>
					<top>90</top>
					<bottom>0</bottom>
					<left>$PARAM[left]</left>
					<right>50</right>
					<align>center</align>
					<control type="textbox">
						<width>100%</width>
						<height min="110" max="300">auto</height>
						<label>$PARAM[text_label]</label>
						<textcolor>unfocused_text</textcolor>
						<align>center</align>
						<font>font14</font>
					</control>
					<control type="grouplist" id="$PARAM[button_id]567">
						<itemgap>30</itemgap>
						<width>100%</width>
						<onup>9000</onup>
						<ondown>9000</ondown>
						<orientation>horizontal</orientation>
						<align>center</align>
						<onleft>9000</onleft>
						<control type="button" id="$PARAM[button_id]">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button_onclick]</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d">buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_1]</visible>
						</control>
						<control type="button" id="$PARAM[button_id]568">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button2_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button2_onclick]</onclick>
							<onclick>SetFocus(9000)</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d" >buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_2] + Window.IsActive(home)</visible>
						</control>
						<control type="button" id="$PARAM[button_id]569">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button3_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button3_onclick]</onclick>
							<onclick>SetFocus(9000)</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d" >buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_3] + Window.IsActive(1121)</visible>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetListPVR">
		<param name="item_treshold">0</param>
		<param name="item_limit">15</param>
		<!-- <param name="icon_height">230</param> -->
		<param name="icon">$PARAM[icon]</param>
		<param name="info_update">300</param>
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="item_treshold" value="$PARAM[item_treshold]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="140"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>50</left>
				<height>506</height>
				<onright>$PARAM[list_id]</onright>
				<movement>3</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<itemlayout width="460.3" height="393">
					<control type="group">
						<left>0</left>
						<top>55</top>
						<include content="WidgetListPVRLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="460.3" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<top>55</top>
						<include content="WidgetListPVRLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="WeatherWidget">
		<param name="visible">true</param>
		<definition>
			<include content="WeatherCategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListLabel">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="330"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<right>0</right>
				<left>48</left>
				<height>1100</height>
				<onright>$PARAM[list_id]</onright>
				<movement>5</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<!-- <animation effect="slide" end="5,0" time="300" condition="Control.HasFocus($PARAM[list_id])">Conditional</animation> -->
				<!-- <animation effect="fade" start="0" end="100" time="500" tween="sine" reversible="true" condition="Control.HasFocus($PARAM[list_id]) | Control.HasFocus(9000) | Control.HasFocus(700) | Control.HasFocus(733)">Conditional</animation> -->
				<visible>$PARAM[visible]</visible>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="307.3" height="393">
					<control type="group">
						<left>0</left>
						<include content="WeatherWidgetLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="307.3" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>0</left>
						<include content="WeatherWidgetLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<include>$PARAM[content_include]</include>
				<!-- <content target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content> -->
			</control>
		</definition>
	</include>

	<include name="HourlyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<onclick>noop</onclick>
				<visible>String.IsEmpty(Window(weather).Property(Hourly.IsFetched))</visible>
			</item>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="14" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="15" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="16" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="17" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="18" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="19" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="20" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="21" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="22" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="23" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="24" />
			</include>
		</content>
	</include>

	<include name="DailyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<onclick>noop</onclick>
				<visible>!Weather.IsFetched</visible>
			</item>
			<include content="WeatherDayItem">
				<param name="item_index" value="0" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="14" />
			</include>
		</content>
	</include>

	<include name="WeatherHourlyItem">
			<item>
				<label>[COLOR unfocused_text]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Time)][/COLOR]</label>
				<label2>[COLOR unfocused_text][B]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]  [COLOR unfocused_text]•[/B][/COLOR]  $INFO[Window(weather).Property(Hourly.$PARAM[item_index].Precipitation)][/COLOR]</label2>
				<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]</property>
				<property name="Outlook">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Outlook)]</property>
				<property name="Cloudiness">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Cloudiness)]</property>
				<property name="ShortDate">[COLOR darkgrey]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].ShortDate)][/COLOR]</property>
				<property name="FanartCode">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]</property>
				<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Hourly.$PARAM[item_index].OutlookIcon)]</thumb>
				<onclick>noop</onclick>
				<visible>!String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].Outlook))</visible>
			</item>
	</include>

	<include name="WeatherDailyItem">
		<item>
			<label>$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</label>
			<label2>[COLOR FFFF4C4C][B]$INFO[Window(weather).Property(Daily.$PARAM[item_index].HighTemperature)][/COLOR]  [COLOR unfocused_text]•[/COLOR]  [COLOR FF4C8CFF]$INFO[Window(weather).Property(Daily.$PARAM[item_index].LowTemperature)][/B][/COLOR]</label2>
			<property name="LongDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</property>
			<property name="TempDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].TempDay)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Cloudiness)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Outlook)]</property>
			<property name="ShortDate">[COLOR darkgrey]$INFO[Window(weather).Property(Daily.$PARAM[item_index].ShortDate)][/COLOR]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]</property>
			<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Daily.$PARAM[item_index].OutlookIcon)]</thumb>
			<onclick>noop</onclick>
			<visible>!String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].Outlook))</visible>
		</item>
	</include>

	<include name="WeatherDayItem">
		<item>
			<label>$INFO[Window(weather).Property(Day$PARAM[item_index].Title)]</label>
			<label2>[COLOR blue]$INFO[Window(weather).Property(Day$PARAM[item_index].LowTemp)]$INFO[System.TemperatureUnits][/COLOR] ∙ [COLOR red]$INFO[Window(weather).Property(Day$PARAM[item_index].HighTemp)]$INFO[System.TemperatureUnits][/COLOR]</label2>
			<property name="LongDay"></property>
			<property name="TempDay"></property>
			<property name="Cloudiness"></property>
			<property name="Outlook"></property>
			<property name="ShortDate"></property>
			<property name="FanartCode">$INFO[Window(weather).Property(Day$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Window(weather).Property(Day$PARAM[item_index].OutlookIcon)]</thumb>
			<onclick>noop</onclick>
			<visible>String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !String.IsEmpty(Window(weather).Property(Day$PARAM[item_index].Outlook))</visible>
		</item>
	</include>

	<include name="WeatherMapItem">
		<control type="group" id="700$PARAM[item_id]">
			<height>1110</height>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
			<centerleft>50%</centerleft>
			<width>1920</width>
			<control type="button" id="700$PARAM[item_id]0">
				<left>50</left>
				<top>100</top>
				<width>1820</width>
				<height>920</height>
				<onup>$PARAM[onup_id]</onup>
				<ondown>$PARAM[ondown_id]</ondown>
			</control>
			<control type="image" id="700$PARAM[item_id]1">
				<left>50</left>
				<top>100</top>
				<width>1820</width>
				<height>920</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image" id="700$PARAM[item_id]2">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Area)]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image" id="700$PARAM[item_id]3">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Layer)]</texture>
				<aspectratio>scale</aspectratio>
				<colordiffuse>B0FFFFFF</colordiffuse>
			</control>
			<control type="image" id="700$PARAM[item_id]4">
				<left>1000</left>
				<top>858</top>
				<width>340</width>
				<height>100</height>
				<texture border="21">buttons/button-nofo.png</texture>
			</control>
			<control type="image" id="700$PARAM[item_id]5">
				<left>1340</left>
				<top>880</top>
				<width>350</width>
				<height>55</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Legend)]</texture>
			</control>
		</control>
		<control type="label" id="700$PARAM[item_id]9">
			<left>1000</left>
			<top>0</top>
			<width>340</width>
			<height>100</height>
			<align>center</align>
			<aligny>center</aligny>
			<animation effect="slide" end="0,-92" time="0" condition="true">Conditional</animation>
			<font>font30_title</font>
			<label>$INFO[Window(weather).Property(Map.$PARAM[item_id].Heading)]</label>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</control>
	</include>

	<include name="WidgetListCommon">
		<scrolltime tween="cubic" easing="out">500</scrolltime>
		<orientation>horizontal</orientation>
		<include content="WidgetUnfocusedAnimations">
			<param name="list_id" value="$PARAM[list_id]"/>
		</include>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),0)">9000</onleft>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),1)">$PARAM[list_id]</onleft>
		<onright>$PARAM[list_id]</onright>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),1) | String.IsEqual(Skin.String(onBackSetting),2)">SetFocus($PARAM[list_id],0,absolute)</onback>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),0) | String.IsEqual(Skin.String(onBackSetting),2)">9000</onback>
		<preloaditems>2</preloaditems>
	</include>

	<include name="WidgetListCommonStacked">
		<scrolltime tween="cubic" easing="out">500</scrolltime>
		<orientation>horizontal</orientation>
		<include content="StackedWidgetAnimations">
			<param name="list_id" value="$PARAM[list_id]"/>
		</include>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),0)">9000</onleft>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),1)">$PARAM[list_id]</onleft>
		<onright>$PARAM[list_id]</onright>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),1) | String.IsEqual(Skin.String(onBackSetting),2)">SetFocus($PARAM[list_id],0,absolute)</onback>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),0) | String.IsEqual(Skin.String(onBackSetting),2)">9000</onback>
		<onfocus>RunScript(script.altus.helper,mode=widget_monitor&amp;list_id=$PARAM[list_id])</onfocus>
		<preloaditems>2</preloaditems>
	</include>

	<include name="BusyListLabel">
		<param name="posy">160</param>
		<!-- <param name="posx">50</param> -->
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]599">
				<height>180</height>
				<left>50</left>
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<visible>$PARAM[visible]</visible>
				<control type="label" id="$PARAM[list_id]600">
					<animation condition="true" reversible="true" pulse="true">
						<effect type="fade" start="100" end="10" time="900" tween="sine" easing="inout" />
					</animation>
					<top>$PARAM[posy]</top>
					<label>[I]Loading widget...[/I]</label>
					<font>font32_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
				</control>
			</control>
		</definition>
	</include>

	<include name="BusyListWidgetLabel">
		<param name="posy">285</param>
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]599">
				<height>180</height>
				<left>50</left>
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<visible>$PARAM[visible]</visible>
				<control type="label" id="$PARAM[list_id]600">
					<animation condition="true" reversible="true" pulse="true">
						<effect type="fade" start="100" end="10" time="900" tween="sine" easing="inout" />
					</animation>
					<top>$PARAM[posy]</top>
					<label>[I]Loading stacked widget...[/I]</label>
					<font>font32_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetScrollbar">
		<control type="group">
			<right>0</right>
			<width>60</width>
			<control type="scrollbar" id="$PARAM[scrollbar_id]">
				<right>0</right>
				<top>0</top>
				<bottom>0</bottom>
				<width>13</width>
				<onleft>50</onleft>
				<onright>50</onright>
				<orientation>vertical</orientation>
				<texturesliderbackground />
				<hitrect x="0" y="0" w="60" h="100%" />
				<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
				<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
				<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[scrollbar_id])">conditional</animation>
			</control>
		</control>
	</include>

	<include name="AltusSkinStringsInitialization">
		<onload condition="!Skin.HasSetting(firsttimerun)">ActivateWindow(1112)</onload>
		<onload condition="Skin.HasSetting(firsttimerun)">RunScript(script.altus.helper,mode=check_for_update&amp;skin_id=skin.altus)</onload>
		<onload>RunScript(script.altus.helper,mode=check_for_profile_change&amp;skin_id=skin.altus)</onload>
		<onload condition="String.IsEmpty(Window(Home).Property(altus.starting_widgets))">RunScript(script.altus.helper,mode=starting_widgets)</onload>
		<onload condition="String.IsEmpty(Window(Home).Property(altus.starting_widgets))">SetProperty(altus.starting_widgets,true)</onload>
		<onload condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onload>
		<onload condition="String.IsEmpty(Skin.String(BlurRadius))">Skin.SetString(BlurRadius,30)</onload>	
		<onload condition="String.IsEmpty(Skin.String(BlurSaturation))">Skin.SetString(BlurSaturation,1.5)</onload>
		<onload condition="String.IsEmpty(Skin.String(waitInterval))">Skin.SetString(waitInterval,1)</onload>	
		<onload condition="String.IsEmpty(Skin.String(onBackSetting))">Skin.SetString(onBackSetting,0)</onload>	
		<onload condition="String.IsEmpty(Skin.String(onLeftSetting))">Skin.SetString(onLeftSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(PlaybackDelayMins))">Skin.SetString(PlaybackDelayMins,30)</onload>
		<onload condition="String.IsEmpty(Skin.String(altus_category_widget_delay))">Skin.SetString(altus_category_widget_delay,750)</onload>
		<onload condition="String.IsEmpty(Skin.String(PlaybackDelaySecs))">Skin.SetString(PlaybackDelaySecs,1800)</onload>
		<onload condition="String.IsEmpty(Skin.String(WidgetAutoInfoDelay))">Skin.SetString(WidgetAutoInfoDelay,2)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowAutoInfoDelay))">Skin.SetString(PosterFlowAutoInfoDelay,2)</onload>
		<onload condition="String.IsEmpty(Skin.String(TrailerSource))">Skin.SetString(TrailerSource,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(current_search_provider))">Skin.SetString(current_search_provider,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OSDAudioButtonSetting))">Skin.SetString(OSDAudioButtonSetting,0)</onload>

		<!-- Initialize rating slots -->
		<onload condition="String.IsEmpty(Skin.String(RatingSlot1))">Skin.SetString(RatingSlot1,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot2))">Skin.SetString(RatingSlot2,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot3))">Skin.SetString(RatingSlot3,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot4))">Skin.SetString(RatingSlot4,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot5))">Skin.SetString(RatingSlot5,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot6))">Skin.SetString(RatingSlot6,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot7))">Skin.SetString(RatingSlot7,none)</onload>

		<onload condition="String.IsEmpty(Skin.String(WidgetClearlogoSetting))">Skin.SetString(WidgetClearlogoSetting,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterSizeSetting))">Skin.SetString(PosterSizeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeSizeSetting))">Skin.SetString(LandscapeSizeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(AutoInfoFadeSetting))">Skin.SetString(AutoInfoFadeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OSDSubtitleButtonSetting))">Skin.SetString(OSDSubtitleButtonSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OSDStyleSetting))">Skin.SetString(OSDStyleSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(MenuCaseSetting))">Skin.SetString(MenuCaseSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowOnDownSetting.MovieTV))">Skin.SetString(PosterFlowOnDownSetting.MovieTV,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowOnDownSetting.Other))">Skin.SetString(PosterFlowOnDownSetting.Other,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnRightSetting.MovieTV))">Skin.SetString(OnRightSetting.MovieTV,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnRightSetting.Other))">Skin.SetString(OnRightSetting.Other,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnRightSetting))">Skin.SetString(OnRightSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(MenuSelectorColorThemeSetting))">Skin.SetString(MenuSelectorColorThemeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(FocusColorThemeSetting))">Skin.SetString(FocusColorThemeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(HomeItemArtworkChoice))">Skin.SetString(HomeItemArtworkChoice,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.movies))">Skin.SetString(ListArtworkChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.tvshows))">Skin.SetString(ListArtworkChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.seasons))">Skin.SetString(ListArtworkChoice.seasons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.episodes))">Skin.SetString(ListArtworkChoice.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.videos))">Skin.SetString(ListArtworkChoice.videos,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.addons))">Skin.SetString(ListArtworkChoice.addons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.files))">Skin.SetString(ListArtworkChoice.files,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.favourites))">Skin.SetString(ListArtworkChoice.favourites,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.))">Skin.SetString(ListArtworkChoice.,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.movies))">Skin.SetString(ListLandscape.movies,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.tvshows))">Skin.SetString(ListLandscape.tvshows,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.seasons))">Skin.SetString(ListLandscape.seasons,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.episodes))">Skin.SetString(ListLandscape.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.movies))">Skin.SetString(ItemFanartChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.tvshows))">Skin.SetString(ItemFanartChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.seasons))">Skin.SetString(ItemFanartChoice.seasons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemClearlogoChoice.movies))">Skin.SetString(ItemClearlogoChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemClearlogoChoice.tvshows))">Skin.SetString(ItemClearlogoChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemClearlogoChoice.seasons))">Skin.SetString(ItemClearlogoChoice.seasons,0)</onload>
		<onload condition="!String.IsEmpty(Skin.String(mdblist_api_key)) + String.IsEmpty(Skin.String(valid_api_key))">RunScript(script.altus.helper, mode=check_api_key_on_load)</onload>
	</include>

</includes>