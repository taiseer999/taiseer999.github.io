<?xml version="1.0" encoding="UTF-8"?>
<includes>

  <include name="Seekbar">
		<!-- DEFAULT -->
		<control type="group">
			<animation effect="fade" time="500">VisibleChange</animation>
			<control type="group">
				<left>120</left>
				<top>100</top>
				<width>1680</width>
				<height>12</height>
				<control type="group">
					<visible>!VideoPlayer.HasEPG</visible>
					<control type="progress">
						<texturebg colordiffuse="osd_grey">osd/ProgressBack.png</texturebg>
						<midtexture colordiffuse="player_cache">osd/Progress.png</midtexture>
						<info>Player.ProgressCache</info>
					</control>
					<control type="progress">
						<texturebg colordiffuse="00FFFFFF">osd/ProgressBack.png</texturebg>
						<midtexture colordiffuse="accent_color">osd/Progress.png</midtexture>
						<info>Player.Progress</info>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.HasEPG</visible>
					<control type="progress">
						<texturebg colordiffuse="osd_grey">osd/ProgressBack.png</texturebg>
						<midtexture colordiffuse="accent_color">osd/Progress.png</midtexture>
						<info>PVR.TimeshiftProgressPlayPos</info>
						<info2>PVR.TimeshiftProgressEpgStart</info2>
					</control>
					<!-- <control type="progress">
						<texturebg colordiffuse="00FFFFFF">osd/ProgressBack.png</texturebg>
						<midtexture colordiffuse="player_cache">osd/Progress.png</midtexture>
						<info>PVR.TimeshiftProgressEpgEnd</info>
						<info2>PVR.TimeshiftProgressPlayPos</info2>
					</control> -->
				</control>
			</control>
			<control type="ranges">
				<left>120</left>
				<top>101.3</top>
				<width>1680</width>
				<height>3</height>
				<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
				<righttexture colordiffuse="white">osd/Chapter.png</righttexture>
				<info>Player.Chapters</info>
			</control>
			<control type="slider" id="401">
				<left>120</left>
				<top>100</top>
				<width>1680</width>
				<height>12</height>
				<orientation>horizontal</orientation>
				<texturesliderbar colordiffuse="00ffffff">osd/ProgressBack.png</texturesliderbar>
				<textureslidernib colordiffuse="unfocused_text">osd/Progress.png</textureslidernib>
				<textureslidernibfocus colordiffuse="unfocused_text">osd/Progress.png</textureslidernibfocus>
				<visible>Player.SeekEnabled + Player.Seeking</visible>
			</control>
			<control type="label">
				<visible>!Window.IsActive(VideoOSD.xml)</visible>
				<top>123</top>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<align>center</align>
				<label>$VAR[SeekLabel]</label>
			</control>
			<control type="label">
				<visible>Player.IsTempo</visible>
				<top>47</top>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<align>center</align>
				<label>$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</label>
			</control>
			<!-- <control type="label">
				<top>47</top>
				<left>120</left>
				<width>auto</width>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<label>$VAR[Resolution_Label]$VAR[AudioCodec_Label]$VAR[AudioChannels_Label]</label>
			</control> -->
			<!-- <control type="image">
				<top>20</top>
				<left>120</left>
				<width>175</width>
				<height>68</height>
				<texture colordiffuse="artwork_dim" background="true">$VAR[PlayerClearLogoVar]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>String.IsEmpty(Skin.String(ToggleLabel))</visible>
				<animation effect="fade" time="500">VisibleChange</animation>
			</control> -->
			<control type="group">
				<control type="label">
					<top>47</top>
					<left>123</left>
					<width>1400</width>
					<height>40</height>
					<font>PlayerTime</font>
					<textcolor>osd_light</textcolor>
					<label>$VAR[NowPlayingLabelVar]</label>
					<visible>String.IsEmpty(Skin.String(ToggleLabel))</visible>
					<animation effect="fade" time="500">VisibleChange</animation>
					<scroll>true</scroll>
					<scrollspeed>250</scrollspeed>
				</control>
				<control type="label">
					<top>47</top>
					<left>120</left>
					<width>1400</width>
					<height>40</height>
					<font>PlayerTime</font>
					<textcolor>osd_light</textcolor>
					<label>$VAR[Resolution_Label]$VAR[AudioCodec_Label]$VAR[AudioChannels_Label]</label>
					<visible>!String.IsEmpty(Skin.String(ToggleLabel))</visible>
					<animation effect="fade" time="500">VisibleChange</animation>
					<scroll>true</scroll>
					<scrollspeed>250</scrollspeed>
				</control>
			</control>
			<control type="label">
				<top>123</top>
				<left>120</left>
				<width>auto</width>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<label>$VAR[PlayerElapsedTimeVar]</label>
			</control>
			<!-- <control type="label">
				<visible>!String.IsEqual(Player.Time(h), 0)</visible>
				<top>120</top>
				<left>120</left>
				<width>auto</width>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<label>$INFO[Player.Time(h:mm:ss)]</label>
			</control> -->
			<control type="label">
				<visible>String.IsEmpty(Window(home).Property(LanguageNotification)) + !Control.IsVisible(33000)</visible>
				<top>47</top>
				<right>120</right>
				<width>390</width>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<align>right</align>
				<label>$VAR[PlayerEndTimeVar]</label>
			</control>
			<control type="label">
				<top>123</top>
				<right>120</right>
				<width>200</width>
				<height>40</height>
				<font>PlayerTime</font>
				<textcolor>osd_light</textcolor>
				<align>right</align>
				<label>$VAR[PlayerTimeRemainingVar]</label>
			</control>
		</control>
	</include>


		<include name="OD_Seekbar">
			<!-- DETAILED -->
			<control type="group">
				<animation effect="fade" time="500">VisibleChange</animation>
				<control type="group">
					<left>0</left>
					<bottom>0</bottom>
					<width>100%</width>
					<height>16</height>
					<control type="group">
						<visible>!VideoPlayer.HasEPG</visible>
						<control type="progress">
							<texturebg colordiffuse="4da0a0a0">osd/Progress.png</texturebg>
							<midtexture colordiffuse="player_cache">osd/Progress.png</midtexture>
							<info>Player.ProgressCache</info>
						</control>
						<control type="progress">
							<texturebg colordiffuse="00FFFFFF">osd/ProgressBack.png</texturebg>
							<midtexture colordiffuse="accent_color">osd/Progress.png</midtexture>
							<info>Player.Progress</info>
						</control>
					</control>
					<control type="group">
						<visible>VideoPlayer.HasEPG</visible>
						<control type="progress">
							<texturebg colordiffuse="4da0a0a0">osd/Progress.png</texturebg>
							<midtexture colordiffuse="accent_color">osd/Progress.png</midtexture>
							<info>PVR.TimeshiftProgressPlayPos</info>
							<info2>PVR.TimeshiftProgressEpgStart</info2>
						</control>
						<!-- <control type="progress">
							<texturebg colordiffuse="00FFFFFF">osd/ProgressBack.png</texturebg>
							<midtexture colordiffuse="player_cache">osd/Progress.png</midtexture>
							<info>PVR.TimeshiftProgressEpgEnd</info>
							<info2>PVR.TimeshiftProgressPlayPos</info2>
						</control> -->
					</control>
				</control>
				<control type="ranges">
					<left>0</left>
					<bottom>16</bottom>
					<width>100%</width>
					<height>16</height>
					<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
					<righttexture colordiffuse="white">osd/Chapter.png</righttexture>
					<info>Player.Chapters</info>
				</control>
				<control type="slider" id="401">
					<left>0</left>
					<bottom>16</bottom>
					<width>100%</width>
					<height>16</height>
					<orientation>horizontal</orientation>
					<texturesliderbar colordiffuse="00ffffff">osd/ProgressBack.png</texturesliderbar>
					<textureslidernib colordiffuse="unfocused_text">osd/Progress.png</textureslidernib>
					<textureslidernibfocus colordiffuse="unfocused_text">osd/Progress.png</textureslidernibfocus>
					<visible>Player.SeekEnabled + Player.Seeking</visible>
				</control>
				<control type="group">
					<!-- <visible>[!VideoPlayer.Content(livetv) + !Window.IsActive(VideoOSD.xml)] | VideoPlayer.Content(livetv)</visible> -->
					<bottom>60</bottom>
					<!-- <width>auto</width> -->
					<height>40</height>
					<control type="label">
						<top>2</top>
						<align>center</align>
						<font>PlayerTime</font>
						<textcolor>osd_light</textcolor>
						<label>$VAR[SeekLabel]</label>
						<visible>Player.Seeking | Player.Forwarding | Player.Rewinding</visible>
					</control>
					<control type="label">
						<top>2</top>
						<!-- <animation condition="VideoPlayer.Content(livetv)" reversible="true">
							<effect type="slide" start="0,0" end="23,0" time="0" />
						</animation> -->
						<font>PlayerTime</font>
						<textcolor>osd_light</textcolor>
						<label>$VAR[PausedLabel]$VAR[PlayerElapsedTimeVar] [B]/[/B] $VAR[PlayerDurationVar]</label>
						<align>center</align>
						<visible>![Player.Seeking | Player.Forwarding | Player.Rewinding]</visible>
					</control>
					<control type="label">
						<!-- <width>612</width>
						<left>1095</left> -->
						<top>-37</top>
						<align>center</align>
						<font>PlayerTime</font>
						<textcolor>osd_light</textcolor>
						<label>$VAR[OSDNextLabelVar]</label>
						<scroll>true</scroll>
						<scrollspeed>100</scrollspeed>
						<align>center</align>
						<!-- <visible>![Player.Seeking | Player.Forwarding | Player.Rewinding]</visible> -->
						<!-- <visible>VideoPlayer.Content(livetv)</visible> -->
					</control>
				</control>
				<!-- <control type="label">
					<visible>Player.IsTempo</visible>
					<top>47</top>
					<height>40</height>
					<font>PlayerTime</font>
					<textcolor>osd_light</textcolor>
					<align>center</align>
					<label>$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</label>
				</control> -->
				<control type="image">
					<left>99</left>
					<top>-763</top>
					<width>550</width>
					<height>213</height>
					<!-- <height>153</height> -->
					<texture>$VAR[PlayerClearLogoVar]</texture>
					<aspectratio align="left" aligny="top">keep</aspectratio>
					<visible>!VideoPlayer.Content(livetv) + !Skin.HasSetting(Disable.OSDClearlogo)</visible>
				</control>
				<control type="image">
					<left>99</left>
					<top>-763</top>
					<width>350</width>
					<height>136</height>
					<!-- <height>153</height> -->
					<texture>$INFO[Player.Icon]</texture>
					<aspectratio align="left" aligny="top">keep</aspectratio>
					<visible>VideoPlayer.Content(livetv) + !Skin.HasSetting(Disable.OSDClearlogo)</visible>
				</control>
				<control type="textbox">
					<top>-763</top>
					<left>99</left>
					<right>399</right>
					<height>auto</height>
					<font>font_MainMenu</font>
					<textcolor>osd_light</textcolor>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[NowPlayingBreadcrumbsVar]</label>
					<visible>!VideoPlayer.Content(livetv) + [[String.IsEmpty(Player.Art(clearlogo)) + String.IsEmpty(Player.Art(tvshow.clearlogo))] | [Skin.HasSetting(Disable.OSDClearlogo) + !Skin.HasSetting(Disable.OSDTitle)]]</visible>
				</control>
				<control type="image">
					<top>-763</top>
					<right>99</right>
					<width>194</width>
					<height>153</height>
					<fadetime>0</fadetime>
					<aspectratio align="right" aligny="top">keep</aspectratio>
					<texture>$INFO[$PARAM[infolabel_prefix]VideoPlayer.Studio,resource://resource.images.studios.coloured/,.png]</texture>
					<visible>!Skin.HasSetting(Disable.OSDStudiologo)</visible>
				</control>
				<control type="textbox">
					<visible>!String.IsEmpty(VideoPlayer.Plot)</visible>
					<top>-95</top>
					<left>88</left>
					<height>180</height>
					<width>1744</width>
					<font>PlayerTime</font>
					<textcolor>osd_light</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$VAR[DynamicContentInfo]</label>
					<autoscroll delay="10000" time="5000" repeat="10000">Window.IsVisible(seekbar)</autoscroll>
				</control>
				<control type="grouplist">
					<bottom>60</bottom>
					<right>50</right>
					<height>54</height>
					<orientation>horizontal</orientation>
					<itemgap>12</itemgap>
					<aligny>center</aligny>
					<align>right</align>
					<animation condition="VideoPlayer.Content(livetv)" reversible="true">
						<effect type="slide" start="0,0" end="0,-839.5" time="500" tween="cubic" easing="inout" />
					</animation>
					<!-- <visible>![Window.IsVisible(dialogbusy) | Player.HasMedia] + $EXP[isContent] + !String.IsEmpty(ListItem.Genre)</visible> -->
					<visible>[!VideoPlayer.Content(livetv) + !Window.IsActive(VideoOSD.xml)] | VideoPlayer.Content(livetv)</visible>
					<include content="DO_FlixInfoIcon">
						<param name="flixlabel" value="$VAR[DO_Resolution_Label]"/>
						<param name="visible" value="!String.IsEmpty(VideoPlayer.VideoResolution) + !Skin.HasSetting(Disable.OSDVideoCodec)"/>
					</include>
					<include content="DO_FlixInfoIcon">
						<param name="flixlabel" value="$VAR[DO_AudioCodec_Label]"/>
						<param name="visible" value="!String.IsEmpty(VideoPlayer.AudioCodec) + !Skin.HasSetting(Disable.OSDAudioCodec)"/>
					</include>
					<include content="DO_FlixInfoIcon">
						<param name="flixlabel" value="$VAR[AudioChannels_Label]"/>
						<param name="visible" value="!String.IsEmpty(VideoPlayer.AudioChannels) + !Skin.HasSetting(Disable.OSDAudioChannels)"/>
					</include>
				</control>
				<include condition="!String.IsEmpty(Skin.String(valid_api_key))" content="HorizontalRatings">
					<param name="left" value="50"/>
					<param name="top" value="120"/>
					<param name="visible" value="!String.IsEmpty(VideoPlayer.Genre) + 
						!Window.IsVisible(videoosd) + 
						!Skin.HasSetting(Disable.OSDRatings) +
						[
								[String.IsEqual(Skin.String(RatingSlot1),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] | 
								[String.IsEqual(Skin.String(RatingSlot1),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot1),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot1),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot1),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot1),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot1),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot1),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot1),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot2),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] |
								[String.IsEqual(Skin.String(RatingSlot2),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot2),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot2),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot2),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot2),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot2),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot2),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot2),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot3),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] |
								[String.IsEqual(Skin.String(RatingSlot3),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot3),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot3),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot3),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot3),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot3),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot3),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot3),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot4),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] |
								[String.IsEqual(Skin.String(RatingSlot4),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot4),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot4),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot4),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot4),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot4),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot4),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot4),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot5),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] |
								[String.IsEqual(Skin.String(RatingSlot5),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot5),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot5),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot5),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot5),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot5),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot5),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot5),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot6),metacritic) + !String.IsEmpty(Window(Home).Property(nimbus.metascore))] |
								[String.IsEqual(Skin.String(RatingSlot6),trakt) + !String.IsEmpty(Window(Home).Property(nimbus.traktRating))] |
								[String.IsEqual(Skin.String(RatingSlot6),letterboxd) + !String.IsEmpty(Window(Home).Property(nimbus.letterboxdRating)) + !String.IsEqual(Window(Home).Property(nimbus.letterboxdRating),0.0)] |
								[String.IsEqual(Skin.String(RatingSlot6),mdblist) + !String.IsEmpty(Window(Home).Property(nimbus.mdblistRating))] |
								[String.IsEqual(Skin.String(RatingSlot6),rtc) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoMeter))] |
								[String.IsEqual(Skin.String(RatingSlot6),rta) + !String.IsEmpty(Window(Home).Property(nimbus.tomatoUserMeter))] |
								[String.IsEqual(Skin.String(RatingSlot6),imdb) + !String.IsEmpty(Window(Home).Property(nimbus.imdbRating))] |
								[String.IsEqual(Skin.String(RatingSlot6),imdbpop) + !String.IsEmpty(Window(Home).Property(nimbus.popularRating))] |
								[String.IsEqual(Skin.String(RatingSlot6),tmdb) + !String.IsEmpty(Window(Home).Property(nimbus.tmdbRating))]
						]"/>
				</include>
			</control>
		</include>

		<include name="OSDBackgrounds">
			<control type="image">
				<animation condition="String.IsEqual(Skin.String(OSDStyleSetting),1)" reversible="true">
					<effect type="slide" start="0,0" end="0,-330" time="500" tween="cubic" easing="inout" />
				</animation>
				<bottom>-330</bottom>
				<height>550</height>
				<texture colordiffuse="$VAR[OSDTextureColorVar]">$VAR[OSDTextureVar]</texture>
				<visible>!String.IsEqual(Skin.String(OSDStyleSetting),1) | 
					![
						[VideoPlayer.Content(episodes) + Skin.HasSetting(Disable.OSDEpisodeInfo) + Skin.HasSetting(Disable.OSDEpisodePlot)] | 
						[!VideoPlayer.Content(episodes) + !VideoPlayer.Content(livetv) + Skin.HasSetting(Disable.OSDMoviePlot)]
					]
				</visible>
			</control>
			<control type="image">
				<bottom>0</bottom>
				<height>370</height>
				<texture colordiffuse="$VAR[OSDTextureColorVar]">$VAR[OSDTextureVar]</texture>
				<visible>String.IsEqual(Skin.String(OSDStyleSetting),1) + 
					[
						[VideoPlayer.Content(episodes) + Skin.HasSetting(Disable.OSDEpisodeInfo) + Skin.HasSetting(Disable.OSDEpisodePlot)] | 
						[!VideoPlayer.Content(episodes) + !VideoPlayer.Content(livetv) + Skin.HasSetting(Disable.OSDMoviePlot)]
					]
				</visible>
			</control>
			<control type="image">
				<visible>String.IsEqual(Skin.String(OSDStyleSetting),1) + [!Skin.HasSetting(Disable.OSDClearlogo) | !Skin.HasSetting(Disable.OSDTitle) | !Skin.HasSetting(Disable.OSDStudiologo)]</visible>
				<top>0</top>
				<height>550</height>
				<texture flipy="true" colordiffuse="ed080808">osd/osdoverlay.png</texture>
			</control>
		</include>

</includes>